{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveAddressOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\n/** Resolve an ETH address and find the ENS name. */\nexports.resolveAddressOperation = {\n  method: 'GET',\n  name: 'resolveAddress',\n  id: 'resolveAddress',\n  groupName: 'resolve',\n  isNullable: true,\n  urlPathPattern: '/resolve/{address}/reverse',\n  urlPathParamNames: ['address'],\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    address: (0, common_core_1.maybe)(request.address, function (address) {\n      return dataTypes_1.EvmAddress.create(address, core).checksum;\n    })\n  };\n}\nfunction deserializeResponse(jsonResponse) {\n  return jsonResponse;\n}\nfunction serializeRequest(request, core) {\n  return {\n    address: (0, common_core_1.maybe)(request.address, function (address) {\n      return dataTypes_1.EvmAddress.create(address, core).checksum;\n    })\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    address: (0, common_core_1.maybe)(jsonRequest.address, function (address) {\n      return dataTypes_1.EvmAddress.create(address, core);\n    })\n  };\n}","map":{"version":3,"sources":["../../../src/operations/resolve/resolveAddressOperation.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AA0BA;AACa,OAAA,CAAA,uBAAuB,GAKhC;EACF,MAAM,EAAE,KAAK;EACb,IAAI,EAAE,gBAAgB;EACtB,EAAE,EAAE,gBAAgB;EACpB,SAAS,EAAE,SAAS;EACpB,UAAU,EAAE,IAAI;EAChB,cAAc,EAAE,4BAA4B;EAC5C,iBAAiB,EAAE,CAAC,SAAS,CAAC;EAE9B,mBAAmB,EAAA,mBAAA;EACnB,gBAAgB,EAAA,gBAAA;EAChB,kBAAkB,EAAA,kBAAA;EAClB,mBAAmB,EAAA;CACpB;AAED;AAEA,SAAS,mBAAmB,CAAC,OAA8B,EAAE,IAAU,EAAA;EACrE,OAAO;IACL,OAAO,EAAE,CAAA,CAAA,EAAA,aAAA,CAAA,KAAK,EAAC,OAAO,CAAC,OAAO,EAAE,UAAC,OAAO,EAAA;MAAK,OAAA,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,QAAQ;IAAzC,CAAyC;GACvF;AACH;AAEA,SAAS,mBAAmB,CAAC,YAAwC,EAAA;EACnE,OAAO,YAAY;AACrB;AAEA,SAAS,gBAAgB,CAAC,OAA8B,EAAE,IAAU,EAAA;EAClE,OAAO;IACL,OAAO,EAAE,CAAA,CAAA,EAAA,aAAA,CAAA,KAAK,EAAC,OAAO,CAAC,OAAO,EAAE,UAAC,OAAO,EAAA;MAAK,OAAA,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,QAAQ;IAAzC,CAAyC;GACvF;AACH;AAEA,SAAS,kBAAkB,CAAC,WAAsC,EAAE,IAAU,EAAA;EAC5E,OAAO;IACL,OAAO,EAAE,CAAA,CAAA,EAAA,aAAA,CAAA,KAAK,EAAC,WAAW,CAAC,OAAO,EAAE,UAAC,OAAO,EAAA;MAAK,OAAA,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC;IAAhC,CAAgC;GAClF;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveAddressOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\n/** Resolve an ETH address and find the ENS name. */\nexports.resolveAddressOperation = {\n    method: 'GET',\n    name: 'resolveAddress',\n    id: 'resolveAddress',\n    groupName: 'resolve',\n    isNullable: true,\n    urlPathPattern: '/resolve/{address}/reverse',\n    urlPathParamNames: ['address'],\n    getRequestUrlParams: getRequestUrlParams,\n    serializeRequest: serializeRequest,\n    deserializeRequest: deserializeRequest,\n    deserializeResponse: deserializeResponse,\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n    return {\n        address: (0, common_core_1.maybe)(request.address, function (address) { return dataTypes_1.EvmAddress.create(address, core).checksum; }),\n    };\n}\nfunction deserializeResponse(jsonResponse) {\n    return jsonResponse;\n}\nfunction serializeRequest(request, core) {\n    return {\n        address: (0, common_core_1.maybe)(request.address, function (address) { return dataTypes_1.EvmAddress.create(address, core).checksum; }),\n    };\n}\nfunction deserializeRequest(jsonRequest, core) {\n    return {\n        address: (0, common_core_1.maybe)(jsonRequest.address, function (address) { return dataTypes_1.EvmAddress.create(address, core); }),\n    };\n}\n//# sourceMappingURL=resolveAddressOperation.js.map"]},"metadata":{},"sourceType":"script"}