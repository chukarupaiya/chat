{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Config = void 0;\nvar Error_1 = require(\"../Error\");\nvar Config = /** @class */function () {\n  function Config() {\n    this.items = new Map();\n  }\n  Config.prototype.registerKey = function (key, validator) {\n    if (this.items.has(key.name)) {\n      throw new Error_1.CoreError({\n        code: Error_1.CoreErrorCode.CONFIG_KEY_ALREADY_EXIST,\n        message: \"Key \\\"\".concat(key.name, \"\\\" is already registered\")\n      });\n    }\n    this.items.set(key.name, {\n      key: key,\n      value: key.defaultValue,\n      validator: validator\n    });\n  };\n  Config.prototype.getKeys = function () {\n    return Array.from(this.items.keys());\n  };\n  Config.prototype.hasKey = function (key) {\n    return this.items.has(key.name);\n  };\n  Config.prototype.get = function (keyOrName) {\n    return this.getItem(keyOrName).value;\n  };\n  Config.prototype.set = function (keyOrName, value) {\n    var item = this.getItem(keyOrName);\n    var error = item.validator ? item.validator(value) : null;\n    if (error) {\n      throw new Error_1.CoreError({\n        code: Error_1.CoreErrorCode.CONFIG_INVALID_VALUE,\n        message: \"Cannot set this config. Invalid value for \\\"\".concat(item.key.name, \"\\\". \").concat(error)\n      });\n    }\n    item.value = value;\n  };\n  Config.prototype.merge = function (values) {\n    var _this = this;\n    Object.keys(values).forEach(function (keyName) {\n      _this.set(keyName, values[keyName]);\n    });\n  };\n  Config.prototype.reset = function () {\n    this.items.forEach(function (item) {\n      item.value = item.key.defaultValue;\n    });\n  };\n  Config.prototype.getItem = function (keyOrName) {\n    var keyName = typeof keyOrName === 'string' ? keyOrName : keyOrName.name;\n    var item = this.items.get(keyName);\n    if (!item) {\n      // This error occurs when a user tries to set a value for a specific key, but the key is not registered.\n      // That situation may occur, when a moralis module is not registered (all keys are registered in the module setup step).\n      // If you have this error, you should fix your code. Firstly, you should register all modules, later you can modify the configuration.\n      throw new Error_1.CoreError({\n        code: Error_1.CoreErrorCode.CONFIG_KEY_NOT_EXIST,\n        message: \"Key \\\"\".concat(keyName, \"\\\" is unregistered. Have you registered all required modules?\")\n      });\n    }\n    return item;\n  };\n  return Config;\n}();\nexports.Config = Config;","map":{"version":3,"sources":["../../src/Config/Config.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Config = void 0;\nvar Error_1 = require(\"../Error\");\nvar Config = /** @class */ (function () {\n    function Config() {\n        this.items = new Map();\n    }\n    Config.prototype.registerKey = function (key, validator) {\n        if (this.items.has(key.name)) {\n            throw new Error_1.CoreError({\n                code: Error_1.CoreErrorCode.CONFIG_KEY_ALREADY_EXIST,\n                message: \"Key \\\"\".concat(key.name, \"\\\" is already registered\"),\n            });\n        }\n        this.items.set(key.name, { key: key, value: key.defaultValue, validator: validator });\n    };\n    Config.prototype.getKeys = function () {\n        return Array.from(this.items.keys());\n    };\n    Config.prototype.hasKey = function (key) {\n        return this.items.has(key.name);\n    };\n    Config.prototype.get = function (keyOrName) {\n        return this.getItem(keyOrName).value;\n    };\n    Config.prototype.set = function (keyOrName, value) {\n        var item = this.getItem(keyOrName);\n        var error = item.validator ? item.validator(value) : null;\n        if (error) {\n            throw new Error_1.CoreError({\n                code: Error_1.CoreErrorCode.CONFIG_INVALID_VALUE,\n                message: \"Cannot set this config. Invalid value for \\\"\".concat(item.key.name, \"\\\". \").concat(error),\n            });\n        }\n        item.value = value;\n    };\n    Config.prototype.merge = function (values) {\n        var _this = this;\n        Object.keys(values).forEach(function (keyName) {\n            _this.set(keyName, values[keyName]);\n        });\n    };\n    Config.prototype.reset = function () {\n        this.items.forEach(function (item) {\n            item.value = item.key.defaultValue;\n        });\n    };\n    Config.prototype.getItem = function (keyOrName) {\n        var keyName = typeof keyOrName === 'string' ? keyOrName : keyOrName.name;\n        var item = this.items.get(keyName);\n        if (!item) {\n            // This error occurs when a user tries to set a value for a specific key, but the key is not registered.\n            // That situation may occur, when a moralis module is not registered (all keys are registered in the module setup step).\n            // If you have this error, you should fix your code. Firstly, you should register all modules, later you can modify the configuration.\n            throw new Error_1.CoreError({\n                code: Error_1.CoreErrorCode.CONFIG_KEY_NOT_EXIST,\n                message: \"Key \\\"\".concat(keyName, \"\\\" is unregistered. Have you registered all required modules?\"),\n            });\n        }\n        return item;\n    };\n    return Config;\n}());\nexports.Config = Config;\n//# sourceMappingURL=Config.js.map"]},"metadata":{},"sourceType":"script"}