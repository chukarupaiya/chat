{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EvmBlock = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar EvmAddress_1 = require(\"../EvmAddress\");\nvar EvmChain_1 = require(\"../EvmChain\");\nvar EvmTransaction_1 = require(\"../EvmTransaction\");\nvar EvmSimpleBlock_1 = require(\"./EvmSimpleBlock\");\n/**\n * The EvmBlock is a representation of a block.\n *\n * @category DataType\n */\nvar EvmBlock = /** @class */function () {\n  function EvmBlock(data, core) {\n    this._data = EvmBlock.parse(data, core);\n  }\n  /**\n   * Create a new instance of EvmBlock from any valid transaction input\n   * @param data - the EvmBlockish type\n   * @example const transaction = EvmTransaction.create(data);\n   */\n  EvmBlock.create = function (data, core) {\n    if (data instanceof EvmBlock) {\n      return data;\n    }\n    var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n    return new EvmBlock(data, finalCore);\n  };\n  /**\n   * Check the equality between two Evm blocks. It compares their hashes and blocks.\n   * @param dataA - The first block to compare\n   * @param dataB - The second block to compare\n   * @example EvmTransaction.equals(dataA, dataB)\n   */\n  EvmBlock.equals = function (dataA, dataB) {\n    var blockA = EvmSimpleBlock_1.EvmSimpleBlock.create(dataA);\n    var blockB = EvmSimpleBlock_1.EvmSimpleBlock.create(dataB);\n    if (!blockA.chain.equals(blockB.chain)) {\n      return false;\n    }\n    if (blockA.hash !== blockB.hash) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Checks the equality of the current block with another evm block\n   * @param data - the block to compare with\n   * @example\n   * ```ts\n   * block.equals(data)\n   * ```\n   */\n  EvmBlock.prototype.equals = function (data) {\n    return EvmBlock.equals(this, data);\n  };\n  /**\n   * @returns a JSON represention of the block.\n   * @example\n   * ```\n   * block.toJSON()\n   * ```\n   */\n  EvmBlock.prototype.toJSON = function () {\n    var data = this._data;\n    return __assign(__assign({}, data), {\n      number: data.number.toString(),\n      difficulty: data.difficulty.toString(),\n      totalDifficulty: data.totalDifficulty.toString(),\n      size: data.size.toString(),\n      gasLimit: data.gasLimit.toString(),\n      gasUsed: data.gasUsed.toString(),\n      chain: data.chain.format(),\n      miner: data.miner.format(),\n      transactions: data.transactions.map(function (transaction) {\n        return transaction.toJSON();\n      })\n    });\n  };\n  /**\n   * @returns a JSON represention of the block.\n   * @example\n   * ```\n   * block.format()\n   * ```\n   */\n  EvmBlock.prototype.format = function () {\n    return this.toJSON();\n  };\n  Object.defineProperty(EvmBlock.prototype, \"result\", {\n    /**\n     * @returns all the data without casting it to JSON.\n     * @example block.result\n     */\n    get: function () {\n      return this._data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"number\", {\n    /**\n     * @returns the block number.\n     * @example block.number // BigNumber\n     */\n    get: function () {\n      return this._data.number;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"hash\", {\n    /**\n     * @returns the block hash.\n     * @example block.hash // \"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171\"\n     */\n    get: function () {\n      return this._data.hash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"timestamp\", {\n    /**\n     * @returns the block timestamp.\n     * @example block.timestamp // Date\n     */\n    get: function () {\n      return this._data.timestamp;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"miner\", {\n    /**\n     * @returns the block miner.\n     * @example block.miner // EvmAddress\n     */\n    get: function () {\n      return this._data.miner;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"difficulty\", {\n    /**\n     * @returns the block difficulty.\n     * @example block.difficulty // BigNumber\n     */\n    get: function () {\n      return this._data.difficulty;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"totalDifficulty\", {\n    /**\n     * @returns the block total difficulty.\n     * @example block.totalDifficulty // BigNumber\n     */\n    get: function () {\n      return this._data.totalDifficulty;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"size\", {\n    /**\n     * @returns the block size.\n     * @example block.size // BigNumber\n     */\n    get: function () {\n      return this._data.size;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"gasLimit\", {\n    /**\n     * @returns the block gas limit.\n     * @example block.gasLimit // BigNumber\n     */\n    get: function () {\n      return this._data.gasLimit;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"gasUsed\", {\n    /**\n     * @returns the block gas used.\n     * @example block.gasUsed // BigNumber\n     */\n    get: function () {\n      return this._data.gasUsed;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"transactions\", {\n    /**\n     * @returns the block transactions.\n     * @example block.transactions // EvmTransaction[]\n     */\n    get: function () {\n      return this._data.transactions;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"chain\", {\n    /**\n     * @returns the block chain.\n     * @example block.chain // EvmChain\n     */\n    get: function () {\n      return this._data.chain;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"transactionCount\", {\n    /**\n     * @returns the block transaction count.\n     * @example block.transactionCount // 252\n     */\n    get: function () {\n      return this._data.transactionCount;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"transactionsRoot\", {\n    /**\n     * @returns the block transactions root.\n     * @example block.transactionsRoot // \"0xe4c7bf3aff7ad07f9e80d57f7189f0252592fee6321c2a9bd9b09b6ce0690d27\"\n     */\n    get: function () {\n      return this._data.transactionsRoot;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"stateRoot\", {\n    /**\n     * @returns the block state root.\n     * @example block.stateRoot // \"0x49e3bfe7b618e27fde8fa08884803a8458b502c6534af69873a3cc926a7c724b\"\n     */\n    get: function () {\n      return this._data.stateRoot;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"receiptsRoot\", {\n    /**\n     * @returns the block receipts root.\n     * @example block.receiptsRoot // \"0x7cf43d7e837284f036cf92c56973f5e27bdd253ca46168fa195a6b07fa719f23\"\n     */\n    get: function () {\n      return this._data.receiptsRoot;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"logsBloom\", {\n    /**\n     * @returns the block logs bloom.\n     * @example block.logsBloom // \"0xdde5fc46c5d8bcbd58207bc9f267bf43298e23791a326ff02661e99790da9996b3e0dd912c0b8202d389d282c56e4d11eb2dec4898a32b6b165f1f4cae6aa0079498eab50293f3b8defbf6af11bb75f0408a563ddfc26a3323d1ff5f9849e95d5f034d88a757ddea032c75c00708c9ff34d2207f997cc7d93fd1fa160a6bfaf62a54e31f9fe67ab95752106ba9d185bfdc9b6dc3e17427f844ee74e5c09b17b83ad6e8fc7360f5c7c3e4e1939e77a6374bee57d1fa6b2322b11ad56ad0398302de9b26d6fbfe414aa416bff141fad9d4af6aea19322e47595e342cd377403f417dfd396ab5f151095a5535f51cbc34a40ce9648927b7d1d72ab9daf253e31daf\"\n     */\n    get: function () {\n      return this._data.logsBloom;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"extraData\", {\n    /**\n     * @returns the block extra data.\n     * @example block.extraData // \"0x65746865726d696e652d6575726f70652d7765737433\"\n     */\n    get: function () {\n      return this._data.extraData;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"parentHash\", {\n    /**\n     * @returns the block parent hash.\n     * @example block.parentHash // \"0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045\"\n     */\n    get: function () {\n      return this._data.parentHash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"sha3Uncles\", {\n    /**\n     * @returns the block sha3Uncles.\n     * @example block.sha3Uncles // \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\"\n     */\n    get: function () {\n      return this._data.sha3Uncles;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"nonce\", {\n    /**\n     * @returns the block nonce.\n     * @example block.nonce // \"0xedeb2d8fd2b2bdec\"\n     */\n    get: function () {\n      return this._data.nonce;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  EvmBlock.parse = function (data, core) {\n    return __assign(__assign({}, data), {\n      miner: EvmAddress_1.EvmAddress.create(data.miner, core),\n      timestamp: (0, common_core_1.dateInputToDate)(data.timestamp),\n      number: common_core_1.BigNumber.create(data.number),\n      difficulty: common_core_1.BigNumber.create(data.difficulty),\n      totalDifficulty: common_core_1.BigNumber.create(data.totalDifficulty),\n      size: common_core_1.BigNumber.create(data.size),\n      gasLimit: common_core_1.BigNumber.create(data.gasLimit),\n      gasUsed: common_core_1.BigNumber.create(data.gasUsed),\n      transactions: data.transactions.map(function (transaction) {\n        return EvmTransaction_1.EvmTransaction.create(transaction, core);\n      }),\n      chain: EvmChain_1.EvmChain.create(data.chain, core),\n      transactionCount: +data.transactionCount\n    });\n  };\n  return EvmBlock;\n}();\nexports.EvmBlock = EvmBlock;","map":{"version":3,"sources":["../../../src/dataTypes/EvmBlock/EvmBlock.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;AASA;;;;AAIG;AACH,IAAA,QAAA,GAAA,aAAA,YAAA;EAgBE,SAAA,QAAA,CAAY,IAAmB,EAAE,IAAU,EAAA;IACzC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;EACzC;EAjBA;;;;AAIG;EACI,QAAA,CAAA,MAAM,GAAb,UAAc,IAAiB,EAAE,IAAW,EAAA;IAC1C,IAAI,IAAI,YAAY,QAAQ,EAAE;MAC5B,OAAO,IAAI;IACZ;IACD,IAAM,SAAS,GAAG,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAJ,IAAI,GAAI,aAAA,CAAA,YAAY,CAAC,UAAU,EAAE;IACnD,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC;EACtC,CAAC;EAuBD;;;;;AAKG;EACI,QAAA,CAAA,MAAM,GAAb,UAAc,KAAsC,EAAE,KAAsC,EAAA;IAC1F,IAAM,MAAM,GAAG,gBAAA,CAAA,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC;IAC3C,IAAM,MAAM,GAAG,gBAAA,CAAA,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC;IAE3C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;MACtC,OAAO,KAAK;IACb;IAED,IAAI,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE;MAC/B,OAAO,KAAK;IACb;IAED,OAAO,IAAI;EACb,CAAC;EAED;;;;;;;AAOG;EACH,QAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,IAAiB,EAAA;IACtB,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;EACpC,CAAC;EAED;;;;;;AAMG;EACH,QAAA,CAAA,SAAA,CAAA,MAAM,GAAN,YAAA;IACE,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK;IACvB,OAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACK,IAAI,CAAA,EAAA;MACP,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;MAC9B,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;MACtC,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;MAChD,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;MAC1B,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;MAClC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;MAChC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;MAC1B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;MAC1B,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,WAAW,EAAA;QAAK,OAAA,WAAW,CAAC,MAAM,EAAE;MAApB,CAAoB;IAAC,CAAA,CAAA;EAE9E,CAAC;EAED;;;;;;AAMG;EACH,QAAA,CAAA,SAAA,CAAA,MAAM,GAAN,YAAA;IACE,OAAO,IAAI,CAAC,MAAM,EAAE;EACtB,CAAC;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,QAAM,EAAA;IAJV;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK;IACnB,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,QAAM,EAAA;IAJV;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;IAC1B,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,MAAI,EAAA;IAJR;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI;IACxB,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,WAAS,EAAA;IAJb;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS;IAC7B,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,OAAK,EAAA;IAJT;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;IACzB,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,YAAU,EAAA;IAJd;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU;IAC9B,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,iBAAe,EAAA;IAJnB;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe;IACnC,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,MAAI,EAAA;IAJR;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI;IACxB,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,UAAQ,EAAA;IAJZ;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,SAAO,EAAA;IAJX;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO;IAC3B,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,cAAY,EAAA;IAJhB;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY;IAChC,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,OAAK,EAAA;IAJT;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;IACzB,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,kBAAgB,EAAA;IAJpB;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB;IACpC,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,kBAAgB,EAAA;IAJpB;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB;IACpC,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,WAAS,EAAA;IAJb;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS;IAC7B,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,cAAY,EAAA;IAJhB;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY;IAChC,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,WAAS,EAAA;IAJb;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS;IAC7B,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,WAAS,EAAA;IAJb;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS;IAC7B,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,YAAU,EAAA;IAJd;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU;IAC9B,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,YAAU,EAAA;IAJd;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU;IAC9B,CAAC;;;IAAA;EAMD,MAAA,CAAA,cAAA,CAAI,QAAA,CAAA,SAAA,EAAA,OAAK,EAAA;IAJT;;;AAGG;SACH,YAAA;MACE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;IACzB,CAAC;;;IAAA;EAxPM,QAAA,CAAA,KAAK,GAAG,UAAC,IAAmB,EAAE,IAAU,EAAA;IAAmB,OAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAC7D,IAAI,CAAA,EAAA;MACP,KAAK,EAAE,YAAA,CAAA,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC;MAC1C,SAAS,EAAE,CAAA,CAAA,EAAA,aAAA,CAAA,eAAe,EAAC,IAAI,CAAC,SAAS,CAAC;MAC1C,MAAM,EAAE,aAAA,CAAA,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;MACrC,UAAU,EAAE,aAAA,CAAA,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;MAC7C,eAAe,EAAE,aAAA,CAAA,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;MACvD,IAAI,EAAE,aAAA,CAAA,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;MACjC,QAAQ,EAAE,aAAA,CAAA,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;MACzC,OAAO,EAAE,aAAA,CAAA,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;MACvC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,WAAW,EAAA;QAAK,OAAA,gBAAA,CAAA,cAAc,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC;MAAxC,CAAwC,CAAC;MAC9F,KAAK,EAAE,UAAA,CAAA,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC;MACxC,gBAAgB,EAAE,CAAC,IAAI,CAAC;IAAgB,CAAA,CAAA;EAZwB,CAahE;EA4OJ,OAAA,QAAC;CAAA,EAAA;AA7QY,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EvmBlock = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar EvmAddress_1 = require(\"../EvmAddress\");\nvar EvmChain_1 = require(\"../EvmChain\");\nvar EvmTransaction_1 = require(\"../EvmTransaction\");\nvar EvmSimpleBlock_1 = require(\"./EvmSimpleBlock\");\n/**\n * The EvmBlock is a representation of a block.\n *\n * @category DataType\n */\nvar EvmBlock = /** @class */ (function () {\n    function EvmBlock(data, core) {\n        this._data = EvmBlock.parse(data, core);\n    }\n    /**\n     * Create a new instance of EvmBlock from any valid transaction input\n     * @param data - the EvmBlockish type\n     * @example const transaction = EvmTransaction.create(data);\n     */\n    EvmBlock.create = function (data, core) {\n        if (data instanceof EvmBlock) {\n            return data;\n        }\n        var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n        return new EvmBlock(data, finalCore);\n    };\n    /**\n     * Check the equality between two Evm blocks. It compares their hashes and blocks.\n     * @param dataA - The first block to compare\n     * @param dataB - The second block to compare\n     * @example EvmTransaction.equals(dataA, dataB)\n     */\n    EvmBlock.equals = function (dataA, dataB) {\n        var blockA = EvmSimpleBlock_1.EvmSimpleBlock.create(dataA);\n        var blockB = EvmSimpleBlock_1.EvmSimpleBlock.create(dataB);\n        if (!blockA.chain.equals(blockB.chain)) {\n            return false;\n        }\n        if (blockA.hash !== blockB.hash) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Checks the equality of the current block with another evm block\n     * @param data - the block to compare with\n     * @example\n     * ```ts\n     * block.equals(data)\n     * ```\n     */\n    EvmBlock.prototype.equals = function (data) {\n        return EvmBlock.equals(this, data);\n    };\n    /**\n     * @returns a JSON represention of the block.\n     * @example\n     * ```\n     * block.toJSON()\n     * ```\n     */\n    EvmBlock.prototype.toJSON = function () {\n        var data = this._data;\n        return __assign(__assign({}, data), { number: data.number.toString(), difficulty: data.difficulty.toString(), totalDifficulty: data.totalDifficulty.toString(), size: data.size.toString(), gasLimit: data.gasLimit.toString(), gasUsed: data.gasUsed.toString(), chain: data.chain.format(), miner: data.miner.format(), transactions: data.transactions.map(function (transaction) { return transaction.toJSON(); }) });\n    };\n    /**\n     * @returns a JSON represention of the block.\n     * @example\n     * ```\n     * block.format()\n     * ```\n     */\n    EvmBlock.prototype.format = function () {\n        return this.toJSON();\n    };\n    Object.defineProperty(EvmBlock.prototype, \"result\", {\n        /**\n         * @returns all the data without casting it to JSON.\n         * @example block.result\n         */\n        get: function () {\n            return this._data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"number\", {\n        /**\n         * @returns the block number.\n         * @example block.number // BigNumber\n         */\n        get: function () {\n            return this._data.number;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"hash\", {\n        /**\n         * @returns the block hash.\n         * @example block.hash // \"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171\"\n         */\n        get: function () {\n            return this._data.hash;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"timestamp\", {\n        /**\n         * @returns the block timestamp.\n         * @example block.timestamp // Date\n         */\n        get: function () {\n            return this._data.timestamp;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"miner\", {\n        /**\n         * @returns the block miner.\n         * @example block.miner // EvmAddress\n         */\n        get: function () {\n            return this._data.miner;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"difficulty\", {\n        /**\n         * @returns the block difficulty.\n         * @example block.difficulty // BigNumber\n         */\n        get: function () {\n            return this._data.difficulty;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"totalDifficulty\", {\n        /**\n         * @returns the block total difficulty.\n         * @example block.totalDifficulty // BigNumber\n         */\n        get: function () {\n            return this._data.totalDifficulty;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"size\", {\n        /**\n         * @returns the block size.\n         * @example block.size // BigNumber\n         */\n        get: function () {\n            return this._data.size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"gasLimit\", {\n        /**\n         * @returns the block gas limit.\n         * @example block.gasLimit // BigNumber\n         */\n        get: function () {\n            return this._data.gasLimit;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"gasUsed\", {\n        /**\n         * @returns the block gas used.\n         * @example block.gasUsed // BigNumber\n         */\n        get: function () {\n            return this._data.gasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"transactions\", {\n        /**\n         * @returns the block transactions.\n         * @example block.transactions // EvmTransaction[]\n         */\n        get: function () {\n            return this._data.transactions;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"chain\", {\n        /**\n         * @returns the block chain.\n         * @example block.chain // EvmChain\n         */\n        get: function () {\n            return this._data.chain;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"transactionCount\", {\n        /**\n         * @returns the block transaction count.\n         * @example block.transactionCount // 252\n         */\n        get: function () {\n            return this._data.transactionCount;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"transactionsRoot\", {\n        /**\n         * @returns the block transactions root.\n         * @example block.transactionsRoot // \"0xe4c7bf3aff7ad07f9e80d57f7189f0252592fee6321c2a9bd9b09b6ce0690d27\"\n         */\n        get: function () {\n            return this._data.transactionsRoot;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"stateRoot\", {\n        /**\n         * @returns the block state root.\n         * @example block.stateRoot // \"0x49e3bfe7b618e27fde8fa08884803a8458b502c6534af69873a3cc926a7c724b\"\n         */\n        get: function () {\n            return this._data.stateRoot;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"receiptsRoot\", {\n        /**\n         * @returns the block receipts root.\n         * @example block.receiptsRoot // \"0x7cf43d7e837284f036cf92c56973f5e27bdd253ca46168fa195a6b07fa719f23\"\n         */\n        get: function () {\n            return this._data.receiptsRoot;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"logsBloom\", {\n        /**\n         * @returns the block logs bloom.\n         * @example block.logsBloom // \"0xdde5fc46c5d8bcbd58207bc9f267bf43298e23791a326ff02661e99790da9996b3e0dd912c0b8202d389d282c56e4d11eb2dec4898a32b6b165f1f4cae6aa0079498eab50293f3b8defbf6af11bb75f0408a563ddfc26a3323d1ff5f9849e95d5f034d88a757ddea032c75c00708c9ff34d2207f997cc7d93fd1fa160a6bfaf62a54e31f9fe67ab95752106ba9d185bfdc9b6dc3e17427f844ee74e5c09b17b83ad6e8fc7360f5c7c3e4e1939e77a6374bee57d1fa6b2322b11ad56ad0398302de9b26d6fbfe414aa416bff141fad9d4af6aea19322e47595e342cd377403f417dfd396ab5f151095a5535f51cbc34a40ce9648927b7d1d72ab9daf253e31daf\"\n         */\n        get: function () {\n            return this._data.logsBloom;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"extraData\", {\n        /**\n         * @returns the block extra data.\n         * @example block.extraData // \"0x65746865726d696e652d6575726f70652d7765737433\"\n         */\n        get: function () {\n            return this._data.extraData;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"parentHash\", {\n        /**\n         * @returns the block parent hash.\n         * @example block.parentHash // \"0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045\"\n         */\n        get: function () {\n            return this._data.parentHash;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"sha3Uncles\", {\n        /**\n         * @returns the block sha3Uncles.\n         * @example block.sha3Uncles // \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\"\n         */\n        get: function () {\n            return this._data.sha3Uncles;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmBlock.prototype, \"nonce\", {\n        /**\n         * @returns the block nonce.\n         * @example block.nonce // \"0xedeb2d8fd2b2bdec\"\n         */\n        get: function () {\n            return this._data.nonce;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EvmBlock.parse = function (data, core) { return (__assign(__assign({}, data), { miner: EvmAddress_1.EvmAddress.create(data.miner, core), timestamp: (0, common_core_1.dateInputToDate)(data.timestamp), number: common_core_1.BigNumber.create(data.number), difficulty: common_core_1.BigNumber.create(data.difficulty), totalDifficulty: common_core_1.BigNumber.create(data.totalDifficulty), size: common_core_1.BigNumber.create(data.size), gasLimit: common_core_1.BigNumber.create(data.gasLimit), gasUsed: common_core_1.BigNumber.create(data.gasUsed), transactions: data.transactions.map(function (transaction) { return EvmTransaction_1.EvmTransaction.create(transaction, core); }), chain: EvmChain_1.EvmChain.create(data.chain, core), transactionCount: +data.transactionCount })); };\n    return EvmBlock;\n}());\nexports.EvmBlock = EvmBlock;\n//# sourceMappingURL=EvmBlock.js.map"]},"metadata":{},"sourceType":"script"}