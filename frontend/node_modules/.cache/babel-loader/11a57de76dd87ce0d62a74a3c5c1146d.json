{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApiModule = void 0;\nvar ModuleType_1 = require(\"./ModuleType\");\nvar Module_1 = require(\"./Module\");\n/**\n * The base class of every Moralis Api class that gets registered as a module via MoralisModules\n * It should always be created with:\n * - `name`: name of the module (should be unique)\n * - `core`: the Core instance\n * - `baseUrl`: the base url where of the api\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar ApiModule = /** @class */function (_super) {\n  __extends(ApiModule, _super);\n  function ApiModule(name, core, baseUrl) {\n    var _this = _super.call(this, name, core, ModuleType_1.ModuleType.API) || this;\n    _this.baseUrl = baseUrl;\n    return _this;\n  }\n  return ApiModule;\n}(Module_1.Module);\nexports.ApiModule = ApiModule;","map":{"version":3,"sources":["../../src/Modules/ApiModule.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAGA;;;;;;AAMG;AACH;AACA,IAAA,SAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAwC,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;EACtC,SAAA,SAAA,CAAmB,IAAY,EAAE,IAAU,EAAkB,OAAe,EAAA;IAA5E,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAI,EAAE,IAAI,EAAE,YAAA,CAAA,UAAU,CAAC,GAAG,CAAC,IAAA,IAAA;IAD0B,KAAA,CAAA,OAAO,GAAP,OAAO;;EAEpE;EACF,OAAA,SAAC;AAAD,CAAC,CAJuC,QAAA,CAAA,MAAM,CAAA;AAAxB,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApiModule = void 0;\nvar ModuleType_1 = require(\"./ModuleType\");\nvar Module_1 = require(\"./Module\");\n/**\n * The base class of every Moralis Api class that gets registered as a module via MoralisModules\n * It should always be created with:\n * - `name`: name of the module (should be unique)\n * - `core`: the Core instance\n * - `baseUrl`: the base url where of the api\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar ApiModule = /** @class */ (function (_super) {\n    __extends(ApiModule, _super);\n    function ApiModule(name, core, baseUrl) {\n        var _this = _super.call(this, name, core, ModuleType_1.ModuleType.API) || this;\n        _this.baseUrl = baseUrl;\n        return _this;\n    }\n    return ApiModule;\n}(Module_1.Module));\nexports.ApiModule = ApiModule;\n//# sourceMappingURL=ApiModule.js.map"]},"metadata":{},"sourceType":"script"}