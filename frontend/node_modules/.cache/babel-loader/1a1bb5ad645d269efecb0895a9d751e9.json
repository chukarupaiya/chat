{"ast":null,"code":"var _jsxFileName = \"/Users/karupaiyachu/Desktop/project/chat-app copy/frontend/src/components/Pay2.js\",\n  _s = $RefreshSig$();\nimport { React } from \"react\";\nimport \"./Pay.css\";\nimport { FaDollarSign } from \"react-icons/fa\";\nimport { Input, InputGroup, InputLeftElement, InputRightElement } from \"@chakra-ui/input\";\nimport img from \"../eth1.png\";\nimport { RiSendPlane2Fill } from \"react-icons/ri\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, useDisclosure, Text, Image, Select, useStyles } from \"@chakra-ui/react\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport \"./SingleChat.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\nimport priceFeed from \"../contracts/frontend-interaction/priceFeed\";\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport senderc20 from \"../contracts/frontend-interaction/senderc20\";\nimport Multisig from \"../contracts/frontend-interaction/Multisig\";\nimport Multisig_confirm from \"../contracts/frontend-interaction/Mutisig_confirm\";\nimport Multisig_execute from \"../contracts/frontend-interaction/Multisig_execute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\nvar socket, selectedChatCompare;\nconst Pay2 = _ref => {\n  _s();\n  let {\n    fetchAgain,\n    setFetchAgain,\n    fetchMessages,\n    refAgain,\n    toClose,\n    Moralis,\n    sender_id\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [currency, setCurrency] = useState(\"\");\n  const [payment_type, setPaymentType] = useState(\"token\");\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n  const [chain, setChain] = useState(\"\");\n  const [token_address, setTokenAddress] = useState(\"\");\n  const [note, setNote] = useState(\"\");\n  const [owner_address, setOwner_address] = useState(localStorage.getItem(\"address\"));\n  const [bal, setBal] = useState(\"\");\n  const [usd, setUsd] = useState(0);\n  const [to, setTo] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [execute, setExecute] = useState(\"\");\n  const [index, setIndex] = useState(\"2\");\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    notification,\n    setNotification\n  } = ChatState();\n  const sendMessage1 = async event => {\n    const result = await Multisig(to, token_address, newMessage, note);\n    console.log(resut);\n    if (newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`\n          }\n        };\n        setNewMessage(\"\");\n        console.log(newMessage + \" \" + selectedChat);\n        const {\n          data\n        } = await axios.post(\"/api/message\", {\n          content: to,\n          chatId: selectedChat,\n          payment: true,\n          payment_mode: \"pay\",\n          chat_mode: \"group\",\n          payment_type: \"token\",\n          currency: \"submitted txn\",\n          receiver_id: sender_id,\n          note: note,\n          token_address: index\n        }, config);\n        console.log(data);\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\"\n        });\n      }\n      refAgain();\n    }\n  };\n  const sendMessage2 = async event => {\n    await Multisig_confirm(confirm);\n    if (newMessage || confirm) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`\n          }\n        };\n        setNewMessage(\"\");\n        console.log(confirm);\n        console.log(newMessage + \" \" + selectedChat);\n        const {\n          data\n        } = await axios.post(\"/api/message\", {\n          content: confirm,\n          chatId: selectedChat,\n          payment: true,\n          payment_mode: \"pay\",\n          chat_mode: \"group\",\n          payment_type: \"token\",\n          currency: \"confirmed txn\",\n          receiver_id: sender_id,\n          note: \"empty\",\n          token_address: confirm\n        }, config);\n        console.log(data);\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\"\n        });\n      }\n      refAgain();\n    }\n  };\n  const sendMessage3 = async event => {\n    await Multisig_execute(execute);\n    if (newMessage || execute) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`\n          }\n        };\n        setNewMessage(\"\");\n        console.log(newMessage + \" \" + selectedChat);\n        const {\n          data\n        } = await axios.post(\"/api/message\", {\n          content: execute,\n          chatId: selectedChat,\n          payment: true,\n          payment_mode: \"pay\",\n          chat_mode: \"group\",\n          payment_type: \"token\",\n          currency: \"executed txn\",\n          receiver_id: sender_id,\n          note: \"\",\n          token_address: execute\n        }, config);\n        console.log(data);\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\"\n        });\n      }\n      refAgain();\n    }\n  };\n  const typingHandler = e => {\n    setNewMessage(e.target.value);\n    if (!socketConnected) return;\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n    console.log(socket);\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    socket.on(\"message recieved\", newMessageRecieved => {\n      if (!selectedChatCompare ||\n      // if chat is not selected or doesn't match current chat\n      selectedChatCompare._id !== newMessageRecieved.chat._id) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n  const [options, setOptions] = useState([]);\n  useEffect(async () => {\n    const {\n      EvmChain\n    } = require(\"@moralisweb3/common-evm-utils\");\n    const address = localStorage.getItem(\"address\");\n    const chain = EvmChain.MUMBAI;\n    if (Moralis != undefined) {\n      const response = await Moralis.EvmApi.token.getWalletTokenBalances({\n        address,\n        chain\n      });\n      console.log(response.toJSON());\n      setOptions(response.toJSON());\n    }\n  }, [Moralis]);\n  const options2 = options.map(d => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      className: \"font1\",\n      value: d.symbol + \"|\" + d.token_address + \"|\" + Math.pow(10, -18) * d.balance,\n      children: d.symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this);\n  });\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  useEffect(async () => {\n    const result = await priceFeed();\n    setUsd(result);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      width: \"100%\",\n      height: \"100%\",\n      margin: \"0px\",\n      padding: \"0px\",\n      className: \"font1\",\n      _focus: {\n        outline: \"none\"\n      },\n      _hover: {\n        transform: \"scale(1.09)\"\n      },\n      borderRadius: \"0px\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"choice_label1 font2\",\n        children: \"TOKEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        d: {\n          base: \"flex\"\n        },\n        onClick: onOpen,\n        bg: \"linear-gradient(125deg,transparent,rgba(0,0,0,255))\",\n        colorScheme: \"grey\",\n        color: \"white\",\n        width: \"100%\",\n        height: \"100%\",\n        border: \"0px\",\n        zIndex: \"500\",\n        borderRadius: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"choice_img2\",\n        src: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      onClose: () => {\n        onClose();\n        toClose();\n      },\n      isOpen: isOpen,\n      isCentered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        h: \"560px\",\n        bg: \"rgb(30,33,36)\",\n        color: \"white\",\n        className: \"font1\",\n        children: [/*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"first-name\",\n            isRequired: true,\n            mt: 3,\n            width: \"100%\",\n            margin: \"auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"payment\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Enter To Address\",\n              type: \"text\",\n              variant: \"filled\",\n              bg: \"rgb(54,57,62)\",\n              borderRadius: \"10px\",\n              color: \"white\",\n              focusBorderColor: \"rgb(54,57,62)\",\n              value: to,\n              width: \"100%\",\n              marginBottom: \"15px\",\n              height: \"35px\",\n              fontSize: \"15px\",\n              onChange: event => {\n                setTo(event.target.value);\n              },\n              _focus: {\n                border: \"0px\"\n              },\n              _hover: {\n                bg: \"transparent\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                marginTop: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Select Token\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Bal:\", bal == \"\" ? \"--\" : bal + \" \" + currency]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-pay2\",\n              children: [/*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"token\",\n                width: \"35%\",\n                margin: \"auto\",\n                name: \"currency\",\n                outline: \"0px\",\n                border: \"0px\",\n                marginBottom: \"15px\",\n                marginTop: \"7px\",\n                height: \"100%\",\n                fontSize: \"20px\",\n                _focus: {\n                  border: \"0px\"\n                },\n                className: \"font1\",\n                onChange: event => {\n                  if (event.target.value.split(\"|\")[0] != \"\") {\n                    setTokenAddress(event.target.value.split(\"|\")[1]);\n                    setCurrency(event.target.value.split(\"|\")[0]);\n                    setBal(event.target.value.split(\"|\")[2].substring(0, 8));\n                  } else {\n                    setBal(\"\");\n                  }\n                },\n                children: options2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"Enter amount\",\n                  type: \"number\",\n                  variant: \"filled\",\n                  bg: \"rgba(54,57,62,0)\",\n                  color: \"white\",\n                  focusBorderColor: \"rgb(54,57,62)\",\n                  value: newMessage,\n                  textAlign: \"right\",\n                  width: \"100%\",\n                  marginBottom: \"15px\",\n                  height: \"35px\",\n                  fontSize: \"19px\",\n                  onChange: typingHandler,\n                  _focus: {\n                    border: \"0px\"\n                  },\n                  _hover: {\n                    bg: \"transparent\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    textAlign: \"right\",\n                    fontStyle: \"italic\",\n                    fontSize: \"14px\"\n                  },\n                  children: [\"~\\u2002\", parseInt(newMessage) * usd, \"\\u2002$\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-pay\",\n              style: {\n                width: \"100%\",\n                margin: \"auto\",\n                display: \"flex\",\n                justifyContent: \"space-between\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Add a Note\",\n                type: \"text\",\n                variant: \"filled\",\n                bg: \"rgb(54,57,62)\",\n                color: \"white\",\n                focusBorderColor: \"rgb(54,57,62)\",\n                value: note,\n                width: \"55%\",\n                borderRadius: \"10px\",\n                height: \"35px\",\n                fontSize: \"12px\",\n                textAlign: \"center\",\n                onChange: event => {\n                  setNote(event.target.value);\n                },\n                _hover: {\n                  bg: \"rgb(54,57,62)\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  onClose();\n                  sendMessage1();\n                  toClose();\n                },\n                backgroundColor: \"rgb(40,43,48)\",\n                _hover: {\n                  bg: \"rgb(3, 252, 173)\",\n                  color: \"black\"\n                },\n                borderRadius: \"30px\",\n                width: \"15%\",\n                children: /*#__PURE__*/_jsxDEV(RiSendPlane2Fill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"payment\",\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"transaction index\",\n                type: \"text\",\n                variant: \"filled\",\n                bg: \"rgb(54,57,62)\",\n                borderRadius: \"10px\",\n                color: \"white\",\n                focusBorderColor: \"rgb(54,57,62)\",\n                value: confirm,\n                width: \"80%\",\n                marginBottom: \"15px\",\n                height: \"35px\",\n                fontSize: \"15px\",\n                onChange: event => {\n                  setConfirm(event.target.value);\n                },\n                _focus: {\n                  border: \"0px\"\n                },\n                _hover: {\n                  bg: \"transparent\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  onClose();\n                  sendMessage2();\n                  toClose();\n                },\n                backgroundColor: \"rgb(40,43,48)\",\n                _hover: {\n                  bg: \"rgb(3, 252, 173)\",\n                  color: \"black\"\n                },\n                borderRadius: \"30px\",\n                width: \"15%\",\n                children: /*#__PURE__*/_jsxDEV(RiSendPlane2Fill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"payment\",\n              children: \"Execute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Transaction index\",\n                type: \"text\",\n                variant: \"filled\",\n                bg: \"rgb(54,57,62)\",\n                borderRadius: \"10px\",\n                color: \"white\",\n                focusBorderColor: \"rgb(54,57,62)\",\n                value: execute,\n                width: \"80%\",\n                marginBottom: \"15px\",\n                height: \"35px\",\n                fontSize: \"15px\",\n                onChange: event => {\n                  setExecute(event.target.value);\n                },\n                _focus: {\n                  border: \"0px\"\n                },\n                _hover: {\n                  bg: \"transparent\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  onClose();\n                  sendMessage3();\n                  toClose();\n                },\n                backgroundColor: \"rgb(40,43,48)\",\n                _hover: {\n                  bg: \"rgb(3, 252, 173)\",\n                  color: \"black\"\n                },\n                borderRadius: \"30px\",\n                width: \"15%\",\n                children: /*#__PURE__*/_jsxDEV(RiSendPlane2Fill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Pay2, \"/HSyn3w/NzIlkm4pVgl7OEzmvqU=\", false, function () {\n  return [useToast, useDisclosure];\n});\n_c = Pay2;\nexport default Pay2;\nvar _c;\n$RefreshReg$(_c, \"Pay2\");","map":{"version":3,"names":["React","FaDollarSign","Input","InputGroup","InputLeftElement","InputRightElement","img","RiSendPlane2Fill","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","useDisclosure","Text","Image","Select","useStyles","FormControl","FormLabel","Box","IconButton","Spinner","useToast","getSender","getSenderFull","useEffect","useState","axios","ArrowBackIcon","ProfileModal","ScrollableChat","Lottie","animationData","priceFeed","io","UpdateGroupChatModal","ChatState","senderc20","Multisig","Multisig_confirm","Multisig_execute","ENDPOINT","socket","selectedChatCompare","Pay2","fetchAgain","setFetchAgain","fetchMessages","refAgain","toClose","Moralis","sender_id","messages","setMessages","currency","setCurrency","payment_type","setPaymentType","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","toast","chain","setChain","token_address","setTokenAddress","note","setNote","owner_address","setOwner_address","localStorage","getItem","bal","setBal","usd","setUsd","to","setTo","confirm","setConfirm","execute","setExecute","index","setIndex","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","selectedChat","setSelectedChat","user","notification","setNotification","sendMessage1","event","result","console","log","resut","emit","_id","config","headers","Authorization","token","data","post","content","chatId","payment","payment_mode","chat_mode","receiver_id","error","title","description","status","duration","isClosable","position","sendMessage2","sendMessage3","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","on","newMessageRecieved","chat","includes","options","setOptions","EvmChain","require","address","MUMBAI","undefined","response","EvmApi","getWalletTokenBalances","toJSON","options2","map","d","symbol","Math","pow","balance","isOpen","onOpen","onClose","outline","transform","base","border","bg","display","justifyContent","marginTop","split","substring","textAlign","fontStyle","fontSize","parseInt","width","margin","color"],"sources":["/Users/karupaiyachu/Desktop/project/chat-app copy/frontend/src/components/Pay2.js"],"sourcesContent":["import { React } from \"react\";\nimport \"./Pay.css\";\nimport { FaDollarSign } from \"react-icons/fa\";\nimport {\n  Input,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n} from \"@chakra-ui/input\";\nimport img from \"../eth1.png\";\nimport { RiSendPlane2Fill } from \"react-icons/ri\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  Text,\n  Image,\n  Select,\n  useStyles,\n} from \"@chakra-ui/react\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport \"./SingleChat.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\nimport priceFeed from \"../contracts/frontend-interaction/priceFeed\";\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nimport senderc20 from \"../contracts/frontend-interaction/senderc20\";\nimport Multisig from \"../contracts/frontend-interaction/Multisig\";\nimport Multisig_confirm from \"../contracts/frontend-interaction/Mutisig_confirm\";\nimport Multisig_execute from \"../contracts/frontend-interaction/Multisig_execute\";\n\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\nvar socket, selectedChatCompare;\n\nconst Pay2 = ({\n  fetchAgain,\n  setFetchAgain,\n  fetchMessages,\n  refAgain,\n  toClose,\n  Moralis,\n  sender_id,\n}) => {\n  const [messages, setMessages] = useState([]);\n  const [currency, setCurrency] = useState(\"\");\n  const [payment_type, setPaymentType] = useState(\"token\");\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n  const [chain, setChain] = useState(\"\");\n  const [token_address, setTokenAddress] = useState(\"\");\n  const [note, setNote] = useState(\"\");\n  const [owner_address, setOwner_address] = useState(\n    localStorage.getItem(\"address\")\n  );\n  const [bal, setBal] = useState(\"\");\n  const [usd, setUsd] = useState(0);\n  const [to, setTo] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [execute, setExecute] = useState(\"\");\n  const [index, setIndex] = useState(\"2\");\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const sendMessage1 = async (event) => {\n\n    const result=await Multisig(to,token_address,newMessage,note);\n    console.log(resut)\n    if (newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        console.log(newMessage + \" \" + selectedChat);\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: to,\n            chatId: selectedChat,\n            payment: true,\n            payment_mode: \"pay\",\n            chat_mode: \"group\",\n            payment_type: \"token\",\n            currency: \"submitted txn\",\n            receiver_id: sender_id,\n            note: note,\n            token_address: index,\n          },\n          config\n        );\n        console.log(data);\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n      refAgain();\n    }\n  };\n\n  const sendMessage2 = async (event) => {\n    await Multisig_confirm(confirm);\n    if (newMessage || confirm) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        console.log(confirm);\n        console.log(newMessage + \" \" + selectedChat);\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: confirm,\n            chatId: selectedChat,\n            payment: true,\n            payment_mode: \"pay\",\n            chat_mode: \"group\",\n            payment_type: \"token\",\n            currency: \"confirmed txn\",\n            receiver_id: sender_id,\n            note: \"empty\",\n            token_address: confirm,\n          },\n          config\n        );\n        console.log(data);\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n      refAgain();\n    }\n  };\n\n  const sendMessage3 = async (event) => {\n\n    await Multisig_execute(execute);\n   \n    if (newMessage || execute) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        console.log(newMessage + \" \" + selectedChat);\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: execute,\n            chatId: selectedChat,\n            payment: true,\n            payment_mode: \"pay\",\n            chat_mode: \"group\",\n            payment_type: \"token\",\n            currency: \"executed txn\",\n            receiver_id: sender_id,\n            note: \"\",\n            token_address: execute,\n          },\n          config\n        );\n        console.log(data);\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n      refAgain();\n    }\n  };\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n    console.log(socket);\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const [options, setOptions] = useState([]);\n\n  useEffect(async () => {\n    const { EvmChain } = require(\"@moralisweb3/common-evm-utils\");\n\n    const address = localStorage.getItem(\"address\");\n\n    const chain = EvmChain.MUMBAI;\n\n    if (Moralis != undefined) {\n      const response = await Moralis.EvmApi.token.getWalletTokenBalances({\n        address,\n        chain,\n      });\n\n      console.log(response.toJSON());\n      setOptions(response.toJSON());\n    }\n  }, [Moralis]);\n\n  const options2 = options.map((d) => {\n    return (\n      <option\n        className=\"font1\"\n        value={\n          d.symbol + \"|\" + d.token_address + \"|\" + Math.pow(10, -18) * d.balance\n        }\n      >\n        {d.symbol}\n      </option>\n    );\n  });\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  useEffect(async () => {\n    const result = await priceFeed();\n    setUsd(result);\n  }, []);\n\n  return (\n    <>\n      <Button\n        width=\"100%\"\n        height=\"100%\"\n        margin={\"0px\"}\n        padding=\"0px\"\n        className=\"font1\"\n        _focus={{ outline: \"none\" }}\n        _hover={{ transform: \"scale(1.09)\" }}\n        borderRadius={\"0px\"}\n      >\n        <p class=\"choice_label1 font2\">TOKEN</p>\n        <IconButton\n          d={{ base: \"flex\" }}\n          onClick={onOpen}\n          bg=\"linear-gradient(125deg,transparent,rgba(0,0,0,255))\"\n          colorScheme=\"grey\"\n          color={\"white\"}\n          width=\"100%\"\n          height=\"100%\"\n          border={\"0px\"}\n          zIndex={\"500\"}\n          borderRadius={\"0px\"}\n        />\n        <img className={\"choice_img2\"} src={img}></img>\n      </Button>\n\n      <Modal\n        size=\"lg\"\n        onClose={() => {\n          onClose();\n          toClose();\n        }}\n        isOpen={isOpen}\n        isCentered\n      >\n        <ModalOverlay />\n        <ModalContent\n          h=\"560px\"\n          bg={\"rgb(30,33,36)\"}\n          color=\"white\"\n          className={\"font1\"}\n        >\n          <ModalBody>\n            <FormControl\n              id=\"first-name\"\n              isRequired\n              mt={3}\n              width={\"100%\"}\n              margin={\"auto\"}\n            >\n              <p id=\"payment\">Submit</p>\n              <FormLabel>To</FormLabel>\n              <Input\n                placeholder=\"Enter To Address\"\n                type=\"text\"\n                variant=\"filled\"\n                bg=\"rgb(54,57,62)\"\n                borderRadius={\"10px\"}\n                color=\"white\"\n                focusBorderColor=\"rgb(54,57,62)\"\n                value={to}\n                width=\"100%\"\n                marginBottom={\"15px\"}\n                height={\"35px\"}\n                fontSize=\"15px\"\n                onChange={(event) => {\n                  setTo(event.target.value);\n                }}\n                _focus={{ border: \"0px\" }}\n                _hover={{ bg: \"transparent\" }}\n              />\n\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginTop: \"10px\",\n                }}\n              >\n                <FormLabel>Select Token</FormLabel>\n                <p>Bal:{bal == \"\" ? \"--\" : bal + \" \" + currency}</p>\n              </div>\n              <div className={\"form-pay2\"}>\n                <Select\n                  placeholder=\"token\"\n                  width={\"35%\"}\n                  margin={\"auto\"}\n                  name=\"currency\"\n                  outline={\"0px\"}\n                  border={\"0px\"}\n                  marginBottom={\"15px\"}\n                  marginTop={\"7px\"}\n                  height={\"100%\"}\n                  fontSize={\"20px\"}\n                  _focus={{ border: \"0px\" }}\n                  className={\"font1\"}\n                  onChange={(event) => {\n                    if (event.target.value.split(\"|\")[0] != \"\") {\n                      setTokenAddress(event.target.value.split(\"|\")[1]);\n                      setCurrency(event.target.value.split(\"|\")[0]);\n                      setBal(event.target.value.split(\"|\")[2].substring(0, 8));\n                    } else {\n                      setBal(\"\");\n                    }\n                  }}\n                >\n                  {options2}\n                </Select>\n                <div>\n                  <Input\n                    placeholder=\"Enter amount\"\n                    type=\"number\"\n                    variant=\"filled\"\n                    bg=\"rgba(54,57,62,0)\"\n                    color=\"white\"\n                    focusBorderColor=\"rgb(54,57,62)\"\n                    value={newMessage}\n                    textAlign={\"right\"}\n                    width=\"100%\"\n                    marginBottom={\"15px\"}\n                    height={\"35px\"}\n                    fontSize=\"19px\"\n                    onChange={typingHandler}\n                    _focus={{ border: \"0px\" }}\n                    _hover={{ bg: \"transparent\" }}\n                  />\n                  <p\n                    style={{\n                      textAlign: \"right\",\n                      fontStyle: \"italic\",\n                      fontSize: \"14px\",\n                    }}\n                  >\n                    ~&ensp;{parseInt(newMessage) * usd}&ensp;$\n                  </p>\n                </div>\n              </div>\n\n              <div\n                className={\"form-pay\"}\n                style={{\n                  width: \"100%\",\n                  margin: \"auto\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Input\n                  placeholder=\"Add a Note\"\n                  type=\"text\"\n                  variant=\"filled\"\n                  bg=\"rgb(54,57,62)\"\n                  color=\"white\"\n                  focusBorderColor=\"rgb(54,57,62)\"\n                  value={note}\n                  width=\"55%\"\n                  borderRadius={\"10px\"}\n                  height={\"35px\"}\n                  fontSize=\"12px\"\n                  textAlign={\"center\"}\n                  onChange={(event) => {\n                    setNote(event.target.value);\n                  }}\n                  _hover={{ bg: \"rgb(54,57,62)\" }}\n                />\n                <Button\n                  onClick={() => {\n                    onClose();\n                    sendMessage1();\n                    toClose();\n                  }}\n                  backgroundColor=\"rgb(40,43,48)\"\n                  _hover={{ bg: \"rgb(3, 252, 173)\", color: \"black\" }}\n                  borderRadius={\"30px\"}\n                  width={\"15%\"}\n                >\n                  <RiSendPlane2Fill />\n                </Button>\n              </div>\n              <p id=\"payment\">Confirm</p>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <Input\n                  placeholder=\"transaction index\"\n                  type=\"text\"\n                  variant=\"filled\"\n                  bg=\"rgb(54,57,62)\"\n                  borderRadius={\"10px\"}\n                  color=\"white\"\n                  focusBorderColor=\"rgb(54,57,62)\"\n                  value={confirm}\n                  width=\"80%\"\n                  marginBottom={\"15px\"}\n                  height={\"35px\"}\n                  fontSize=\"15px\"\n                  onChange={(event) => {\n                    setConfirm(event.target.value);\n                  }}\n                  _focus={{ border: \"0px\" }}\n                  _hover={{ bg: \"transparent\" }}\n                />\n                <Button\n                  onClick={() => {\n                    onClose();\n                    sendMessage2();\n                    toClose();\n                  }}\n                  backgroundColor=\"rgb(40,43,48)\"\n                  _hover={{ bg: \"rgb(3, 252, 173)\", color: \"black\" }}\n                  borderRadius={\"30px\"}\n                  width={\"15%\"}\n                >\n                  <RiSendPlane2Fill />\n                </Button>\n              </div>\n\n              <p id=\"payment\">Execute</p>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <Input\n                  placeholder=\"Transaction index\"\n                  type=\"text\"\n                  variant=\"filled\"\n                  bg=\"rgb(54,57,62)\"\n                  borderRadius={\"10px\"}\n                  color=\"white\"\n                  focusBorderColor=\"rgb(54,57,62)\"\n                  value={execute}\n                  width=\"80%\"\n                  marginBottom={\"15px\"}\n                  height={\"35px\"}\n                  fontSize=\"15px\"\n                  onChange={(event) => {\n                    setExecute(event.target.value);\n                  }}\n                  _focus={{ border: \"0px\" }}\n                  _hover={{ bg: \"transparent\" }}\n                />\n                <Button\n                  onClick={() => {\n                    onClose();\n                    sendMessage3();\n                    toClose();\n                  }}\n                  backgroundColor=\"rgb(40,43,48)\"\n                  _hover={{ bg: \"rgb(3, 252, 173)\", color: \"black\" }}\n                  borderRadius={\"30px\"}\n                  width={\"15%\"}\n                >\n                  <RiSendPlane2Fill />\n                </Button>\n              </div>\n            </FormControl>\n          </ModalBody>\n          <ModalFooter></ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default Pay2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}