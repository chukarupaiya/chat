{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamErc721Approval = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar common_evm_utils_1 = require(\"@moralisweb3/common-evm-utils\");\nvar StreamTriggerOutput_1 = require(\"../StreamTriggerOutput\");\n/**\n * The StreamErc1155Approval class is a representation of a nft approval (ERC721) that is returned by the Moralis Stream API\n *\n * @category DataType\n */\nvar StreamErc721Approval = /** @class */function () {\n  function StreamErc721Approval(data, core) {\n    this._data = StreamErc721Approval.parse(data, core);\n  }\n  /**\n   * Create a new instance of StreamErc721Approval\n   *\n   * @param data - the StreamErc721Approvalish type\n   * @param core - the Core instance\n   * @example\n   * ```ts\n   * const evmNftApproval = StreamErc721Approval.create(data);\n   * ```\n   * @returns an instance of StreamErc721Approval\n   */\n  StreamErc721Approval.create = function (data, core) {\n    if (data instanceof StreamErc721Approval) {\n      return data;\n    }\n    var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n    return new StreamErc721Approval(data, finalCore);\n  };\n  /**\n   * Compares two StreamErc721Approval data. It checks a deep equality check of both values.\n   * @param valueA - the first StreamErc721Approvalish data to compare\n   * @param valueB - the second StreamErc721Approvalish data to compare\n   * @returns true if the values are equal, false otherwise\n   * @example\n   * ```ts\n   *  StreamErc721Approval.equals(valueA, valueB);\n   * ```\n   */\n  // eslint-disable-next-line complexity\n  StreamErc721Approval.equals = function (valueA, valueB) {\n    var _a, _b;\n    var evmNftApprovalA = StreamErc721Approval.create(valueA);\n    var evmNftApprovalB = StreamErc721Approval.create(valueB);\n    if (!evmNftApprovalA.chain.equals(evmNftApprovalB.chain)) {\n      return false;\n    }\n    if (evmNftApprovalA.transactionHash !== evmNftApprovalB.transactionHash) {\n      return false;\n    }\n    if (!evmNftApprovalA.owner.equals(evmNftApprovalB.owner)) {\n      return false;\n    }\n    if (!evmNftApprovalA.contract.equals(evmNftApprovalB.contract)) {\n      return false;\n    }\n    if (evmNftApprovalA.tokenId !== evmNftApprovalB.tokenId) {\n      return false;\n    }\n    if (!evmNftApprovalA.approved.equals(evmNftApprovalB.approved)) {\n      return false;\n    }\n    if (((_a = evmNftApprovalA.triggers) === null || _a === void 0 ? void 0 : _a.length) !== ((_b = evmNftApprovalB.triggers) === null || _b === void 0 ? void 0 : _b.length) || !StreamTriggerOutput_1.StreamTriggerOutput.arrayEquals(evmNftApprovalA.triggers || [], evmNftApprovalB.triggers || [])) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Compares an StreamErc721Approvalish data to this StreamErc721Approval instance.\n   * @param value - the value to compare\n   * @returns true if the value is equal to the current instance, false otherwise\n   * @example\n   * ```ts\n   * evmNftApproval.equals(value);\n   * ```\n   */\n  StreamErc721Approval.prototype.equals = function (value) {\n    return StreamErc721Approval.equals(this, value);\n  };\n  /**\n   * Converts the StreamErc721Approval instance to a JSON object.\n   * @returns JSON object of the StreamErc721Approval instance\n   * @example `evmNftApproval.toJSON()`\n   */\n  StreamErc721Approval.prototype.toJSON = function () {\n    var _a;\n    var data = this._data;\n    return __assign(__assign({}, data), {\n      chain: data.chain.format(),\n      contract: data.contract.format(),\n      owner: data.owner.format(),\n      approved: data.approved.format(),\n      triggers: (_a = data.triggers) === null || _a === void 0 ? void 0 : _a.map(function (trigger) {\n        return trigger.format();\n      })\n    });\n  };\n  /**\n   * Converts the StreamErc721Approval instance to a JSON object.\n   * @returns JSON object of the StreamErc721Approval instance\n   * @example `evmNftApproval.format()`\n   */\n  StreamErc721Approval.prototype.format = function () {\n    return this.toJSON();\n  };\n  Object.defineProperty(StreamErc721Approval.prototype, \"chain\", {\n    get: function () {\n      return this._data.chain;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamErc721Approval.prototype, \"approved\", {\n    get: function () {\n      return this._data.approved;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamErc721Approval.prototype, \"owner\", {\n    get: function () {\n      return this._data.owner;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamErc721Approval.prototype, \"transactionHash\", {\n    get: function () {\n      return this._data.transactionHash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamErc721Approval.prototype, \"contract\", {\n    get: function () {\n      return this._data.contract;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamErc721Approval.prototype, \"logIndex\", {\n    get: function () {\n      return this._data.logIndex;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamErc721Approval.prototype, \"tokenId\", {\n    get: function () {\n      return this._data.tokenId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamErc721Approval.prototype, \"tokenContractType\", {\n    get: function () {\n      return this._data.tokenContractType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamErc721Approval.prototype, \"tokenName\", {\n    get: function () {\n      return this._data.tokenName;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamErc721Approval.prototype, \"tokenSymbol\", {\n    get: function () {\n      return this._data.tokenSymbol;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamErc721Approval.prototype, \"triggers\", {\n    get: function () {\n      return this._data.triggers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StreamErc721Approval.parse = function (data, core) {\n    var chain = common_evm_utils_1.EvmChain.create(data.chain, core);\n    return __assign(__assign({}, data), {\n      chain: chain,\n      logIndex: +data.logIndex,\n      owner: common_evm_utils_1.EvmAddress.create(data.owner, core),\n      contract: common_evm_utils_1.EvmAddress.create(data.contract, core),\n      tokenContractType: data.tokenContractType,\n      approved: common_evm_utils_1.EvmAddress.create(data.approved, core),\n      triggers: (0, common_core_1.maybe)(data.triggers, function (triggers) {\n        return triggers.map(function (trigger) {\n          return StreamTriggerOutput_1.StreamTriggerOutput.create(trigger, core);\n        });\n      })\n    });\n  };\n  return StreamErc721Approval;\n}();\nexports.StreamErc721Approval = StreamErc721Approval;","map":{"version":3,"sources":["../../../src/dataTypes/StreamErc721Approval/StreamErc721Approval.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamErc721Approval = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar common_evm_utils_1 = require(\"@moralisweb3/common-evm-utils\");\nvar StreamTriggerOutput_1 = require(\"../StreamTriggerOutput\");\n/**\n * The StreamErc1155Approval class is a representation of a nft approval (ERC721) that is returned by the Moralis Stream API\n *\n * @category DataType\n */\nvar StreamErc721Approval = /** @class */ (function () {\n    function StreamErc721Approval(data, core) {\n        this._data = StreamErc721Approval.parse(data, core);\n    }\n    /**\n     * Create a new instance of StreamErc721Approval\n     *\n     * @param data - the StreamErc721Approvalish type\n     * @param core - the Core instance\n     * @example\n     * ```ts\n     * const evmNftApproval = StreamErc721Approval.create(data);\n     * ```\n     * @returns an instance of StreamErc721Approval\n     */\n    StreamErc721Approval.create = function (data, core) {\n        if (data instanceof StreamErc721Approval) {\n            return data;\n        }\n        var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n        return new StreamErc721Approval(data, finalCore);\n    };\n    /**\n     * Compares two StreamErc721Approval data. It checks a deep equality check of both values.\n     * @param valueA - the first StreamErc721Approvalish data to compare\n     * @param valueB - the second StreamErc721Approvalish data to compare\n     * @returns true if the values are equal, false otherwise\n     * @example\n     * ```ts\n     *  StreamErc721Approval.equals(valueA, valueB);\n     * ```\n     */\n    // eslint-disable-next-line complexity\n    StreamErc721Approval.equals = function (valueA, valueB) {\n        var _a, _b;\n        var evmNftApprovalA = StreamErc721Approval.create(valueA);\n        var evmNftApprovalB = StreamErc721Approval.create(valueB);\n        if (!evmNftApprovalA.chain.equals(evmNftApprovalB.chain)) {\n            return false;\n        }\n        if (evmNftApprovalA.transactionHash !== evmNftApprovalB.transactionHash) {\n            return false;\n        }\n        if (!evmNftApprovalA.owner.equals(evmNftApprovalB.owner)) {\n            return false;\n        }\n        if (!evmNftApprovalA.contract.equals(evmNftApprovalB.contract)) {\n            return false;\n        }\n        if (evmNftApprovalA.tokenId !== evmNftApprovalB.tokenId) {\n            return false;\n        }\n        if (!evmNftApprovalA.approved.equals(evmNftApprovalB.approved)) {\n            return false;\n        }\n        if (((_a = evmNftApprovalA.triggers) === null || _a === void 0 ? void 0 : _a.length) !== ((_b = evmNftApprovalB.triggers) === null || _b === void 0 ? void 0 : _b.length) ||\n            !StreamTriggerOutput_1.StreamTriggerOutput.arrayEquals(evmNftApprovalA.triggers || [], evmNftApprovalB.triggers || [])) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Compares an StreamErc721Approvalish data to this StreamErc721Approval instance.\n     * @param value - the value to compare\n     * @returns true if the value is equal to the current instance, false otherwise\n     * @example\n     * ```ts\n     * evmNftApproval.equals(value);\n     * ```\n     */\n    StreamErc721Approval.prototype.equals = function (value) {\n        return StreamErc721Approval.equals(this, value);\n    };\n    /**\n     * Converts the StreamErc721Approval instance to a JSON object.\n     * @returns JSON object of the StreamErc721Approval instance\n     * @example `evmNftApproval.toJSON()`\n     */\n    StreamErc721Approval.prototype.toJSON = function () {\n        var _a;\n        var data = this._data;\n        return __assign(__assign({}, data), { chain: data.chain.format(), contract: data.contract.format(), owner: data.owner.format(), approved: data.approved.format(), triggers: (_a = data.triggers) === null || _a === void 0 ? void 0 : _a.map(function (trigger) { return trigger.format(); }) });\n    };\n    /**\n     * Converts the StreamErc721Approval instance to a JSON object.\n     * @returns JSON object of the StreamErc721Approval instance\n     * @example `evmNftApproval.format()`\n     */\n    StreamErc721Approval.prototype.format = function () {\n        return this.toJSON();\n    };\n    Object.defineProperty(StreamErc721Approval.prototype, \"chain\", {\n        get: function () {\n            return this._data.chain;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StreamErc721Approval.prototype, \"approved\", {\n        get: function () {\n            return this._data.approved;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StreamErc721Approval.prototype, \"owner\", {\n        get: function () {\n            return this._data.owner;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StreamErc721Approval.prototype, \"transactionHash\", {\n        get: function () {\n            return this._data.transactionHash;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StreamErc721Approval.prototype, \"contract\", {\n        get: function () {\n            return this._data.contract;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StreamErc721Approval.prototype, \"logIndex\", {\n        get: function () {\n            return this._data.logIndex;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StreamErc721Approval.prototype, \"tokenId\", {\n        get: function () {\n            return this._data.tokenId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StreamErc721Approval.prototype, \"tokenContractType\", {\n        get: function () {\n            return this._data.tokenContractType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StreamErc721Approval.prototype, \"tokenName\", {\n        get: function () {\n            return this._data.tokenName;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StreamErc721Approval.prototype, \"tokenSymbol\", {\n        get: function () {\n            return this._data.tokenSymbol;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StreamErc721Approval.prototype, \"triggers\", {\n        get: function () {\n            return this._data.triggers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StreamErc721Approval.parse = function (data, core) {\n        var chain = common_evm_utils_1.EvmChain.create(data.chain, core);\n        return __assign(__assign({}, data), { chain: chain, logIndex: +data.logIndex, owner: common_evm_utils_1.EvmAddress.create(data.owner, core), contract: common_evm_utils_1.EvmAddress.create(data.contract, core), tokenContractType: data.tokenContractType, approved: common_evm_utils_1.EvmAddress.create(data.approved, core), triggers: (0, common_core_1.maybe)(data.triggers, function (triggers) {\n                return triggers.map(function (trigger) { return StreamTriggerOutput_1.StreamTriggerOutput.create(trigger, core); });\n            }) });\n    };\n    return StreamErc721Approval;\n}());\nexports.StreamErc721Approval = StreamErc721Approval;\n//# sourceMappingURL=StreamErc721Approval.js.map"]},"metadata":{},"sourceType":"script"}