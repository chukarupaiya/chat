{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EvmTransaction = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar EvmAddress_1 = require(\"../EvmAddress\");\nvar EvmChain_1 = require(\"../EvmChain\");\nvar EvmNative_1 = require(\"../EvmNative\");\nvar EvmTransactionLog_1 = require(\"../EvmTransactionLog\");\nvar EvmSignature_1 = require(\"../EvmSignature/EvmSignature\");\n/**\n * The EvmTranaction is a representation of a published transaction.\n *\n * Use this class any time you work with a transaction.\n *\n * @category DataType\n */\nvar EvmTransaction = /** @class */function () {\n  function EvmTransaction(data, core) {\n    this._data = EvmTransaction.parse(data, core);\n  }\n  /**\n   * Create a new instance of EvmTransaction from any valid transaction input\n   * @param data - the EvmTransactionish type\n   * @example\n   * ```\n   * const transaction = EvmTransaction.create(data);\n   *```\n   */\n  EvmTransaction.create = function (data, core) {\n    if (data instanceof EvmTransaction) {\n      return data;\n    }\n    var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n    return new EvmTransaction(data, finalCore);\n  };\n  /**\n   * Check the equality between two Evm transactions\n   * @param dataA - The first transaction\n   * @param dataB - The second transaction\n   * @example\n   * ```ts\n   * EvmTransaction.equals(dataA, dataB)\n   * ```\n   */\n  EvmTransaction.equals = function (dataA, dataB) {\n    var transactionA = EvmTransaction.create(dataA);\n    var transactionB = EvmTransaction.create(dataB);\n    if (!transactionA._data.chain.equals(transactionB._data.chain)) {\n      return false;\n    }\n    if (transactionA._data.hash !== transactionB._data.hash) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Checks the equality of the current transaction with another evm transaction\n   * @param data - the transaction to compare with\n   * @example\n   * ```ts\n   * transaction.equals(data)\n   * ```\n   */\n  EvmTransaction.prototype.equals = function (data) {\n    return EvmTransaction.equals(this, data);\n  };\n  EvmTransaction.prototype.toJSON = function () {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    var data = this._data;\n    return __assign(__assign({}, data), {\n      to: (_a = data.to) === null || _a === void 0 ? void 0 : _a.format(),\n      from: (_b = data.from) === null || _b === void 0 ? void 0 : _b.format(),\n      nonce: (_c = data.nonce) === null || _c === void 0 ? void 0 : _c.toString(),\n      gas: (_d = data.gas) === null || _d === void 0 ? void 0 : _d.toString(),\n      gasPrice: (_e = data.gasPrice) === null || _e === void 0 ? void 0 : _e.toString(),\n      gasUsed: (_f = data.gasUsed) === null || _f === void 0 ? void 0 : _f.toString(),\n      cumulativeGasUsed: (_g = data.cumulativeGasUsed) === null || _g === void 0 ? void 0 : _g.toString(),\n      value: (_h = data.value) === null || _h === void 0 ? void 0 : _h.toString(),\n      chain: (_j = data.chain) === null || _j === void 0 ? void 0 : _j.format(),\n      contractAddress: (_k = data.contractAddress) === null || _k === void 0 ? void 0 : _k.format(),\n      logs: data.logs.map(function (log) {\n        return log.toJSON();\n      }),\n      signature: (_l = data.signature) === null || _l === void 0 ? void 0 : _l.toJSON(),\n      blockNumber: (_m = data.blockNumber) === null || _m === void 0 ? void 0 : _m.toString(),\n      blockTimestamp: data.blockTimestamp.toString()\n    });\n  };\n  /**\n   * @returns a JSON represention of the transaction.\n   * @example\n   * ```\n   * transaction.format()\n   * ```\n   */\n  EvmTransaction.prototype.format = function () {\n    return this.toJSON();\n  };\n  Object.defineProperty(EvmTransaction.prototype, \"result\", {\n    /**\n     * @returns the transaction\n     * @example\n     * ```\n     * transaction.result\n     * ```\n     */\n    get: function () {\n      return this._data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"to\", {\n    /**\n     * @returns the transaction to address\n     * @example\n     * ```\n     * transaction.to // EvmAddress\n     * ```\n     */\n    get: function () {\n      return this._data.to;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"from\", {\n    /**\n     * @returns the transaction from address\n     * @example\n     * ```\n     * transaction.address // EvmAddress\n     * ```\n     */\n    get: function () {\n      return this._data.from;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"nonce\", {\n    /**\n     * @returns the transaction nonce\n     * @example\n     * ```\n     * transaction.nonce // 326595425\n     * ```\n     */\n    get: function () {\n      return this._data.nonce;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"gas\", {\n    /**\n     * @returns the transaction gas\n     * @example\n     * ```\n     * transaction.gas // 6721975\n     * ```\n     */\n    get: function () {\n      return this._data.gas;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"gasPrice\", {\n    /**\n     * @returns the transaction gas price\n     * @example\n     * ```\n     * transaction.gasPrice // 20000000000\n     * ```\n     */\n    get: function () {\n      return this._data.gasPrice;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"gasUsed\", {\n    /**\n     * @returns the transaction gas used\n     * @example\n     * ```\n     * transaction.gasUsed // 1340925\n     * ```\n     */\n    get: function () {\n      return this._data.gasUsed;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"cumulativeGasUsed\", {\n    /**\n     * @returns the transaction cumulative gas used\n     * @example\n     * ```\n     * transaction.cumulativeGasUsed // 1340925\n     * ```\n     */\n    get: function () {\n      return this._data.cumulativeGasUsed;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"blockNumber\", {\n    /**\n     * @returns the transaction block number\n     * @example\n     * ```\n     * transaction.blockNumber // 12526958\n     * ```\n     */\n    get: function () {\n      return this._data.blockNumber;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"value\", {\n    /**\n     * @returns the transaction value\n     * @example\n     * ```\n     * transaction.value // EvmNative\n     * ```\n     */\n    get: function () {\n      return this._data.value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"chain\", {\n    /**\n     * @returns the transaction chain\n     * @example\n     * ```\n     * transaction.chain // EvmChain\n     * ```\n     */\n    get: function () {\n      return this._data.chain;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"contractAddress\", {\n    /**\n     * @returns the transaction contract address\n     * @example\n     * ```\n     * transaction.contractAddress // EvmAddress\n     * ```\n     */\n    get: function () {\n      return this._data.contractAddress;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"logs\", {\n    /**\n     * @returns the transaction logs\n     * @example\n     * ```\n     * transaction.logs // EvmTransactionLog[]\n     * ```\n     */\n    get: function () {\n      return this._data.logs;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"receiptRoot\", {\n    /**\n     * @returns the transaction receipt root\n     * @example\n     * ```\n     * transaction.receiptRoot // string\n     * ```\n     */\n    get: function () {\n      return this._data.receiptRoot;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"receiptStatus\", {\n    /**\n     * @returns the transaction receipt status\n     * @example\n     * ```\n     * transaction.receiptStatus // 1\n     * ```\n     */\n    get: function () {\n      return this._data.receiptStatus;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"data\", {\n    /**\n     * @returns the transaction data\n     * @example\n     * ```\n     * transaction.data // 0x000000000000000000000000000000000000000000000000000000000000002\n     * ```\n     */\n    get: function () {\n      return this._data.data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"hash\", {\n    /**\n     * @returns the transaction hash\n     * @example\n     * ```\n     * transaction.hash // 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\n     * ```\n     */\n    get: function () {\n      return this._data.hash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"type\", {\n    /**\n     * @returns the transaction type\n     * @example\n     * ```\n     * transaction.type // 1\n     * ```\n     */\n    get: function () {\n      return this._data.type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"blockHash\", {\n    /**\n     * @returns the transaction black hash\n     * @example\n     * ```\n     * transaction.blockHash // 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86\n     * ```\n     */\n    get: function () {\n      return this._data.blockHash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"blockTimestamp\", {\n    /**\n     * @returns the transaction block timestamp\n     * @example\n     * ```\n     * transaction.blockTimestamp // Date\n     * ```\n     */\n    get: function () {\n      return this._data.blockTimestamp;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"signature\", {\n    /**\n     * @returns the signature (if available)\n     * @example\n     * ```\n     * transaction.signature // EvmSignature\n     * ```\n     */\n    get: function () {\n      return this._data.signature;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"index\", {\n    /**\n     * @returns the index\n     * @example\n     * ```\n     * transaction.index // 1\n     * ```\n     */\n    get: function () {\n      return this._data.index;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"v\", {\n    get: function () {\n      var _a;\n      return (_a = this._data.signature) === null || _a === void 0 ? void 0 : _a.v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"r\", {\n    get: function () {\n      var _a;\n      return (_a = this._data.signature) === null || _a === void 0 ? void 0 : _a.r;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"s\", {\n    get: function () {\n      var _a;\n      return (_a = this._data.signature) === null || _a === void 0 ? void 0 : _a.s;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  EvmTransaction.parse = function (data, core) {\n    var _a;\n    return {\n      from: EvmAddress_1.EvmAddress.create(data.from, core),\n      to: (0, common_core_1.maybe)(data.to, function (to) {\n        return EvmAddress_1.EvmAddress.create(to, core);\n      }),\n      nonce: (0, common_core_1.maybe)(data.nonce, common_core_1.BigNumber.create),\n      data: (0, common_core_1.maybe)(data.data),\n      value: (0, common_core_1.maybe)(data.value, function (val) {\n        return EvmNative_1.EvmNative.create(val, 'wei');\n      }),\n      hash: data.hash,\n      type: (0, common_core_1.maybe)(data.type, function (value) {\n        return +value;\n      }),\n      chain: EvmChain_1.EvmChain.create(data.chain),\n      gas: (0, common_core_1.maybe)(data.gas, common_core_1.BigNumber.create),\n      gasPrice: common_core_1.BigNumber.create(data.gasPrice),\n      index: +data.index,\n      blockNumber: common_core_1.BigNumber.create(data.blockNumber),\n      blockHash: data.blockHash,\n      blockTimestamp: (0, common_core_1.dateInputToDate)(data.blockTimestamp),\n      cumulativeGasUsed: common_core_1.BigNumber.create(data.cumulativeGasUsed),\n      gasUsed: common_core_1.BigNumber.create(data.gasUsed),\n      contractAddress: (0, common_core_1.maybe)(data.contractAddress, function (address) {\n        return EvmAddress_1.EvmAddress.create(address, core);\n      }),\n      receiptRoot: (0, common_core_1.maybe)(data.receiptRoot),\n      receiptStatus: (0, common_core_1.maybe)(data.receiptStatus, function (status) {\n        return +status;\n      }),\n      logs: ((_a = data.logs) !== null && _a !== void 0 ? _a : []).map(function (log) {\n        return EvmTransactionLog_1.EvmTransactionLog.create(log);\n      }),\n      signature: (0, common_core_1.maybe)(data.signature, EvmSignature_1.EvmSignature.create)\n    };\n  };\n  return EvmTransaction;\n}();\nexports.EvmTransaction = EvmTransaction;","map":{"version":3,"sources":["../../../src/dataTypes/EvmTransaction/EvmTransaction.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EvmTransaction = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar EvmAddress_1 = require(\"../EvmAddress\");\nvar EvmChain_1 = require(\"../EvmChain\");\nvar EvmNative_1 = require(\"../EvmNative\");\nvar EvmTransactionLog_1 = require(\"../EvmTransactionLog\");\nvar EvmSignature_1 = require(\"../EvmSignature/EvmSignature\");\n/**\n * The EvmTranaction is a representation of a published transaction.\n *\n * Use this class any time you work with a transaction.\n *\n * @category DataType\n */\nvar EvmTransaction = /** @class */ (function () {\n    function EvmTransaction(data, core) {\n        this._data = EvmTransaction.parse(data, core);\n    }\n    /**\n     * Create a new instance of EvmTransaction from any valid transaction input\n     * @param data - the EvmTransactionish type\n     * @example\n     * ```\n     * const transaction = EvmTransaction.create(data);\n     *```\n     */\n    EvmTransaction.create = function (data, core) {\n        if (data instanceof EvmTransaction) {\n            return data;\n        }\n        var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n        return new EvmTransaction(data, finalCore);\n    };\n    /**\n     * Check the equality between two Evm transactions\n     * @param dataA - The first transaction\n     * @param dataB - The second transaction\n     * @example\n     * ```ts\n     * EvmTransaction.equals(dataA, dataB)\n     * ```\n     */\n    EvmTransaction.equals = function (dataA, dataB) {\n        var transactionA = EvmTransaction.create(dataA);\n        var transactionB = EvmTransaction.create(dataB);\n        if (!transactionA._data.chain.equals(transactionB._data.chain)) {\n            return false;\n        }\n        if (transactionA._data.hash !== transactionB._data.hash) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Checks the equality of the current transaction with another evm transaction\n     * @param data - the transaction to compare with\n     * @example\n     * ```ts\n     * transaction.equals(data)\n     * ```\n     */\n    EvmTransaction.prototype.equals = function (data) {\n        return EvmTransaction.equals(this, data);\n    };\n    EvmTransaction.prototype.toJSON = function () {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        var data = this._data;\n        return __assign(__assign({}, data), { to: (_a = data.to) === null || _a === void 0 ? void 0 : _a.format(), from: (_b = data.from) === null || _b === void 0 ? void 0 : _b.format(), nonce: (_c = data.nonce) === null || _c === void 0 ? void 0 : _c.toString(), gas: (_d = data.gas) === null || _d === void 0 ? void 0 : _d.toString(), gasPrice: (_e = data.gasPrice) === null || _e === void 0 ? void 0 : _e.toString(), gasUsed: (_f = data.gasUsed) === null || _f === void 0 ? void 0 : _f.toString(), cumulativeGasUsed: (_g = data.cumulativeGasUsed) === null || _g === void 0 ? void 0 : _g.toString(), value: (_h = data.value) === null || _h === void 0 ? void 0 : _h.toString(), chain: (_j = data.chain) === null || _j === void 0 ? void 0 : _j.format(), contractAddress: (_k = data.contractAddress) === null || _k === void 0 ? void 0 : _k.format(), logs: data.logs.map(function (log) { return log.toJSON(); }), signature: (_l = data.signature) === null || _l === void 0 ? void 0 : _l.toJSON(), blockNumber: (_m = data.blockNumber) === null || _m === void 0 ? void 0 : _m.toString(), blockTimestamp: data.blockTimestamp.toString() });\n    };\n    /**\n     * @returns a JSON represention of the transaction.\n     * @example\n     * ```\n     * transaction.format()\n     * ```\n     */\n    EvmTransaction.prototype.format = function () {\n        return this.toJSON();\n    };\n    Object.defineProperty(EvmTransaction.prototype, \"result\", {\n        /**\n         * @returns the transaction\n         * @example\n         * ```\n         * transaction.result\n         * ```\n         */\n        get: function () {\n            return this._data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"to\", {\n        /**\n         * @returns the transaction to address\n         * @example\n         * ```\n         * transaction.to // EvmAddress\n         * ```\n         */\n        get: function () {\n            return this._data.to;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"from\", {\n        /**\n         * @returns the transaction from address\n         * @example\n         * ```\n         * transaction.address // EvmAddress\n         * ```\n         */\n        get: function () {\n            return this._data.from;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"nonce\", {\n        /**\n         * @returns the transaction nonce\n         * @example\n         * ```\n         * transaction.nonce // 326595425\n         * ```\n         */\n        get: function () {\n            return this._data.nonce;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"gas\", {\n        /**\n         * @returns the transaction gas\n         * @example\n         * ```\n         * transaction.gas // 6721975\n         * ```\n         */\n        get: function () {\n            return this._data.gas;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"gasPrice\", {\n        /**\n         * @returns the transaction gas price\n         * @example\n         * ```\n         * transaction.gasPrice // 20000000000\n         * ```\n         */\n        get: function () {\n            return this._data.gasPrice;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"gasUsed\", {\n        /**\n         * @returns the transaction gas used\n         * @example\n         * ```\n         * transaction.gasUsed // 1340925\n         * ```\n         */\n        get: function () {\n            return this._data.gasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"cumulativeGasUsed\", {\n        /**\n         * @returns the transaction cumulative gas used\n         * @example\n         * ```\n         * transaction.cumulativeGasUsed // 1340925\n         * ```\n         */\n        get: function () {\n            return this._data.cumulativeGasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"blockNumber\", {\n        /**\n         * @returns the transaction block number\n         * @example\n         * ```\n         * transaction.blockNumber // 12526958\n         * ```\n         */\n        get: function () {\n            return this._data.blockNumber;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"value\", {\n        /**\n         * @returns the transaction value\n         * @example\n         * ```\n         * transaction.value // EvmNative\n         * ```\n         */\n        get: function () {\n            return this._data.value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"chain\", {\n        /**\n         * @returns the transaction chain\n         * @example\n         * ```\n         * transaction.chain // EvmChain\n         * ```\n         */\n        get: function () {\n            return this._data.chain;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"contractAddress\", {\n        /**\n         * @returns the transaction contract address\n         * @example\n         * ```\n         * transaction.contractAddress // EvmAddress\n         * ```\n         */\n        get: function () {\n            return this._data.contractAddress;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"logs\", {\n        /**\n         * @returns the transaction logs\n         * @example\n         * ```\n         * transaction.logs // EvmTransactionLog[]\n         * ```\n         */\n        get: function () {\n            return this._data.logs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"receiptRoot\", {\n        /**\n         * @returns the transaction receipt root\n         * @example\n         * ```\n         * transaction.receiptRoot // string\n         * ```\n         */\n        get: function () {\n            return this._data.receiptRoot;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"receiptStatus\", {\n        /**\n         * @returns the transaction receipt status\n         * @example\n         * ```\n         * transaction.receiptStatus // 1\n         * ```\n         */\n        get: function () {\n            return this._data.receiptStatus;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"data\", {\n        /**\n         * @returns the transaction data\n         * @example\n         * ```\n         * transaction.data // 0x000000000000000000000000000000000000000000000000000000000000002\n         * ```\n         */\n        get: function () {\n            return this._data.data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"hash\", {\n        /**\n         * @returns the transaction hash\n         * @example\n         * ```\n         * transaction.hash // 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\n         * ```\n         */\n        get: function () {\n            return this._data.hash;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"type\", {\n        /**\n         * @returns the transaction type\n         * @example\n         * ```\n         * transaction.type // 1\n         * ```\n         */\n        get: function () {\n            return this._data.type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"blockHash\", {\n        /**\n         * @returns the transaction black hash\n         * @example\n         * ```\n         * transaction.blockHash // 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86\n         * ```\n         */\n        get: function () {\n            return this._data.blockHash;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"blockTimestamp\", {\n        /**\n         * @returns the transaction block timestamp\n         * @example\n         * ```\n         * transaction.blockTimestamp // Date\n         * ```\n         */\n        get: function () {\n            return this._data.blockTimestamp;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"signature\", {\n        /**\n         * @returns the signature (if available)\n         * @example\n         * ```\n         * transaction.signature // EvmSignature\n         * ```\n         */\n        get: function () {\n            return this._data.signature;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"index\", {\n        /**\n         * @returns the index\n         * @example\n         * ```\n         * transaction.index // 1\n         * ```\n         */\n        get: function () {\n            return this._data.index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"v\", {\n        get: function () {\n            var _a;\n            return (_a = this._data.signature) === null || _a === void 0 ? void 0 : _a.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"r\", {\n        get: function () {\n            var _a;\n            return (_a = this._data.signature) === null || _a === void 0 ? void 0 : _a.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransaction.prototype, \"s\", {\n        get: function () {\n            var _a;\n            return (_a = this._data.signature) === null || _a === void 0 ? void 0 : _a.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EvmTransaction.parse = function (data, core) {\n        var _a;\n        return ({\n            from: EvmAddress_1.EvmAddress.create(data.from, core),\n            to: (0, common_core_1.maybe)(data.to, function (to) { return EvmAddress_1.EvmAddress.create(to, core); }),\n            nonce: (0, common_core_1.maybe)(data.nonce, common_core_1.BigNumber.create),\n            data: (0, common_core_1.maybe)(data.data),\n            value: (0, common_core_1.maybe)(data.value, function (val) { return EvmNative_1.EvmNative.create(val, 'wei'); }),\n            hash: data.hash,\n            type: (0, common_core_1.maybe)(data.type, function (value) { return +value; }),\n            chain: EvmChain_1.EvmChain.create(data.chain),\n            gas: (0, common_core_1.maybe)(data.gas, common_core_1.BigNumber.create),\n            gasPrice: common_core_1.BigNumber.create(data.gasPrice),\n            index: +data.index,\n            blockNumber: common_core_1.BigNumber.create(data.blockNumber),\n            blockHash: data.blockHash,\n            blockTimestamp: (0, common_core_1.dateInputToDate)(data.blockTimestamp),\n            cumulativeGasUsed: common_core_1.BigNumber.create(data.cumulativeGasUsed),\n            gasUsed: common_core_1.BigNumber.create(data.gasUsed),\n            contractAddress: (0, common_core_1.maybe)(data.contractAddress, function (address) { return EvmAddress_1.EvmAddress.create(address, core); }),\n            receiptRoot: (0, common_core_1.maybe)(data.receiptRoot),\n            receiptStatus: (0, common_core_1.maybe)(data.receiptStatus, function (status) { return +status; }),\n            logs: ((_a = data.logs) !== null && _a !== void 0 ? _a : []).map(function (log) { return EvmTransactionLog_1.EvmTransactionLog.create(log); }),\n            signature: (0, common_core_1.maybe)(data.signature, EvmSignature_1.EvmSignature.create),\n        });\n    };\n    return EvmTransaction;\n}());\nexports.EvmTransaction = EvmTransaction;\n//# sourceMappingURL=EvmTransaction.js.map"]},"metadata":{},"sourceType":"script"}