{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTokenAllowanceOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get the amount which the spender is allowed to withdraw on behalf of the owner. */\nexports.getTokenAllowanceOperation = {\n  method: 'GET',\n  name: 'getTokenAllowance',\n  id: 'getTokenAllowance',\n  groupName: 'token',\n  urlPathPattern: '/erc20/{address}/allowance',\n  urlPathParamNames: ['address'],\n  urlSearchParamNames: ['chain', 'ownerAddress', 'spenderAddress'],\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    owner_address: dataTypes_1.EvmAddress.create(request.ownerAddress, core).lowercase,\n    spender_address: dataTypes_1.EvmAddress.create(request.spenderAddress, core).lowercase,\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase\n  };\n}\nfunction deserializeResponse(jsonResponse) {\n  return {\n    allowance: common_core_1.BigNumber.create(jsonResponse.allowance)\n  };\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    ownerAddress: dataTypes_1.EvmAddress.create(request.ownerAddress, core).checksum,\n    spenderAddress: dataTypes_1.EvmAddress.create(request.spenderAddress, core).checksum,\n    address: dataTypes_1.EvmAddress.create(request.address, core).checksum\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    ownerAddress: dataTypes_1.EvmAddress.create(jsonRequest.ownerAddress, core),\n    spenderAddress: dataTypes_1.EvmAddress.create(jsonRequest.spenderAddress, core),\n    address: dataTypes_1.EvmAddress.create(jsonRequest.address, core)\n  };\n}","map":{"version":3,"sources":["../../../src/operations/token/getTokenAllowanceOperation.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;AA8BA;AACa,OAAA,CAAA,0BAA0B,GAKnC;EACF,MAAM,EAAE,KAAK;EACb,IAAI,EAAE,mBAAmB;EACzB,EAAE,EAAE,mBAAmB;EACvB,SAAS,EAAE,OAAO;EAClB,cAAc,EAAE,4BAA4B;EAC5C,iBAAiB,EAAE,CAAC,SAAS,CAAC;EAC9B,mBAAmB,EAAE,CAAC,OAAO,EAAE,cAAc,EAAE,gBAAgB,CAAC;EAEhE,mBAAmB,EAAA,mBAAA;EACnB,gBAAgB,EAAA,gBAAA;EAChB,kBAAkB,EAAA,kBAAA;EAClB,mBAAmB,EAAA;CACpB;AAED;AAEA,SAAS,mBAAmB,CAAC,OAAiC,EAAE,IAAU,EAAA;EACxE,OAAO;IACL,KAAK,EAAE,kBAAA,CAAA,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,MAAM;IAC3D,aAAa,EAAE,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,SAAS;IACtE,eAAe,EAAE,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,SAAS;IAC1E,OAAO,EAAE,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;GACnD;AACH;AAEA,SAAS,mBAAmB,CAAC,YAA2C,EAAA;EACtE,OAAO;IACL,SAAS,EAAE,aAAA,CAAA,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS;GACnD;AACH;AAEA,SAAS,gBAAgB,CAAC,OAAiC,EAAE,IAAU,EAAA;EACrE,OAAO;IACL,KAAK,EAAE,kBAAA,CAAA,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,MAAM;IAC3D,YAAY,EAAE,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,QAAQ;IACpE,cAAc,EAAE,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,QAAQ;IACxE,OAAO,EAAE,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;GACnD;AACH;AAEA,SAAS,kBAAkB,CAAC,WAAyC,EAAE,IAAU,EAAA;EAC/E,OAAO;IACL,KAAK,EAAE,WAAA,CAAA,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC;IAC/C,YAAY,EAAE,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC;IAC/D,cAAc,EAAE,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC;IACnE,OAAO,EAAE,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI;GACrD;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTokenAllowanceOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get the amount which the spender is allowed to withdraw on behalf of the owner. */\nexports.getTokenAllowanceOperation = {\n    method: 'GET',\n    name: 'getTokenAllowance',\n    id: 'getTokenAllowance',\n    groupName: 'token',\n    urlPathPattern: '/erc20/{address}/allowance',\n    urlPathParamNames: ['address'],\n    urlSearchParamNames: ['chain', 'ownerAddress', 'spenderAddress'],\n    getRequestUrlParams: getRequestUrlParams,\n    serializeRequest: serializeRequest,\n    deserializeRequest: deserializeRequest,\n    deserializeResponse: deserializeResponse,\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n    return {\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n        owner_address: dataTypes_1.EvmAddress.create(request.ownerAddress, core).lowercase,\n        spender_address: dataTypes_1.EvmAddress.create(request.spenderAddress, core).lowercase,\n        address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n    };\n}\nfunction deserializeResponse(jsonResponse) {\n    return {\n        allowance: common_core_1.BigNumber.create(jsonResponse.allowance),\n    };\n}\nfunction serializeRequest(request, core) {\n    return {\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n        ownerAddress: dataTypes_1.EvmAddress.create(request.ownerAddress, core).checksum,\n        spenderAddress: dataTypes_1.EvmAddress.create(request.spenderAddress, core).checksum,\n        address: dataTypes_1.EvmAddress.create(request.address, core).checksum,\n    };\n}\nfunction deserializeRequest(jsonRequest, core) {\n    return {\n        chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n        ownerAddress: dataTypes_1.EvmAddress.create(jsonRequest.ownerAddress, core),\n        spenderAddress: dataTypes_1.EvmAddress.create(jsonRequest.spenderAddress, core),\n        address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n    };\n}\n//# sourceMappingURL=getTokenAllowanceOperation.js.map"]},"metadata":{},"sourceType":"script"}