{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NftTransferDocumentBuilder = void 0;\nvar LogRelatedId_1 = require(\"../common/LogRelatedId\");\nvar NftTransferDocumentBuilder = /** @class */function () {\n  function NftTransferDocumentBuilder() {}\n  NftTransferDocumentBuilder.build = function (transfer, block, confirmed, chainId) {\n    var chain = Number(chainId);\n    var document = {\n      id: LogRelatedId_1.LogRelatedId.create(chain, transfer.transactionHash, transfer.logIndex),\n      transactionHash: transfer.transactionHash,\n      contract: transfer.contract,\n      logIndex: transfer.logIndex,\n      operator: transfer.operator,\n      from: transfer.from,\n      to: transfer.to,\n      tokenId: transfer.tokenId,\n      amount: transfer.amount,\n      tokenContractType: transfer.tokenContractType,\n      tokenName: transfer.tokenName,\n      tokenSymbol: transfer.tokenSymbol,\n      blockHash: block.hash,\n      blockTimestamp: parseInt(block.timestamp, 10),\n      blockNumber: parseInt(block.number, 10),\n      confirmed: confirmed,\n      chainId: chain\n    };\n    return document;\n  };\n  return NftTransferDocumentBuilder;\n}();\nexports.NftTransferDocumentBuilder = NftTransferDocumentBuilder;","map":{"version":3,"sources":["../../../src/mapping/nft-transfers-processor/NftTransferDocumentBuilder.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;AA2BA,IAAA,0BAAA,GAAA,aAAA,YAAA;EAAA,SAAA,0BAAA,GAAA,CA6BA;EA5BgB,0BAAA,CAAA,KAAK,GAAnB,UAAoB,QAAsB,EAAE,KAAY,EAAE,SAAkB,EAAE,OAAe,EAAA;IAC3F,IAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;IAE7B,IAAM,QAAQ,GAAwB;MACpC,EAAE,EAAE,cAAA,CAAA,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC,QAAQ,CAAC;MAE3E,eAAe,EAAE,QAAQ,CAAC,eAAe;MACzC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;MAC3B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;MAE3B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;MAC3B,IAAI,EAAE,QAAQ,CAAC,IAAI;MACnB,EAAE,EAAE,QAAQ,CAAC,EAAE;MACf,OAAO,EAAE,QAAQ,CAAC,OAAO;MACzB,MAAM,EAAE,QAAQ,CAAC,MAAM;MAEvB,iBAAiB,EAAE,QAAQ,CAAC,iBAAiB;MAC7C,SAAS,EAAE,QAAQ,CAAC,SAAS;MAC7B,WAAW,EAAE,QAAQ,CAAC,WAAW;MAEjC,SAAS,EAAE,KAAK,CAAC,IAAI;MACrB,cAAc,EAAE,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC;MAC7C,WAAW,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC;MACvC,SAAS,EAAA,SAAA;MACT,OAAO,EAAE;KACV;IACD,OAAO,QAAQ;EACjB,CAAC;EACH,OAAA,0BAAC;AAAD,CAAC,EAAA;AA7BY,OAAA,CAAA,0BAAA,GAAA,0BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NftTransferDocumentBuilder = void 0;\nvar LogRelatedId_1 = require(\"../common/LogRelatedId\");\nvar NftTransferDocumentBuilder = /** @class */ (function () {\n    function NftTransferDocumentBuilder() {\n    }\n    NftTransferDocumentBuilder.build = function (transfer, block, confirmed, chainId) {\n        var chain = Number(chainId);\n        var document = {\n            id: LogRelatedId_1.LogRelatedId.create(chain, transfer.transactionHash, transfer.logIndex),\n            transactionHash: transfer.transactionHash,\n            contract: transfer.contract,\n            logIndex: transfer.logIndex,\n            operator: transfer.operator,\n            from: transfer.from,\n            to: transfer.to,\n            tokenId: transfer.tokenId,\n            amount: transfer.amount,\n            tokenContractType: transfer.tokenContractType,\n            tokenName: transfer.tokenName,\n            tokenSymbol: transfer.tokenSymbol,\n            blockHash: block.hash,\n            blockTimestamp: parseInt(block.timestamp, 10),\n            blockNumber: parseInt(block.number, 10),\n            confirmed: confirmed,\n            chainId: chain,\n        };\n        return document;\n    };\n    return NftTransferDocumentBuilder;\n}());\nexports.NftTransferDocumentBuilder = NftTransferDocumentBuilder;\n//# sourceMappingURL=NftTransferDocumentBuilder.js.map"]},"metadata":{},"sourceType":"script"}