{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperationRequestBuilder = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar config_1 = require(\"../config\");\nvar getCommonHeaders_1 = require(\"./getCommonHeaders\");\nvar OperationRequestBuilder = /** @class */function () {\n  function OperationRequestBuilder(operation, core) {\n    this.operation = operation;\n    this.core = core;\n  }\n  OperationRequestBuilder.prototype.prepareUrl = function (baseUrl, request) {\n    var _this = this;\n    var _a;\n    var urlParams = this.operation.getRequestUrlParams(request, this.core);\n    var urlPath = this.operation.urlPathPattern;\n    for (var _i = 0, _b = (_a = this.operation.urlPathParamNames) !== null && _a !== void 0 ? _a : []; _i < _b.length; _i++) {\n      var paramName = _b[_i];\n      var paramValue = urlParams[paramName];\n      if (paramValue === undefined || paramValue === null) {\n        throw new Error(\"Param \".concat(paramName, \" is required\"));\n      }\n      urlPath = urlPath.replace(\"{\".concat(paramName, \"}\"), paramValue);\n    }\n    var url = \"\".concat(baseUrl).concat(urlPath);\n    var urlSearchParams = {};\n    Object.keys(urlParams).filter(function (paramName) {\n      var _a;\n      return !((_a = _this.operation.urlPathParamNames) === null || _a === void 0 ? void 0 : _a.includes(paramName));\n    }).forEach(function (paramName) {\n      var paramValue = urlParams[paramName];\n      if (paramValue !== undefined && paramValue !== null) {\n        urlSearchParams[paramName] = paramValue;\n      }\n    });\n    return {\n      url: url,\n      urlSearchParams: urlSearchParams\n    };\n  };\n  OperationRequestBuilder.prototype.prepareBody = function (request) {\n    if (!this.operation.bodyType && !this.operation.getRequestBody) {\n      return undefined;\n    }\n    if (!this.operation.getRequestBody) {\n      throw new Error(\"getRequestBody is not implemented for operation \".concat(this.operation.name));\n    }\n    if (!this.operation.bodyParamNames) {\n      throw new Error(\"bodyParamNames are empty for operation \".concat(this.operation.name));\n    }\n    var body = this.operation.getRequestBody(request, this.core);\n    if (this.operation.bodyType === 'properties') {\n      return body;\n    }\n    if (this.operation.bodyType === 'raw') {\n      return body;\n    }\n    throw new Error(\"Not supported body type: \".concat(this.operation.bodyType));\n  };\n  OperationRequestBuilder.prototype.prepareHeaders = function () {\n    var apiKey = this.core.config.get(config_1.ApiUtilsConfig.apiKey);\n    var product = this.core.config.get(common_core_1.CoreConfig.product);\n    if (!apiKey) {\n      throw new common_core_1.MoralisApiError({\n        code: common_core_1.ApiErrorCode.API_KEY_NOT_SET,\n        message: 'apiKey is not set'\n      });\n    }\n    var headers = (0, getCommonHeaders_1.getCommonHeaders)();\n    headers['x-api-key'] = apiKey;\n    if (product) {\n      headers['x-moralis-product'] = product;\n    }\n    return headers;\n  };\n  return OperationRequestBuilder;\n}();\nexports.OperationRequestBuilder = OperationRequestBuilder;","map":{"version":3,"sources":["../../src/resolvers2/OperationRequestBuilder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OperationRequestBuilder = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar config_1 = require(\"../config\");\nvar getCommonHeaders_1 = require(\"./getCommonHeaders\");\nvar OperationRequestBuilder = /** @class */ (function () {\n    function OperationRequestBuilder(operation, core) {\n        this.operation = operation;\n        this.core = core;\n    }\n    OperationRequestBuilder.prototype.prepareUrl = function (baseUrl, request) {\n        var _this = this;\n        var _a;\n        var urlParams = this.operation.getRequestUrlParams(request, this.core);\n        var urlPath = this.operation.urlPathPattern;\n        for (var _i = 0, _b = (_a = this.operation.urlPathParamNames) !== null && _a !== void 0 ? _a : []; _i < _b.length; _i++) {\n            var paramName = _b[_i];\n            var paramValue = urlParams[paramName];\n            if (paramValue === undefined || paramValue === null) {\n                throw new Error(\"Param \".concat(paramName, \" is required\"));\n            }\n            urlPath = urlPath.replace(\"{\".concat(paramName, \"}\"), paramValue);\n        }\n        var url = \"\".concat(baseUrl).concat(urlPath);\n        var urlSearchParams = {};\n        Object.keys(urlParams)\n            .filter(function (paramName) { var _a; return !((_a = _this.operation.urlPathParamNames) === null || _a === void 0 ? void 0 : _a.includes(paramName)); })\n            .forEach(function (paramName) {\n            var paramValue = urlParams[paramName];\n            if (paramValue !== undefined && paramValue !== null) {\n                urlSearchParams[paramName] = paramValue;\n            }\n        });\n        return { url: url, urlSearchParams: urlSearchParams };\n    };\n    OperationRequestBuilder.prototype.prepareBody = function (request) {\n        if (!this.operation.bodyType && !this.operation.getRequestBody) {\n            return undefined;\n        }\n        if (!this.operation.getRequestBody) {\n            throw new Error(\"getRequestBody is not implemented for operation \".concat(this.operation.name));\n        }\n        if (!this.operation.bodyParamNames) {\n            throw new Error(\"bodyParamNames are empty for operation \".concat(this.operation.name));\n        }\n        var body = this.operation.getRequestBody(request, this.core);\n        if (this.operation.bodyType === 'properties') {\n            return body;\n        }\n        if (this.operation.bodyType === 'raw') {\n            return body;\n        }\n        throw new Error(\"Not supported body type: \".concat(this.operation.bodyType));\n    };\n    OperationRequestBuilder.prototype.prepareHeaders = function () {\n        var apiKey = this.core.config.get(config_1.ApiUtilsConfig.apiKey);\n        var product = this.core.config.get(common_core_1.CoreConfig.product);\n        if (!apiKey) {\n            throw new common_core_1.MoralisApiError({\n                code: common_core_1.ApiErrorCode.API_KEY_NOT_SET,\n                message: 'apiKey is not set',\n            });\n        }\n        var headers = (0, getCommonHeaders_1.getCommonHeaders)();\n        headers['x-api-key'] = apiKey;\n        if (product) {\n            headers['x-moralis-product'] = product;\n        }\n        return headers;\n    };\n    return OperationRequestBuilder;\n}());\nexports.OperationRequestBuilder = OperationRequestBuilder;\n//# sourceMappingURL=OperationRequestBuilder.js.map"]},"metadata":{},"sourceType":"script"}