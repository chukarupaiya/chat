{"ast":null,"code":"\"use strict\";\n\n/**\n * Copied (and remove obsolete functionalities) from https://github.com/solana-labs/solana-web3.js/blob/master/src/publickey.ts because\n * - We only care about address validation and conversion\n * - Resolving this dependency in UMD gives dependency errors\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PublicKey = exports.PUBLIC_KEY_LENGTH = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar bs58_1 = __importDefault(require(\"bs58\"));\nvar buffer_1 = require(\"buffer\");\n/**\n * Size of public key in bytes\n */\nexports.PUBLIC_KEY_LENGTH = 32;\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\nvar PublicKey = /** @class */function () {\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  function PublicKey(value) {\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        var decoded = bs58_1.default.decode(value);\n        if (decoded.length !== exports.PUBLIC_KEY_LENGTH) {\n          throw new Error(\"Invalid public key input\");\n        }\n        this._bn = new bn_js_1.default(decoded);\n      } else {\n        this._bn = new bn_js_1.default(value);\n      }\n      if (this._bn.byteLength() > exports.PUBLIC_KEY_LENGTH) {\n        throw new Error(\"Invalid public key input\");\n      }\n    }\n  }\n  /**\n   * Return the base-58 representation of the public key\n   */\n  PublicKey.prototype.toBase58 = function () {\n    return bs58_1.default.encode(this.toBytes());\n  };\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  PublicKey.prototype.toBytes = function () {\n    var buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  };\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  PublicKey.prototype.toBuffer = function () {\n    var b = this._bn.toArrayLike(buffer_1.Buffer);\n    if (b.length === exports.PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    var zeroPad = buffer_1.Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  };\n  Object.defineProperty(PublicKey.prototype, Symbol.toStringTag, {\n    get: function () {\n      return \"PublicKey(\".concat(this.toString(), \")\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Return the base-58 representation of the public key\n   */\n  PublicKey.prototype.toString = function () {\n    return this.toBase58();\n  };\n  return PublicKey;\n}();\nexports.PublicKey = PublicKey;","map":{"version":3,"sources":["../../src/utils/PublicKey.ts"],"names":[],"mappings":";;AAAA;;;;AAIG;;;;;;;;;;AAEH,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AAEA;;AAEG;AACU,OAAA,CAAA,iBAAiB,GAAG,EAAE;AAenC,SAAS,eAAe,CAAC,KAAwB,EAAA;EAC/C,OAAQ,KAAuB,CAAC,GAAG,KAAK,SAAS;AACnD;AAEA,IAAA,SAAA,GAAA,aAAA,YAAA;EAIE;;;AAGG;EACH,SAAA,SAAA,CAAY,KAAwB,EAAA;IAClC,IAAI,eAAe,CAAC,KAAK,CAAC,EAAE;MAC1B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG;KACrB,MAAM;MACL,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B;QACA,IAAM,OAAO,GAAG,MAAA,CAAA,OAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAClC,IAAI,OAAO,CAAC,MAAM,KAAK,OAAA,CAAA,iBAAiB,EAAE;UACxC,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC;QAC5C;QACD,IAAI,CAAC,GAAG,GAAG,IAAI,OAAA,CAAA,OAAE,CAAC,OAAO,CAAC;OAC3B,MAAM;QACL,IAAI,CAAC,GAAG,GAAG,IAAI,OAAA,CAAA,OAAE,CAAC,KAAK,CAAC;MACzB;MAED,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,OAAA,CAAA,iBAAiB,EAAE;QAC7C,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC;MAC5C;IACF;EACH;EAEA;;AAEG;EACH,SAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACE,OAAO,MAAA,CAAA,OAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;EACpC,CAAC;EAED;;AAEG;EACH,SAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACE,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE;IAC3B,OAAO,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC;EACnE,CAAC;EAED;;AAEG;EACH,SAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACE,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,QAAA,CAAA,MAAM,CAAC;IACtC,IAAI,CAAC,CAAC,MAAM,KAAK,OAAA,CAAA,iBAAiB,EAAE;MAClC,OAAO,CAAC;IACT;IAED,IAAM,OAAO,GAAG,QAAA,CAAA,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;IAChC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;IAC9B,OAAO,OAAO;EAChB,CAAC;EAED,MAAA,CAAA,cAAA,CAAI,SAAA,CAAA,SAAA,EAAC,MAAM,CAAC,WAAY,EAAA;SAAxB,YAAA;MACE,OAAO,YAAA,CAAA,MAAA,CAAa,IAAI,CAAC,QAAQ,EAAE,EAAA,GAAA,CAAG;IACxC,CAAC;;;IAAA;EAED;;AAEG;EACH,SAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACE,OAAO,IAAI,CAAC,QAAQ,EAAE;EACxB,CAAC;EACH,OAAA,SAAC;AAAD,CAAC,EAAA;AApEY,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copied (and remove obsolete functionalities) from https://github.com/solana-labs/solana-web3.js/blob/master/src/publickey.ts because\n * - We only care about address validation and conversion\n * - Resolving this dependency in UMD gives dependency errors\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublicKey = exports.PUBLIC_KEY_LENGTH = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar bs58_1 = __importDefault(require(\"bs58\"));\nvar buffer_1 = require(\"buffer\");\n/**\n * Size of public key in bytes\n */\nexports.PUBLIC_KEY_LENGTH = 32;\nfunction isPublicKeyData(value) {\n    return value._bn !== undefined;\n}\nvar PublicKey = /** @class */ (function () {\n    /**\n     * Create a new PublicKey object\n     * @param value ed25519 public key as buffer or base-58 encoded string\n     */\n    function PublicKey(value) {\n        if (isPublicKeyData(value)) {\n            this._bn = value._bn;\n        }\n        else {\n            if (typeof value === 'string') {\n                // assume base 58 encoding by default\n                var decoded = bs58_1.default.decode(value);\n                if (decoded.length !== exports.PUBLIC_KEY_LENGTH) {\n                    throw new Error(\"Invalid public key input\");\n                }\n                this._bn = new bn_js_1.default(decoded);\n            }\n            else {\n                this._bn = new bn_js_1.default(value);\n            }\n            if (this._bn.byteLength() > exports.PUBLIC_KEY_LENGTH) {\n                throw new Error(\"Invalid public key input\");\n            }\n        }\n    }\n    /**\n     * Return the base-58 representation of the public key\n     */\n    PublicKey.prototype.toBase58 = function () {\n        return bs58_1.default.encode(this.toBytes());\n    };\n    /**\n     * Return the byte array representation of the public key in big endian\n     */\n    PublicKey.prototype.toBytes = function () {\n        var buf = this.toBuffer();\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    };\n    /**\n     * Return the Buffer representation of the public key in big endian\n     */\n    PublicKey.prototype.toBuffer = function () {\n        var b = this._bn.toArrayLike(buffer_1.Buffer);\n        if (b.length === exports.PUBLIC_KEY_LENGTH) {\n            return b;\n        }\n        var zeroPad = buffer_1.Buffer.alloc(32);\n        b.copy(zeroPad, 32 - b.length);\n        return zeroPad;\n    };\n    Object.defineProperty(PublicKey.prototype, Symbol.toStringTag, {\n        get: function () {\n            return \"PublicKey(\".concat(this.toString(), \")\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Return the base-58 representation of the public key\n     */\n    PublicKey.prototype.toString = function () {\n        return this.toBase58();\n    };\n    return PublicKey;\n}());\nexports.PublicKey = PublicKey;\n//# sourceMappingURL=PublicKey.js.map"]},"metadata":{},"sourceType":"script"}