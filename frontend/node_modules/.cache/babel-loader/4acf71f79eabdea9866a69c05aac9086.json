{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPairAddressOperation = void 0;\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/**\n * Fetch the pair data of the provided token0+token1 combination.\n * The token0 and token1 options are interchangable (ie. there is no different outcome in \"token0=WETH and token1=USDT\" or \"token0=USDT and token1=WETH\")\n */\nexports.getPairAddressOperation = {\n  method: 'GET',\n  name: 'getPairAddress',\n  id: 'getPairAddress',\n  groupName: 'defi',\n  urlPathPattern: '/{token0Address}/{token1Address}/pairAddress',\n  urlPathParamNames: ['token0Address', 'token1Address'],\n  urlSearchParamNames: ['chain', 'toBlock', 'toDate', 'exchange'],\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    to_block: request.toBlock,\n    to_date: request.toDate ? new Date(request.toDate).toISOString() : undefined,\n    exchange: request.exchange,\n    token0Address: dataTypes_1.EvmAddress.create(request.token0Address, core).lowercase,\n    token1Address: dataTypes_1.EvmAddress.create(request.token1Address, core).lowercase\n  };\n}\nfunction createErc20Token(token, core, chain) {\n  var _a, _b, _c;\n  return dataTypes_1.Erc20Token.create({\n    contractAddress: (token === null || token === void 0 ? void 0 : token.address) ? dataTypes_1.EvmAddress.create(token === null || token === void 0 ? void 0 : token.address, core) : '',\n    decimals: (_a = token === null || token === void 0 ? void 0 : token.decimals) !== null && _a !== void 0 ? _a : 0,\n    name: (_b = token === null || token === void 0 ? void 0 : token.name) !== null && _b !== void 0 ? _b : '',\n    symbol: (_c = token === null || token === void 0 ? void 0 : token.symbol) !== null && _c !== void 0 ? _c : '',\n    logo: token === null || token === void 0 ? void 0 : token.logo,\n    thumbnail: token === null || token === void 0 ? void 0 : token.thumbnail,\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(chain, core)\n  }, core);\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  return {\n    //   ApiResult types generated all come as undefined which should not be the case TODO:\n    token0: {\n      token: createErc20Token(jsonResponse.token0, core, request.chain),\n      blockNumber: (_a = jsonResponse.token0) === null || _a === void 0 ? void 0 : _a.block_number,\n      validated: (_b = jsonResponse.token0) === null || _b === void 0 ? void 0 : _b.validated,\n      createdAt: ((_c = jsonResponse.token0) === null || _c === void 0 ? void 0 : _c.created_at) ? new Date((_d = jsonResponse.token0) === null || _d === void 0 ? void 0 : _d.created_at) : undefined\n    },\n    token1: {\n      token: createErc20Token(jsonResponse.token1, core, request.chain),\n      blockNumber: (_e = jsonResponse.token1) === null || _e === void 0 ? void 0 : _e.block_number,\n      validated: (_f = jsonResponse.token1) === null || _f === void 0 ? void 0 : _f.validated,\n      createdAt: ((_g = jsonResponse.token1) === null || _g === void 0 ? void 0 : _g.created_at) ? new Date((_h = jsonResponse.token1) === null || _h === void 0 ? void 0 : _h.created_at) : undefined\n    },\n    pairAddress: jsonResponse.pairAddress ? dataTypes_1.EvmAddress.create(jsonResponse.pairAddress, core) : undefined\n  };\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    toBlock: request.toBlock,\n    toDate: request.toDate ? new Date(request.toDate).toISOString() : undefined,\n    exchange: request.exchange,\n    token0Address: dataTypes_1.EvmAddress.create(request.token0Address, core).lowercase,\n    token1Address: dataTypes_1.EvmAddress.create(request.token1Address, core).lowercase\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    toBlock: jsonRequest.toBlock,\n    toDate: jsonRequest.toDate ? new Date(jsonRequest.toDate) : undefined,\n    exchange: jsonRequest.exchange,\n    token0Address: dataTypes_1.EvmAddress.create(jsonRequest.token0Address, core),\n    token1Address: dataTypes_1.EvmAddress.create(jsonRequest.token1Address, core)\n  };\n}","map":{"version":3,"sources":["../../../src/operations/defi/getPairAddressOperation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPairAddressOperation = void 0;\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/**\n * Fetch the pair data of the provided token0+token1 combination.\n * The token0 and token1 options are interchangable (ie. there is no different outcome in \"token0=WETH and token1=USDT\" or \"token0=USDT and token1=WETH\")\n */\nexports.getPairAddressOperation = {\n    method: 'GET',\n    name: 'getPairAddress',\n    id: 'getPairAddress',\n    groupName: 'defi',\n    urlPathPattern: '/{token0Address}/{token1Address}/pairAddress',\n    urlPathParamNames: ['token0Address', 'token1Address'],\n    urlSearchParamNames: ['chain', 'toBlock', 'toDate', 'exchange'],\n    getRequestUrlParams: getRequestUrlParams,\n    serializeRequest: serializeRequest,\n    deserializeRequest: deserializeRequest,\n    deserializeResponse: deserializeResponse,\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n    return {\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n        to_block: request.toBlock,\n        to_date: request.toDate ? new Date(request.toDate).toISOString() : undefined,\n        exchange: request.exchange,\n        token0Address: dataTypes_1.EvmAddress.create(request.token0Address, core).lowercase,\n        token1Address: dataTypes_1.EvmAddress.create(request.token1Address, core).lowercase,\n    };\n}\nfunction createErc20Token(token, core, chain) {\n    var _a, _b, _c;\n    return dataTypes_1.Erc20Token.create({\n        contractAddress: (token === null || token === void 0 ? void 0 : token.address) ? dataTypes_1.EvmAddress.create(token === null || token === void 0 ? void 0 : token.address, core) : '',\n        decimals: (_a = token === null || token === void 0 ? void 0 : token.decimals) !== null && _a !== void 0 ? _a : 0,\n        name: (_b = token === null || token === void 0 ? void 0 : token.name) !== null && _b !== void 0 ? _b : '',\n        symbol: (_c = token === null || token === void 0 ? void 0 : token.symbol) !== null && _c !== void 0 ? _c : '',\n        logo: token === null || token === void 0 ? void 0 : token.logo,\n        thumbnail: token === null || token === void 0 ? void 0 : token.thumbnail,\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(chain, core),\n    }, core);\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    return {\n        //   ApiResult types generated all come as undefined which should not be the case TODO:\n        token0: {\n            token: createErc20Token(jsonResponse.token0, core, request.chain),\n            blockNumber: (_a = jsonResponse.token0) === null || _a === void 0 ? void 0 : _a.block_number,\n            validated: (_b = jsonResponse.token0) === null || _b === void 0 ? void 0 : _b.validated,\n            createdAt: ((_c = jsonResponse.token0) === null || _c === void 0 ? void 0 : _c.created_at) ? new Date((_d = jsonResponse.token0) === null || _d === void 0 ? void 0 : _d.created_at) : undefined,\n        },\n        token1: {\n            token: createErc20Token(jsonResponse.token1, core, request.chain),\n            blockNumber: (_e = jsonResponse.token1) === null || _e === void 0 ? void 0 : _e.block_number,\n            validated: (_f = jsonResponse.token1) === null || _f === void 0 ? void 0 : _f.validated,\n            createdAt: ((_g = jsonResponse.token1) === null || _g === void 0 ? void 0 : _g.created_at) ? new Date((_h = jsonResponse.token1) === null || _h === void 0 ? void 0 : _h.created_at) : undefined,\n        },\n        pairAddress: jsonResponse.pairAddress ? dataTypes_1.EvmAddress.create(jsonResponse.pairAddress, core) : undefined,\n    };\n}\nfunction serializeRequest(request, core) {\n    return {\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n        toBlock: request.toBlock,\n        toDate: request.toDate ? new Date(request.toDate).toISOString() : undefined,\n        exchange: request.exchange,\n        token0Address: dataTypes_1.EvmAddress.create(request.token0Address, core).lowercase,\n        token1Address: dataTypes_1.EvmAddress.create(request.token1Address, core).lowercase,\n    };\n}\nfunction deserializeRequest(jsonRequest, core) {\n    return {\n        chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n        toBlock: jsonRequest.toBlock,\n        toDate: jsonRequest.toDate ? new Date(jsonRequest.toDate) : undefined,\n        exchange: jsonRequest.exchange,\n        token0Address: dataTypes_1.EvmAddress.create(jsonRequest.token0Address, core),\n        token1Address: dataTypes_1.EvmAddress.create(jsonRequest.token1Address, core),\n    };\n}\n//# sourceMappingURL=getPairAddressOperation.js.map"]},"metadata":{},"sourceType":"script"}