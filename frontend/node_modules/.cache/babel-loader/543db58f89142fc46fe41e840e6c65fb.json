{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EvmStream = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar common_evm_utils_1 = require(\"@moralisweb3/common-evm-utils\");\nvar StreamTrigger_1 = require(\"../StreamTrigger\");\n/**\n * The EvmStream class is a representation of Moralis Stream that is returned by the Moralis Stream API\n *\n * @category DataType\n */\nvar EvmStream = /** @class */function () {\n  function EvmStream(data, core) {\n    this._data = EvmStream.parse(data, core);\n  }\n  /**\n   * Create a new instance of EvmStream\n   *\n   * @param data - the EvmStreamish type\n   * @param core - the Core instance\n   * @example\n   * ```ts\n   * const evmStream = EvmStream.create(data);\n   * ```\n   * @returns an instance of EvmStream\n   */\n  EvmStream.create = function (data, core) {\n    if (data instanceof EvmStream) {\n      return data;\n    }\n    var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n    return new EvmStream(data, finalCore);\n  };\n  /**\n   * Compares two EvmStream data. It checks a deep equality check of both values.\n   * @param valueA - the first EvmStreamish data to compare\n   * @param valueB - the second EvmStreamish data to compare\n   * @returns true if the values are equal, false otherwise\n   * @example\n   * ```ts\n   *  EvmStream.equals(valueA, valueB);\n   * ```\n   */\n  EvmStream.equals = function (valueA, valueB) {\n    var _a, _b;\n    var evmStreamA = EvmStream.create(valueA);\n    var evmStreamB = EvmStream.create(valueB);\n    if (evmStreamA.id !== evmStreamB.id) {\n      return false;\n    }\n    if (((_a = evmStreamA.triggers) === null || _a === void 0 ? void 0 : _a.length) !== ((_b = evmStreamB.triggers) === null || _b === void 0 ? void 0 : _b.length) || !StreamTrigger_1.StreamTrigger.arrayEquals(evmStreamA.triggers || [], evmStreamB.triggers || [])) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Compares an EvmStreamish data to this EvmStream instance.\n   * @param value - the value to compare\n   * @returns true if the value is equal to the current instance, false otherwise\n   * @example\n   * ```ts\n   * evmStream.equals(value);\n   * ```\n   */\n  EvmStream.prototype.equals = function (value) {\n    return EvmStream.equals(this, value);\n  };\n  /**\n   * Converts the EvmStream instance to a JSON object.\n   * @returns JSON object of the EvmStream instance\n   * @example `evmStream.toJSON()`\n   */\n  EvmStream.prototype.toJSON = function () {\n    var _a = this._data,\n      chains = _a.chains,\n      triggers = _a.triggers,\n      data = __rest(_a, [\"chains\", \"triggers\"]);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return __assign(__assign({}, data), {\n      chainIds: chains.map(function (chain) {\n        return chain.format();\n      }),\n      triggers: triggers === null || triggers === void 0 ? void 0 : triggers.map(function (trigger) {\n        return trigger.format();\n      })\n    });\n  };\n  /**\n   * Converts the EvmStream instance to a JSON object.\n   * @returns JSON object of the EvmStream instance\n   * @example `evmStream.format()`\n   */\n  EvmStream.prototype.format = function () {\n    return this.toJSON();\n  };\n  Object.defineProperty(EvmStream.prototype, \"chains\", {\n    get: function () {\n      return this._data.chains;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"chainIds\", {\n    get: function () {\n      return this._data.chains.map(function (chain) {\n        return chain.format();\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"webhookUrl\", {\n    get: function () {\n      return this._data.webhookUrl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"description\", {\n    get: function () {\n      return this._data.description;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"tag\", {\n    get: function () {\n      return this._data.tag;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"topic0\", {\n    get: function () {\n      return this._data.topic0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"allAddresses\", {\n    get: function () {\n      return this._data.allAddresses;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"includeNativeTxs\", {\n    get: function () {\n      return this._data.includeNativeTxs;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"includeContractLogs\", {\n    get: function () {\n      return this._data.includeContractLogs;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"includeInternalTxs\", {\n    get: function () {\n      return this._data.includeInternalTxs;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"abi\", {\n    get: function () {\n      return this._data.abi;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"advancedOptions\", {\n    get: function () {\n      return this._data.advancedOptions;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"id\", {\n    get: function () {\n      return this._data.id;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"status\", {\n    get: function () {\n      return this._data.status;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"statusMessage\", {\n    get: function () {\n      return this._data.statusMessage;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"triggers\", {\n    get: function () {\n      return this._data.triggers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStream.prototype, \"getNativeBalances\", {\n    get: function () {\n      return this._data.getNativeBalances;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  EvmStream.parse = function (data, core) {\n    var _a, _b, _c, _d;\n    return __assign(__assign({}, data), {\n      chains: data.chainIds.map(function (chainId) {\n        return common_evm_utils_1.EvmChain.create(chainId, core);\n      }),\n      topic0: (0, common_core_1.maybe)(data.topic0),\n      allAddresses: (_a = data.allAddresses) !== null && _a !== void 0 ? _a : false,\n      includeContractLogs: (_b = data.includeContractLogs) !== null && _b !== void 0 ? _b : false,\n      includeInternalTxs: (_c = data.includeInternalTxs) !== null && _c !== void 0 ? _c : false,\n      includeNativeTxs: (_d = data.includeNativeTxs) !== null && _d !== void 0 ? _d : false,\n      advancedOptions: (0, common_core_1.maybe)(data.advancedOptions),\n      abi: (0, common_core_1.maybe)(data.abi),\n      triggers: (0, common_core_1.maybe)(data.triggers, function (triggers) {\n        return triggers.map(function (trigger) {\n          return StreamTrigger_1.StreamTrigger.create(trigger, core);\n        });\n      }),\n      getNativeBalances: (0, common_core_1.maybe)(data.getNativeBalances)\n    });\n  };\n  return EvmStream;\n}();\nexports.EvmStream = EvmStream;","map":{"version":3,"sources":["../../../src/dataTypes/EvmStream/EvmStream.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EvmStream = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar common_evm_utils_1 = require(\"@moralisweb3/common-evm-utils\");\nvar StreamTrigger_1 = require(\"../StreamTrigger\");\n/**\n * The EvmStream class is a representation of Moralis Stream that is returned by the Moralis Stream API\n *\n * @category DataType\n */\nvar EvmStream = /** @class */ (function () {\n    function EvmStream(data, core) {\n        this._data = EvmStream.parse(data, core);\n    }\n    /**\n     * Create a new instance of EvmStream\n     *\n     * @param data - the EvmStreamish type\n     * @param core - the Core instance\n     * @example\n     * ```ts\n     * const evmStream = EvmStream.create(data);\n     * ```\n     * @returns an instance of EvmStream\n     */\n    EvmStream.create = function (data, core) {\n        if (data instanceof EvmStream) {\n            return data;\n        }\n        var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n        return new EvmStream(data, finalCore);\n    };\n    /**\n     * Compares two EvmStream data. It checks a deep equality check of both values.\n     * @param valueA - the first EvmStreamish data to compare\n     * @param valueB - the second EvmStreamish data to compare\n     * @returns true if the values are equal, false otherwise\n     * @example\n     * ```ts\n     *  EvmStream.equals(valueA, valueB);\n     * ```\n     */\n    EvmStream.equals = function (valueA, valueB) {\n        var _a, _b;\n        var evmStreamA = EvmStream.create(valueA);\n        var evmStreamB = EvmStream.create(valueB);\n        if (evmStreamA.id !== evmStreamB.id) {\n            return false;\n        }\n        if (((_a = evmStreamA.triggers) === null || _a === void 0 ? void 0 : _a.length) !== ((_b = evmStreamB.triggers) === null || _b === void 0 ? void 0 : _b.length) ||\n            !StreamTrigger_1.StreamTrigger.arrayEquals(evmStreamA.triggers || [], evmStreamB.triggers || [])) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Compares an EvmStreamish data to this EvmStream instance.\n     * @param value - the value to compare\n     * @returns true if the value is equal to the current instance, false otherwise\n     * @example\n     * ```ts\n     * evmStream.equals(value);\n     * ```\n     */\n    EvmStream.prototype.equals = function (value) {\n        return EvmStream.equals(this, value);\n    };\n    /**\n     * Converts the EvmStream instance to a JSON object.\n     * @returns JSON object of the EvmStream instance\n     * @example `evmStream.toJSON()`\n     */\n    EvmStream.prototype.toJSON = function () {\n        var _a = this._data, chains = _a.chains, triggers = _a.triggers, data = __rest(_a, [\"chains\", \"triggers\"]);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return __assign(__assign({}, data), { chainIds: chains.map(function (chain) { return chain.format(); }), triggers: triggers === null || triggers === void 0 ? void 0 : triggers.map(function (trigger) { return trigger.format(); }) });\n    };\n    /**\n     * Converts the EvmStream instance to a JSON object.\n     * @returns JSON object of the EvmStream instance\n     * @example `evmStream.format()`\n     */\n    EvmStream.prototype.format = function () {\n        return this.toJSON();\n    };\n    Object.defineProperty(EvmStream.prototype, \"chains\", {\n        get: function () {\n            return this._data.chains;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"chainIds\", {\n        get: function () {\n            return this._data.chains.map(function (chain) { return chain.format(); });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"webhookUrl\", {\n        get: function () {\n            return this._data.webhookUrl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"description\", {\n        get: function () {\n            return this._data.description;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"tag\", {\n        get: function () {\n            return this._data.tag;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"topic0\", {\n        get: function () {\n            return this._data.topic0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"allAddresses\", {\n        get: function () {\n            return this._data.allAddresses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"includeNativeTxs\", {\n        get: function () {\n            return this._data.includeNativeTxs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"includeContractLogs\", {\n        get: function () {\n            return this._data.includeContractLogs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"includeInternalTxs\", {\n        get: function () {\n            return this._data.includeInternalTxs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"abi\", {\n        get: function () {\n            return this._data.abi;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"advancedOptions\", {\n        get: function () {\n            return this._data.advancedOptions;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"id\", {\n        get: function () {\n            return this._data.id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"status\", {\n        get: function () {\n            return this._data.status;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"statusMessage\", {\n        get: function () {\n            return this._data.statusMessage;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"triggers\", {\n        get: function () {\n            return this._data.triggers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmStream.prototype, \"getNativeBalances\", {\n        get: function () {\n            return this._data.getNativeBalances;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EvmStream.parse = function (data, core) {\n        var _a, _b, _c, _d;\n        return __assign(__assign({}, data), { chains: data.chainIds.map(function (chainId) { return common_evm_utils_1.EvmChain.create(chainId, core); }), topic0: (0, common_core_1.maybe)(data.topic0), allAddresses: (_a = data.allAddresses) !== null && _a !== void 0 ? _a : false, includeContractLogs: (_b = data.includeContractLogs) !== null && _b !== void 0 ? _b : false, includeInternalTxs: (_c = data.includeInternalTxs) !== null && _c !== void 0 ? _c : false, includeNativeTxs: (_d = data.includeNativeTxs) !== null && _d !== void 0 ? _d : false, advancedOptions: (0, common_core_1.maybe)(data.advancedOptions), abi: (0, common_core_1.maybe)(data.abi), triggers: (0, common_core_1.maybe)(data.triggers, function (triggers) { return triggers.map(function (trigger) { return StreamTrigger_1.StreamTrigger.create(trigger, core); }); }), getNativeBalances: (0, common_core_1.maybe)(data.getNativeBalances) });\n    };\n    return EvmStream;\n}());\nexports.EvmStream = EvmStream;\n//# sourceMappingURL=EvmStream.js.map"]},"metadata":{},"sourceType":"script"}