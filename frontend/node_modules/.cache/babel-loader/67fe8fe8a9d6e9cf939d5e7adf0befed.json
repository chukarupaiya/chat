{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTokenPriceOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get the token price denominated in the blockchains native token and USD. */\nexports.getTokenPriceOperation = {\n  method: 'GET',\n  name: 'getTokenPrice',\n  id: 'getTokenPrice',\n  groupName: 'token',\n  urlPathPattern: '/erc20/{address}/price',\n  urlPathParamNames: ['address'],\n  urlSearchParamNames: ['chain', 'exchange', 'toBlock'],\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    exchange: request.exchange,\n    to_block: (0, common_core_1.maybe)(request.toBlock, String),\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase\n  };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n  var _a, _b, _c;\n  return __assign(__assign({}, (0, common_core_1.toCamelCase)(jsonResponse)), {\n    nativePrice: ((_a = jsonResponse.nativePrice) === null || _a === void 0 ? void 0 : _a.value) ? dataTypes_1.EvmNative.create((_b = jsonResponse.nativePrice) === null || _b === void 0 ? void 0 : _b.value, (_c = jsonResponse.nativePrice) === null || _c === void 0 ? void 0 : _c.decimals) : null,\n    exchangeAddress: jsonResponse.exchangeAddress ? dataTypes_1.EvmAddress.create(jsonResponse.exchangeAddress, core) : null\n  });\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    exchange: request.exchange,\n    toBlock: request.toBlock,\n    address: dataTypes_1.EvmAddress.create(request.address, core).checksum\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    exchange: jsonRequest.exchange,\n    toBlock: jsonRequest.toBlock,\n    address: dataTypes_1.EvmAddress.create(jsonRequest.address, core)\n  };\n}","map":{"version":3,"sources":["../../../src/operations/token/getTokenPriceOperation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTokenPriceOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get the token price denominated in the blockchains native token and USD. */\nexports.getTokenPriceOperation = {\n    method: 'GET',\n    name: 'getTokenPrice',\n    id: 'getTokenPrice',\n    groupName: 'token',\n    urlPathPattern: '/erc20/{address}/price',\n    urlPathParamNames: ['address'],\n    urlSearchParamNames: ['chain', 'exchange', 'toBlock'],\n    getRequestUrlParams: getRequestUrlParams,\n    serializeRequest: serializeRequest,\n    deserializeRequest: deserializeRequest,\n    deserializeResponse: deserializeResponse,\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n    return {\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n        exchange: request.exchange,\n        to_block: (0, common_core_1.maybe)(request.toBlock, String),\n        address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n    };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n    var _a, _b, _c;\n    return __assign(__assign({}, (0, common_core_1.toCamelCase)(jsonResponse)), { nativePrice: ((_a = jsonResponse.nativePrice) === null || _a === void 0 ? void 0 : _a.value)\n            ? dataTypes_1.EvmNative.create((_b = jsonResponse.nativePrice) === null || _b === void 0 ? void 0 : _b.value, (_c = jsonResponse.nativePrice) === null || _c === void 0 ? void 0 : _c.decimals)\n            : null, exchangeAddress: jsonResponse.exchangeAddress ? dataTypes_1.EvmAddress.create(jsonResponse.exchangeAddress, core) : null });\n}\nfunction serializeRequest(request, core) {\n    return {\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n        exchange: request.exchange,\n        toBlock: request.toBlock,\n        address: dataTypes_1.EvmAddress.create(request.address, core).checksum,\n    };\n}\nfunction deserializeRequest(jsonRequest, core) {\n    return {\n        chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n        exchange: jsonRequest.exchange,\n        toBlock: jsonRequest.toBlock,\n        address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n    };\n}\n//# sourceMappingURL=getTokenPriceOperation.js.map"]},"metadata":{},"sourceType":"script"}