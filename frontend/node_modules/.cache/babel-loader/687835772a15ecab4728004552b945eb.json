{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NftApprovalDocumentBuilder = void 0;\nvar LogRelatedId_1 = require(\"../common/LogRelatedId\");\nvar NftApprovalDocumentBuilder = /** @class */function () {\n  function NftApprovalDocumentBuilder() {}\n  NftApprovalDocumentBuilder.build = function (approval, block, confirmed, chainId) {\n    var chain = Number(chainId);\n    var document = {\n      id: LogRelatedId_1.LogRelatedId.create(chain, approval.transactionHash, approval.logIndex),\n      transactionHash: approval.transactionHash,\n      contract: approval.contract,\n      logIndex: approval.logIndex,\n      operator: approval.operator,\n      account: approval.account,\n      approvedAll: approval.approvedAll,\n      tokenId: approval.tokenId,\n      tokenContractType: approval.tokenContractType,\n      tokenName: approval.tokenName,\n      tokenSymbol: approval.tokenSymbol,\n      blockHash: block.hash,\n      blockTimestamp: parseInt(block.timestamp, 10),\n      blockNumber: parseInt(block.number, 10),\n      confirmed: confirmed,\n      chainId: chain\n    };\n    return document;\n  };\n  return NftApprovalDocumentBuilder;\n}();\nexports.NftApprovalDocumentBuilder = NftApprovalDocumentBuilder;","map":{"version":3,"sources":["../../../src/mapping/nft-approvals-processor/NftApprovalDocumentBuilder.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;AA0BA,IAAA,0BAAA,GAAA,aAAA,YAAA;EAAA,SAAA,0BAAA,GAAA,CA4BA;EA3BgB,0BAAA,CAAA,KAAK,GAAnB,UAAoB,QAAsB,EAAE,KAAY,EAAE,SAAkB,EAAE,OAAe,EAAA;IAC3F,IAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;IAE7B,IAAM,QAAQ,GAAwB;MACpC,EAAE,EAAE,cAAA,CAAA,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC,QAAQ,CAAC;MAE3E,eAAe,EAAE,QAAQ,CAAC,eAAe;MACzC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;MAC3B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;MAE3B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;MAC3B,OAAO,EAAE,QAAQ,CAAC,OAAO;MACzB,WAAW,EAAE,QAAQ,CAAC,WAAW;MACjC,OAAO,EAAE,QAAQ,CAAC,OAAO;MAEzB,iBAAiB,EAAE,QAAQ,CAAC,iBAAiB;MAC7C,SAAS,EAAE,QAAQ,CAAC,SAAS;MAC7B,WAAW,EAAE,QAAQ,CAAC,WAAW;MAEjC,SAAS,EAAE,KAAK,CAAC,IAAI;MACrB,cAAc,EAAE,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC;MAC7C,WAAW,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC;MACvC,SAAS,EAAA,SAAA;MACT,OAAO,EAAE;KACV;IACD,OAAO,QAAQ;EACjB,CAAC;EACH,OAAA,0BAAC;AAAD,CAAC,EAAA;AA5BY,OAAA,CAAA,0BAAA,GAAA,0BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NftApprovalDocumentBuilder = void 0;\nvar LogRelatedId_1 = require(\"../common/LogRelatedId\");\nvar NftApprovalDocumentBuilder = /** @class */ (function () {\n    function NftApprovalDocumentBuilder() {\n    }\n    NftApprovalDocumentBuilder.build = function (approval, block, confirmed, chainId) {\n        var chain = Number(chainId);\n        var document = {\n            id: LogRelatedId_1.LogRelatedId.create(chain, approval.transactionHash, approval.logIndex),\n            transactionHash: approval.transactionHash,\n            contract: approval.contract,\n            logIndex: approval.logIndex,\n            operator: approval.operator,\n            account: approval.account,\n            approvedAll: approval.approvedAll,\n            tokenId: approval.tokenId,\n            tokenContractType: approval.tokenContractType,\n            tokenName: approval.tokenName,\n            tokenSymbol: approval.tokenSymbol,\n            blockHash: block.hash,\n            blockTimestamp: parseInt(block.timestamp, 10),\n            blockNumber: parseInt(block.number, 10),\n            confirmed: confirmed,\n            chainId: chain,\n        };\n        return document;\n    };\n    return NftApprovalDocumentBuilder;\n}());\nexports.NftApprovalDocumentBuilder = NftApprovalDocumentBuilder;\n//# sourceMappingURL=NftApprovalDocumentBuilder.js.map"]},"metadata":{},"sourceType":"script"}