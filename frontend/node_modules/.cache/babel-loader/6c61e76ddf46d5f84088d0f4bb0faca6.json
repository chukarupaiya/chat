{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeVerifySignature = void 0;\nvar api_utils_1 = require(\"@moralisweb3/api-utils\");\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar sha3_1 = require(\"../utils/sha3\");\nvar makeVerifySignature = function (core) {\n  return function (_a) {\n    var body = _a.body,\n      signature = _a.signature;\n    var apiKey = core.config.get(api_utils_1.ApiUtilsConfig.apiKey);\n    if (!apiKey) {\n      throw new common_core_1.MoralisStreamError({\n        code: common_core_1.StreamErrorCode.GENERIC_STREAM_ERROR,\n        message: 'unable to verify signature without an api key'\n      });\n    }\n    var generatedSignature = (0, sha3_1.sha3)(JSON.stringify(body) + apiKey);\n    if (signature !== generatedSignature) {\n      throw new common_core_1.MoralisStreamError({\n        code: common_core_1.StreamErrorCode.INVALID_SIGNATURE,\n        message: 'signature is not valid'\n      });\n    }\n    return true;\n  };\n};\nexports.makeVerifySignature = makeVerifySignature;","map":{"version":3,"sources":["../../src/methods/verifySignature.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,WAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AAOO,IAAM,mBAAmB,GAC9B,UAAC,IAAU,EAAA;EACX,OAAA,UAAC,EAA2C,EAAA;QAAzC,IAAI,GAAA,EAAA,CAAA,IAAA;MAAE,SAAS,GAAA,EAAA,CAAA,SAAA;IAChB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAA,CAAA,cAAc,CAAC,MAAM,CAAC;IACrD,IAAI,CAAC,MAAM,EAAE;MACX,MAAM,IAAI,aAAA,CAAA,kBAAkB,CAAC;QAC3B,IAAI,EAAE,aAAA,CAAA,eAAe,CAAC,oBAAoB;QAC1C,OAAO,EAAE;OACV,CAAC;IACH;IACD,IAAM,kBAAkB,GAAG,CAAA,CAAA,EAAA,MAAA,CAAA,IAAI,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;IAC9D,IAAI,SAAS,KAAK,kBAAkB,EAAE;MACpC,MAAM,IAAI,aAAA,CAAA,kBAAkB,CAAC;QAC3B,IAAI,EAAE,aAAA,CAAA,eAAe,CAAC,iBAAiB;QACvC,OAAO,EAAE;OACV,CAAC;IACH;IACD,OAAO,IAAI;EACb,CAAC;AAhBD,CAgBC;AAlBU,OAAA,CAAA,mBAAmB,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeVerifySignature = void 0;\nvar api_utils_1 = require(\"@moralisweb3/api-utils\");\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar sha3_1 = require(\"../utils/sha3\");\nvar makeVerifySignature = function (core) {\n    return function (_a) {\n        var body = _a.body, signature = _a.signature;\n        var apiKey = core.config.get(api_utils_1.ApiUtilsConfig.apiKey);\n        if (!apiKey) {\n            throw new common_core_1.MoralisStreamError({\n                code: common_core_1.StreamErrorCode.GENERIC_STREAM_ERROR,\n                message: 'unable to verify signature without an api key',\n            });\n        }\n        var generatedSignature = (0, sha3_1.sha3)(JSON.stringify(body) + apiKey);\n        if (signature !== generatedSignature) {\n            throw new common_core_1.MoralisStreamError({\n                code: common_core_1.StreamErrorCode.INVALID_SIGNATURE,\n                message: 'signature is not valid',\n            });\n        }\n        return true;\n    };\n};\nexports.makeVerifySignature = makeVerifySignature;\n//# sourceMappingURL=verifySignature.js.map"]},"metadata":{},"sourceType":"script"}