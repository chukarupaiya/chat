{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EvmChainParser = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar INVALID_VALUES = ['0x', '0x0', '0', 0];\nvar EvmChainParser = /** @class */function () {\n  function EvmChainParser() {}\n  EvmChainParser.parse = function (chain) {\n    if (INVALID_VALUES.includes(chain)) {\n      throw new common_core_1.CoreError({\n        code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n        message: \"Invalid provided chain, value must be a positive number, or a hex-string starting with '0x'\"\n      });\n    }\n    if (typeof chain === 'string') {\n      if (chain.startsWith('0x')) {\n        return chain;\n      }\n      try {\n        var parsed = parseInt(chain, 10);\n        if (Number.isNaN(parsed)) {\n          throw new Error('Cannot parse the provided string value to a valid chain number');\n        }\n        return \"0x\".concat(parsed.toString(16));\n      } catch (error) {\n        throw new common_core_1.CoreError({\n          code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n          message: \"Invalid provided chain, value must be a positive number, or a hex-string starting with '0x'\"\n        });\n      }\n    }\n    if (chain <= 0) {\n      throw new common_core_1.CoreError({\n        code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n        message: \"Invalid provided chain, value must be a positive number, or a hex-string starting with '0x'\"\n      });\n    }\n    return \"0x\".concat(chain.toString(16));\n  };\n  return EvmChainParser;\n}();\nexports.EvmChainParser = EvmChainParser;","map":{"version":3,"sources":["../../../src/dataTypes/EvmChain/EvmChainParser.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AAGA,IAAM,cAAc,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AAE5C,IAAA,cAAA,GAAA,aAAA,YAAA;EAAA,SAAA,cAAA,GAAA,CAoCA;EAnCgB,cAAA,CAAA,KAAK,GAAnB,UAAoB,KAAmB,EAAA;IACrC,IAAI,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;MAClC,MAAM,IAAI,aAAA,CAAA,SAAS,CAAC;QAClB,IAAI,EAAE,aAAA,CAAA,aAAa,CAAC,gBAAgB;QACpC,OAAO,EAAE;OACV,CAAC;IACH;IAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;MAC7B,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QAC1B,OAAO,KAAK;MACb;MAED,IAAI;QACF,IAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC;QAClC,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;UACxB,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC;QAClF;QACD,OAAO,IAAA,CAAA,MAAA,CAAK,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAE;OAClC,CAAC,OAAO,KAAK,EAAE;QACd,MAAM,IAAI,aAAA,CAAA,SAAS,CAAC;UAClB,IAAI,EAAE,aAAA,CAAA,aAAa,CAAC,gBAAgB;UACpC,OAAO,EAAE;SACV,CAAC;MACH;IACF;IAED,IAAI,KAAK,IAAI,CAAC,EAAE;MACd,MAAM,IAAI,aAAA,CAAA,SAAS,CAAC;QAClB,IAAI,EAAE,aAAA,CAAA,aAAa,CAAC,gBAAgB;QACpC,OAAO,EAAE;OACV,CAAC;IACH;IACD,OAAO,IAAA,CAAA,MAAA,CAAK,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAE;EAClC,CAAC;EACH,OAAA,cAAC;AAAD,CAAC,EAAA;AApCY,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EvmChainParser = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar INVALID_VALUES = ['0x', '0x0', '0', 0];\nvar EvmChainParser = /** @class */ (function () {\n    function EvmChainParser() {\n    }\n    EvmChainParser.parse = function (chain) {\n        if (INVALID_VALUES.includes(chain)) {\n            throw new common_core_1.CoreError({\n                code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n                message: \"Invalid provided chain, value must be a positive number, or a hex-string starting with '0x'\",\n            });\n        }\n        if (typeof chain === 'string') {\n            if (chain.startsWith('0x')) {\n                return chain;\n            }\n            try {\n                var parsed = parseInt(chain, 10);\n                if (Number.isNaN(parsed)) {\n                    throw new Error('Cannot parse the provided string value to a valid chain number');\n                }\n                return \"0x\".concat(parsed.toString(16));\n            }\n            catch (error) {\n                throw new common_core_1.CoreError({\n                    code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n                    message: \"Invalid provided chain, value must be a positive number, or a hex-string starting with '0x'\",\n                });\n            }\n        }\n        if (chain <= 0) {\n            throw new common_core_1.CoreError({\n                code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n                message: \"Invalid provided chain, value must be a positive number, or a hex-string starting with '0x'\",\n            });\n        }\n        return \"0x\".concat(chain.toString(16));\n    };\n    return EvmChainParser;\n}());\nexports.EvmChainParser = EvmChainParser;\n//# sourceMappingURL=EvmChainParser.js.map"]},"metadata":{},"sourceType":"script"}