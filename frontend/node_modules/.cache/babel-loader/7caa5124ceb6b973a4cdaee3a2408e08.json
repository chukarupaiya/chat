{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.syncNFTContractOperation = void 0;\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Initiates a sync of a previously non synced Contract. */\nexports.syncNFTContractOperation = {\n  method: 'PUT',\n  name: 'syncNFTContract',\n  id: 'syncNFTContract',\n  groupName: 'nft',\n  urlPathPattern: '/nft/{address}/sync',\n  urlPathParamNames: ['address'],\n  urlSearchParamNames: ['chain'],\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase\n  };\n}\nfunction deserializeResponse() {\n  return {\n    success: true\n  };\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    address: dataTypes_1.EvmAddress.create(request.address, core).checksum\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    address: dataTypes_1.EvmAddress.create(jsonRequest.address, core)\n  };\n}","map":{"version":3,"sources":["../../../src/operations/nft/syncNFTContractOperation.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;AA4BA;AACa,OAAA,CAAA,wBAAwB,GAKjC;EACF,MAAM,EAAE,KAAK;EACb,IAAI,EAAE,iBAAiB;EACvB,EAAE,EAAE,iBAAiB;EACrB,SAAS,EAAE,KAAK;EAChB,cAAc,EAAE,qBAAqB;EACrC,iBAAiB,EAAE,CAAC,SAAS,CAAC;EAC9B,mBAAmB,EAAE,CAAC,OAAO,CAAC;EAE9B,mBAAmB,EAAA,mBAAA;EACnB,gBAAgB,EAAA,gBAAA;EAChB,kBAAkB,EAAA,kBAAA;EAClB,mBAAmB,EAAA;CACpB;AAED;AAEA,SAAS,mBAAmB,CAAC,OAA+B,EAAE,IAAU,EAAA;EACtE,OAAO;IACL,KAAK,EAAE,kBAAA,CAAA,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,MAAM;IAC3D,OAAO,EAAE,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;GACnD;AACH;AAEA,SAAS,mBAAmB,GAAA;EAC1B,OAAO;IACL,OAAO,EAAE;GACV;AACH;AAEA,SAAS,gBAAgB,CAAC,OAA+B,EAAE,IAAU,EAAA;EACnE,OAAO;IACL,KAAK,EAAE,kBAAA,CAAA,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,MAAM;IAC3D,OAAO,EAAE,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;GACnD;AACH;AAEA,SAAS,kBAAkB,CAAC,WAAuC,EAAE,IAAU,EAAA;EAC7E,OAAO;IACL,KAAK,EAAE,WAAA,CAAA,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC;IAC/C,OAAO,EAAE,WAAA,CAAA,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI;GACrD;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.syncNFTContractOperation = void 0;\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Initiates a sync of a previously non synced Contract. */\nexports.syncNFTContractOperation = {\n    method: 'PUT',\n    name: 'syncNFTContract',\n    id: 'syncNFTContract',\n    groupName: 'nft',\n    urlPathPattern: '/nft/{address}/sync',\n    urlPathParamNames: ['address'],\n    urlSearchParamNames: ['chain'],\n    getRequestUrlParams: getRequestUrlParams,\n    serializeRequest: serializeRequest,\n    deserializeRequest: deserializeRequest,\n    deserializeResponse: deserializeResponse,\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n    return {\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n        address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n    };\n}\nfunction deserializeResponse() {\n    return {\n        success: true,\n    };\n}\nfunction serializeRequest(request, core) {\n    return {\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n        address: dataTypes_1.EvmAddress.create(request.address, core).checksum,\n    };\n}\nfunction deserializeRequest(jsonRequest, core) {\n    return {\n        chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n        address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n    };\n}\n//# sourceMappingURL=syncNFTContractOperation.js.map"]},"metadata":{},"sourceType":"script"}