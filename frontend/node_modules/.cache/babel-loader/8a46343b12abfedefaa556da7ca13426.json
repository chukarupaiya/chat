{"ast":null,"code":"\"use strict\";\n\n// CAUTION: This file is automatically generated. Do not edit it manually!\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClientEvmApi = void 0;\nvar common_evm_utils_1 = require(\"@moralisweb3/common-evm-utils\");\nvar api_utils_1 = require(\"@moralisweb3/api-utils\");\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar ClientEvmApi = /** @class */function (_super) {\n  __extends(ClientEvmApi, _super);\n  function ClientEvmApi() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.utils = {\n      endpointWeights: function () {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.endpointWeightsOperation, _this.baseUrl, _this.core).fetch({});\n      },\n      runContractFunction: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.runContractFunctionOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      web3ApiVersion: function () {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.web3ApiVersionOperation, _this.baseUrl, _this.core).fetch({});\n      }\n    };\n    _this.block = {\n      getBlock: function (request) {\n        return new api_utils_1.NullableOperationResolver(common_evm_utils_1.getBlockOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getDateToBlock: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.getDateToBlockOperation, _this.baseUrl, _this.core).fetch(request);\n      }\n    };\n    _this.events = {\n      getContractEvents: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getContractEventsOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getContractLogs: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getContractLogsOperation, _this.baseUrl, _this.core).fetch(request);\n      }\n    };\n    _this.nft = {\n      getContractNFTs: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getContractNFTsOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getMultipleNFTs: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.getMultipleNFTsOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getNFTContractMetadata: function (request) {\n        return new api_utils_1.NullableOperationResolver(common_evm_utils_1.getNFTContractMetadataOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getNFTContractTransfers: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTContractTransfersOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getNFTLowestPrice: function (request) {\n        return new api_utils_1.NullableOperationResolver(common_evm_utils_1.getNFTLowestPriceOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getNFTMetadata: function (request) {\n        return new api_utils_1.NullableOperationResolver(common_evm_utils_1.getNFTMetadataOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getNFTOwners: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTOwnersOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getNFTTokenIdOwners: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTTokenIdOwnersOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getNFTTrades: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTTradesOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getNFTTransfersByBlock: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTTransfersByBlockOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getNFTTransfersFromToBlock: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTTransfersFromToBlockOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getNFTTransfers: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTTransfersOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getWalletNFTCollections: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getWalletNFTCollectionsOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getWalletNFTs: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getWalletNFTsOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getWalletNFTTransfers: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getWalletNFTTransfersOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      reSyncMetadata: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.reSyncMetadataOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      searchNFTs: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.searchNFTsOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      syncNFTContract: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.syncNFTContractOperation, _this.baseUrl, _this.core).fetch(request);\n      }\n    };\n    _this.balance = {\n      getNativeBalance: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.getNativeBalanceOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getNativeBalancesForAddresses: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.getNativeBalancesForAddressesOperation, _this.baseUrl, _this.core).fetch(request);\n      }\n    };\n    _this.defi = {\n      getPairAddress: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.getPairAddressOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getPairReserves: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.getPairReservesOperation, _this.baseUrl, _this.core).fetch(request);\n      }\n    };\n    _this.token = {\n      getTokenAllowance: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.getTokenAllowanceOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getTokenMetadataBySymbol: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.getTokenMetadataBySymbolOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getTokenMetadata: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.getTokenMetadataOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getTokenPrice: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.getTokenPriceOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getTokenTransfers: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getTokenTransfersOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getWalletTokenBalances: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.getWalletTokenBalancesOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getWalletTokenTransfers: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getWalletTokenTransfersOperation, _this.baseUrl, _this.core).fetch(request);\n      }\n    };\n    _this.transaction = {\n      getTransaction: function (request) {\n        return new api_utils_1.NullableOperationResolver(common_evm_utils_1.getTransactionOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getWalletTransactions: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getWalletTransactionsOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      getWalletTransactionsVerbose: function (request) {\n        return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getWalletTransactionsVerboseOperation, _this.baseUrl, _this.core).fetch(request);\n      }\n    };\n    _this.resolve = {\n      resolveAddress: function (request) {\n        return new api_utils_1.NullableOperationResolver(common_evm_utils_1.resolveAddressOperation, _this.baseUrl, _this.core).fetch(request);\n      },\n      resolveDomain: function (request) {\n        return new api_utils_1.NullableOperationResolver(common_evm_utils_1.resolveDomainOperation, _this.baseUrl, _this.core).fetch(request);\n      }\n    };\n    _this.ipfs = {\n      uploadFolder: function (request) {\n        return new api_utils_1.OperationResolver(common_evm_utils_1.uploadFolderOperation, _this.baseUrl, _this.core).fetch(request);\n      }\n    };\n    return _this;\n  }\n  return ClientEvmApi;\n}(common_core_1.ApiModule);\nexports.ClientEvmApi = ClientEvmApi;","map":{"version":3,"sources":["../../src/generated/ClientEvmApi.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// CAUTION: This file is automatically generated. Do not edit it manually!\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientEvmApi = void 0;\nvar common_evm_utils_1 = require(\"@moralisweb3/common-evm-utils\");\nvar api_utils_1 = require(\"@moralisweb3/api-utils\");\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar ClientEvmApi = /** @class */ (function (_super) {\n    __extends(ClientEvmApi, _super);\n    function ClientEvmApi() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.utils = {\n            endpointWeights: function () {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.endpointWeightsOperation, _this.baseUrl, _this.core).fetch({});\n            },\n            runContractFunction: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.runContractFunctionOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            web3ApiVersion: function () {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.web3ApiVersionOperation, _this.baseUrl, _this.core).fetch({});\n            },\n        };\n        _this.block = {\n            getBlock: function (request) {\n                return new api_utils_1.NullableOperationResolver(common_evm_utils_1.getBlockOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getDateToBlock: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.getDateToBlockOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n        };\n        _this.events = {\n            getContractEvents: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getContractEventsOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getContractLogs: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getContractLogsOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n        };\n        _this.nft = {\n            getContractNFTs: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getContractNFTsOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getMultipleNFTs: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.getMultipleNFTsOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getNFTContractMetadata: function (request) {\n                return new api_utils_1.NullableOperationResolver(common_evm_utils_1.getNFTContractMetadataOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getNFTContractTransfers: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTContractTransfersOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getNFTLowestPrice: function (request) {\n                return new api_utils_1.NullableOperationResolver(common_evm_utils_1.getNFTLowestPriceOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getNFTMetadata: function (request) {\n                return new api_utils_1.NullableOperationResolver(common_evm_utils_1.getNFTMetadataOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getNFTOwners: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTOwnersOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getNFTTokenIdOwners: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTTokenIdOwnersOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getNFTTrades: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTTradesOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getNFTTransfersByBlock: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTTransfersByBlockOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getNFTTransfersFromToBlock: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTTransfersFromToBlockOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getNFTTransfers: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getNFTTransfersOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getWalletNFTCollections: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getWalletNFTCollectionsOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getWalletNFTs: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getWalletNFTsOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getWalletNFTTransfers: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getWalletNFTTransfersOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            reSyncMetadata: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.reSyncMetadataOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            searchNFTs: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.searchNFTsOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            syncNFTContract: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.syncNFTContractOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n        };\n        _this.balance = {\n            getNativeBalance: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.getNativeBalanceOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getNativeBalancesForAddresses: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.getNativeBalancesForAddressesOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n        };\n        _this.defi = {\n            getPairAddress: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.getPairAddressOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getPairReserves: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.getPairReservesOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n        };\n        _this.token = {\n            getTokenAllowance: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.getTokenAllowanceOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getTokenMetadataBySymbol: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.getTokenMetadataBySymbolOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getTokenMetadata: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.getTokenMetadataOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getTokenPrice: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.getTokenPriceOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getTokenTransfers: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getTokenTransfersOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getWalletTokenBalances: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.getWalletTokenBalancesOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getWalletTokenTransfers: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getWalletTokenTransfersOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n        };\n        _this.transaction = {\n            getTransaction: function (request) {\n                return new api_utils_1.NullableOperationResolver(common_evm_utils_1.getTransactionOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getWalletTransactions: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getWalletTransactionsOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            getWalletTransactionsVerbose: function (request) {\n                return new api_utils_1.PaginatedOperationResolver(common_evm_utils_1.getWalletTransactionsVerboseOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n        };\n        _this.resolve = {\n            resolveAddress: function (request) {\n                return new api_utils_1.NullableOperationResolver(common_evm_utils_1.resolveAddressOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n            resolveDomain: function (request) {\n                return new api_utils_1.NullableOperationResolver(common_evm_utils_1.resolveDomainOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n        };\n        _this.ipfs = {\n            uploadFolder: function (request) {\n                return new api_utils_1.OperationResolver(common_evm_utils_1.uploadFolderOperation, _this.baseUrl, _this.core).fetch(request);\n            },\n        };\n        return _this;\n    }\n    return ClientEvmApi;\n}(common_core_1.ApiModule));\nexports.ClientEvmApi = ClientEvmApi;\n//# sourceMappingURL=ClientEvmApi.js.map"]},"metadata":{},"sourceType":"script"}