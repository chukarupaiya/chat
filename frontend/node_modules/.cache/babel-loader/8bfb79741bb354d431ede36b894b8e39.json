{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWalletTokenBalancesOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get token balances for a specific wallet address. */\nexports.getWalletTokenBalancesOperation = {\n  method: 'GET',\n  name: 'getWalletTokenBalances',\n  id: 'getWalletTokenBalances',\n  groupName: 'token',\n  urlPathPattern: '/{address}/erc20',\n  urlPathParamNames: ['address'],\n  urlSearchParamNames: ['chain', 'toBlock', 'tokenAddresses'],\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    to_block: (0, common_core_1.maybe)(request.toBlock, String),\n    token_addresses: (0, common_core_1.maybe)(request.tokenAddresses, function (addresses) {\n      return addresses.map(function (address) {\n        return dataTypes_1.EvmAddress.create(address, core).lowercase;\n      });\n    }),\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase\n  };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n  return (jsonResponse !== null && jsonResponse !== void 0 ? jsonResponse : []).map(function (token) {\n    return dataTypes_1.Erc20Value.create(token.balance, {\n      decimals: token.decimals,\n      token: {\n        decimals: token.decimals,\n        name: token.name,\n        symbol: token.symbol,\n        contractAddress: token.token_address,\n        logo: token.logo,\n        thumbnail: token.thumbnail,\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core)\n      }\n    }, core);\n  });\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    tokenAddresses: (0, common_core_1.maybe)(request.tokenAddresses, function (addresses) {\n      return addresses.map(function (address) {\n        return dataTypes_1.EvmAddress.create(address, core).checksum;\n      });\n    }),\n    address: dataTypes_1.EvmAddress.create(request.address).checksum,\n    toBlock: request.toBlock\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    tokenAddresses: (0, common_core_1.maybe)(jsonRequest.tokenAddresses, function (addresses) {\n      return addresses.map(function (address) {\n        return dataTypes_1.EvmAddress.create(address, core);\n      });\n    }),\n    address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n    toBlock: jsonRequest.toBlock\n  };\n}","map":{"version":3,"sources":["../../../src/operations/token/getWalletTokenBalancesOperation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWalletTokenBalancesOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get token balances for a specific wallet address. */\nexports.getWalletTokenBalancesOperation = {\n    method: 'GET',\n    name: 'getWalletTokenBalances',\n    id: 'getWalletTokenBalances',\n    groupName: 'token',\n    urlPathPattern: '/{address}/erc20',\n    urlPathParamNames: ['address'],\n    urlSearchParamNames: ['chain', 'toBlock', 'tokenAddresses'],\n    getRequestUrlParams: getRequestUrlParams,\n    serializeRequest: serializeRequest,\n    deserializeRequest: deserializeRequest,\n    deserializeResponse: deserializeResponse,\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n    return {\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n        to_block: (0, common_core_1.maybe)(request.toBlock, String),\n        token_addresses: (0, common_core_1.maybe)(request.tokenAddresses, function (addresses) {\n            return addresses.map(function (address) { return dataTypes_1.EvmAddress.create(address, core).lowercase; });\n        }),\n        address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n    };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n    return (jsonResponse !== null && jsonResponse !== void 0 ? jsonResponse : []).map(function (token) {\n        return dataTypes_1.Erc20Value.create(token.balance, {\n            decimals: token.decimals,\n            token: {\n                decimals: token.decimals,\n                name: token.name,\n                symbol: token.symbol,\n                contractAddress: token.token_address,\n                logo: token.logo,\n                thumbnail: token.thumbnail,\n                chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core),\n            },\n        }, core);\n    });\n}\nfunction serializeRequest(request, core) {\n    return {\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n        tokenAddresses: (0, common_core_1.maybe)(request.tokenAddresses, function (addresses) {\n            return addresses.map(function (address) { return dataTypes_1.EvmAddress.create(address, core).checksum; });\n        }),\n        address: dataTypes_1.EvmAddress.create(request.address).checksum,\n        toBlock: request.toBlock,\n    };\n}\nfunction deserializeRequest(jsonRequest, core) {\n    return {\n        chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n        tokenAddresses: (0, common_core_1.maybe)(jsonRequest.tokenAddresses, function (addresses) {\n            return addresses.map(function (address) { return dataTypes_1.EvmAddress.create(address, core); });\n        }),\n        address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n        toBlock: jsonRequest.toBlock,\n    };\n}\n//# sourceMappingURL=getWalletTokenBalancesOperation.js.map"]},"metadata":{},"sourceType":"script"}