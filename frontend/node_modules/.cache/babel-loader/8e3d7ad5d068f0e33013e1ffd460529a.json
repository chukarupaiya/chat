{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Erc20Token = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar EvmAddress_1 = require(\"../EvmAddress\");\nvar EvmChain_1 = require(\"../EvmChain\");\n/**\n * The Erc20Token class is a MoralisData that references to a Erc20 Token\n * It holds data about the data and metadata of an Erc20 token\n *\n * @category DataType\n */\nvar Erc20Token = /** @class */function () {\n  function Erc20Token(value, core) {\n    this._value = Erc20Token.parse(value, core);\n  }\n  /**\n   *  Create a new instance of Erc20Token from any valid Erc20Token input\n   *\n   * @param value - the Erc20Tokenish type\n   * @param core - The MoralisCore instance\n   * @example\n   * ```ts\n   * const token = Erc20Token.create(value);\n   * ```\n   */\n  Erc20Token.create = function (value, core) {\n    if (value instanceof Erc20Token) {\n      return value;\n    }\n    var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n    return new Erc20Token(value, finalCore);\n  };\n  /**\n   * Compares two Erc20Token instances. This checks if the chain and contractAddress of both tokens are equal.\n   *\n   * @param valueA - the first Erc20Token to compare\n   * @param valueB - the second Erc20Token to compare\n   * @returns true if the two Erc20Tokens are equal\n   * @example\n   * ```ts\n   * Erc20Token.equals(valueA, valueB);\n   * ```\n   */\n  Erc20Token.equals = function (valueA, valueB) {\n    var erc20A = Erc20Token.create(valueA);\n    var erc20B = Erc20Token.create(valueB);\n    if (!erc20A._value.chain.equals(erc20B._value.chain)) {\n      return false;\n    }\n    if (!erc20A._value.contractAddress.equals(erc20B._value.contractAddress)) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Compares Erc20Token instance to current instance\n   *\n   * @param value - the Erc20Tokenish to compare\n   * @returns true if the Erc20Token is equals given token\n   * @example\n   * ```ts\n   * token.equals(value);\n   * ```\n   */\n  Erc20Token.prototype.equals = function (value) {\n    return Erc20Token.equals(this, value);\n  };\n  /**\n   * Returns the token as JSON\n   *\n   * @returns the Erc20Token as a JSON object\n   * @example\n   * ```ts\n   * token.toJSON();\n   * ```\n   */\n  Erc20Token.prototype.toJSON = function () {\n    var value = this._value;\n    return __assign(__assign({}, value), {\n      contractAddress: value.contractAddress.format(),\n      chain: value.chain.format()\n    });\n  };\n  /**\n   * Returns the token as JSON\n   *\n   * @returns the Erc20Token as a JSON object\n   * @example\n   * ```ts\n   * token.format();\n   * ```\n   */\n  Erc20Token.prototype.format = function () {\n    return this.toJSON();\n  };\n  Object.defineProperty(Erc20Token.prototype, \"result\", {\n    /**\n     * Returns the processed Erc20Token.\n     *\n     * @returns the Erc20Token value\n     * @example\n     * ```ts\n     * token.result;\n     *  ```\n     */\n    get: function () {\n      return this._value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Erc20Token.prototype, \"decimals\", {\n    /**\n     * @returns the decimals of the token.\n     *\n     * @example\n     * ```ts\n     * token.decimals;\n     * ```\n     */\n    get: function () {\n      return this._value.decimals;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Erc20Token.prototype, \"name\", {\n    /**\n     * @returns The name of the token.\n     *\n     * @example\n     * ```ts\n     * token.name;\n     * ```\n     */\n    get: function () {\n      return this._value.name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Erc20Token.prototype, \"symbol\", {\n    /**\n     * @returns The symbol of the token.\n     *\n     * @example\n     * ```ts\n     * token.symbol;\n     * ```\n     */\n    get: function () {\n      return this._value.symbol;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Erc20Token.prototype, \"contractAddress\", {\n    /**\n     * @returns The contract address of the token.\n     *\n     * @example\n     * ```ts\n     * token.contractAddress;\n     * ```\n     */\n    get: function () {\n      return this._value.contractAddress;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Erc20Token.prototype, \"chain\", {\n    /**\n     * @returns The chain of the token.\n     *\n     * @example\n     * ```ts\n     * token.chain;\n     * ```\n     */\n    get: function () {\n      return this._value.chain;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Erc20Token.prototype, \"logo\", {\n    /**\n     * @returns The logo of the token.\n     *\n     * @example\n     * ```ts\n     * token.logo;\n     * ```\n     */\n    get: function () {\n      return this._value.logo;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Erc20Token.prototype, \"logoHash\", {\n    /**\n     * @returns The logo hash of the token.\n     *\n     * @example\n     * ```ts\n     * token.logoHash;\n     * ```\n     */\n    get: function () {\n      return this._value.logoHash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Erc20Token.prototype, \"thumbnail\", {\n    /**\n     * @returns The thumbnail of the token.\n     *\n     * @example\n     * ```ts\n     * token.thumbnail;\n     * ```\n     */\n    get: function () {\n      return this._value.thumbnail;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Erc20Token.parse = function (value, core) {\n    return {\n      decimals: +value.decimals,\n      name: value.name,\n      symbol: value.symbol,\n      contractAddress: EvmAddress_1.EvmAddress.create(value.contractAddress, core),\n      logo: (0, common_core_1.maybe)(value.logo),\n      logoHash: (0, common_core_1.maybe)(value.logoHash),\n      thumbnail: (0, common_core_1.maybe)(value.thumbnail),\n      chain: EvmChain_1.EvmChain.create(value.chain, core)\n    };\n  };\n  return Erc20Token;\n}();\nexports.Erc20Token = Erc20Token;","map":{"version":3,"sources":["../../../src/dataTypes/Erc20/Erc20.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Erc20Token = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar EvmAddress_1 = require(\"../EvmAddress\");\nvar EvmChain_1 = require(\"../EvmChain\");\n/**\n * The Erc20Token class is a MoralisData that references to a Erc20 Token\n * It holds data about the data and metadata of an Erc20 token\n *\n * @category DataType\n */\nvar Erc20Token = /** @class */ (function () {\n    function Erc20Token(value, core) {\n        this._value = Erc20Token.parse(value, core);\n    }\n    /**\n     *  Create a new instance of Erc20Token from any valid Erc20Token input\n     *\n     * @param value - the Erc20Tokenish type\n     * @param core - The MoralisCore instance\n     * @example\n     * ```ts\n     * const token = Erc20Token.create(value);\n     * ```\n     */\n    Erc20Token.create = function (value, core) {\n        if (value instanceof Erc20Token) {\n            return value;\n        }\n        var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n        return new Erc20Token(value, finalCore);\n    };\n    /**\n     * Compares two Erc20Token instances. This checks if the chain and contractAddress of both tokens are equal.\n     *\n     * @param valueA - the first Erc20Token to compare\n     * @param valueB - the second Erc20Token to compare\n     * @returns true if the two Erc20Tokens are equal\n     * @example\n     * ```ts\n     * Erc20Token.equals(valueA, valueB);\n     * ```\n     */\n    Erc20Token.equals = function (valueA, valueB) {\n        var erc20A = Erc20Token.create(valueA);\n        var erc20B = Erc20Token.create(valueB);\n        if (!erc20A._value.chain.equals(erc20B._value.chain)) {\n            return false;\n        }\n        if (!erc20A._value.contractAddress.equals(erc20B._value.contractAddress)) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Compares Erc20Token instance to current instance\n     *\n     * @param value - the Erc20Tokenish to compare\n     * @returns true if the Erc20Token is equals given token\n     * @example\n     * ```ts\n     * token.equals(value);\n     * ```\n     */\n    Erc20Token.prototype.equals = function (value) {\n        return Erc20Token.equals(this, value);\n    };\n    /**\n     * Returns the token as JSON\n     *\n     * @returns the Erc20Token as a JSON object\n     * @example\n     * ```ts\n     * token.toJSON();\n     * ```\n     */\n    Erc20Token.prototype.toJSON = function () {\n        var value = this._value;\n        return __assign(__assign({}, value), { contractAddress: value.contractAddress.format(), chain: value.chain.format() });\n    };\n    /**\n     * Returns the token as JSON\n     *\n     * @returns the Erc20Token as a JSON object\n     * @example\n     * ```ts\n     * token.format();\n     * ```\n     */\n    Erc20Token.prototype.format = function () {\n        return this.toJSON();\n    };\n    Object.defineProperty(Erc20Token.prototype, \"result\", {\n        /**\n         * Returns the processed Erc20Token.\n         *\n         * @returns the Erc20Token value\n         * @example\n         * ```ts\n         * token.result;\n         *  ```\n         */\n        get: function () {\n            return this._value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Erc20Token.prototype, \"decimals\", {\n        /**\n         * @returns the decimals of the token.\n         *\n         * @example\n         * ```ts\n         * token.decimals;\n         * ```\n         */\n        get: function () {\n            return this._value.decimals;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Erc20Token.prototype, \"name\", {\n        /**\n         * @returns The name of the token.\n         *\n         * @example\n         * ```ts\n         * token.name;\n         * ```\n         */\n        get: function () {\n            return this._value.name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Erc20Token.prototype, \"symbol\", {\n        /**\n         * @returns The symbol of the token.\n         *\n         * @example\n         * ```ts\n         * token.symbol;\n         * ```\n         */\n        get: function () {\n            return this._value.symbol;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Erc20Token.prototype, \"contractAddress\", {\n        /**\n         * @returns The contract address of the token.\n         *\n         * @example\n         * ```ts\n         * token.contractAddress;\n         * ```\n         */\n        get: function () {\n            return this._value.contractAddress;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Erc20Token.prototype, \"chain\", {\n        /**\n         * @returns The chain of the token.\n         *\n         * @example\n         * ```ts\n         * token.chain;\n         * ```\n         */\n        get: function () {\n            return this._value.chain;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Erc20Token.prototype, \"logo\", {\n        /**\n         * @returns The logo of the token.\n         *\n         * @example\n         * ```ts\n         * token.logo;\n         * ```\n         */\n        get: function () {\n            return this._value.logo;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Erc20Token.prototype, \"logoHash\", {\n        /**\n         * @returns The logo hash of the token.\n         *\n         * @example\n         * ```ts\n         * token.logoHash;\n         * ```\n         */\n        get: function () {\n            return this._value.logoHash;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Erc20Token.prototype, \"thumbnail\", {\n        /**\n         * @returns The thumbnail of the token.\n         *\n         * @example\n         * ```ts\n         * token.thumbnail;\n         * ```\n         */\n        get: function () {\n            return this._value.thumbnail;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Erc20Token.parse = function (value, core) { return ({\n        decimals: +value.decimals,\n        name: value.name,\n        symbol: value.symbol,\n        contractAddress: EvmAddress_1.EvmAddress.create(value.contractAddress, core),\n        logo: (0, common_core_1.maybe)(value.logo),\n        logoHash: (0, common_core_1.maybe)(value.logoHash),\n        thumbnail: (0, common_core_1.maybe)(value.thumbnail),\n        chain: EvmChain_1.EvmChain.create(value.chain, core),\n    }); };\n    return Erc20Token;\n}());\nexports.Erc20Token = Erc20Token;\n//# sourceMappingURL=Erc20.js.map"]},"metadata":{},"sourceType":"script"}