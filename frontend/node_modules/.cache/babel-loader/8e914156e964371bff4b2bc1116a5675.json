{"ast":null,"code":"/**\n * Detect if the wallet injecting the ethereum object is Flask.\n *\n * @returns True if the MetaMask version is Flask, false otherwise.\n * \n */\n\nexport const isFlask = async () => {\n  const provider = window.ethereum;\n  try {\n    const clientVersion = await (provider === null || provider === void 0 ? void 0 : provider.request({\n      method: 'web3_clientVersion'\n    }));\n    const isFlaskDetected = clientVersion === null || clientVersion === void 0 ? void 0 : clientVersion.includes('flask');\n    return Boolean(provider && isFlaskDetected);\n  } catch {\n    return false;\n  }\n};","map":{"version":3,"names":["isFlask","provider","window","ethereum","clientVersion","request","method","isFlaskDetected","includes","Boolean"],"sources":["/Users/karupaiyachu/Desktop/project/chat-app copy/frontend/src/Metamask-snaps-main 2/packages/site/src/utils/metamask.ts"],"sourcesContent":["/**\n * Detect if the wallet injecting the ethereum object is Flask.\n *\n * @returns True if the MetaMask version is Flask, false otherwise.\n * \n */\n\nexport const isFlask = async () => {\n  const provider = window.ethereum;\n\n\n  try {\n    const clientVersion = await provider?.request({\n      method: 'web3_clientVersion',\n    });\n\n    const isFlaskDetected = (clientVersion as string[])?.includes('flask');\n\n    return Boolean(provider && isFlaskDetected);\n  } catch {\n    return false;\n  }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,OAAO,GAAG,YAAY;EACjC,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAQ;EAGhC,IAAI;IACF,MAAMC,aAAa,GAAG,OAAMH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,OAAO,CAAC;MAC5CC,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,MAAMC,eAAe,GAAIH,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAeI,QAAQ,CAAC,OAAO,CAAC;IAEtE,OAAOC,OAAO,CAACR,QAAQ,IAAIM,eAAe,CAAC;EAC7C,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module"}