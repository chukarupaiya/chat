{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getContractLogsOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get the logs for a contract. */\nexports.getContractLogsOperation = {\n  method: 'GET',\n  name: 'getContractLogs',\n  id: 'getContractLogs',\n  groupName: 'events',\n  urlPathPattern: '/{address}/logs',\n  urlPathParamNames: ['address'],\n  urlSearchParamNames: ['chain', 'blockNumber', 'fromBlock', 'toBlock', 'fromDate', 'toDate', 'topic0', 'topic1', 'topic2', 'topic3', 'limit', 'cursor', 'disableTotal'],\n  firstPageIndex: 0,\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    block_number: request.blockNumber,\n    from_block: request.fromBlock,\n    to_block: request.toBlock,\n    from_date: request.fromDate ? new Date(request.fromDate).toISOString() : undefined,\n    to_date: request.toDate ? new Date(request.toDate).toISOString() : undefined,\n    topic0: request.topic0,\n    topic1: request.topic1,\n    topic2: request.topic2,\n    topic3: request.topic3,\n    limit: (0, common_core_1.maybe)(request.limit, String),\n    cursor: request.cursor,\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n    disable_total: request.disableTotal\n  };\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    blockNumber: request.blockNumber,\n    fromBlock: request.fromBlock,\n    toBlock: request.toBlock,\n    fromDate: request.fromDate ? new Date(request.fromDate).toISOString() : undefined,\n    toDate: request.toDate ? new Date(request.toDate).toISOString() : undefined,\n    topic0: request.topic0,\n    topic1: request.topic1,\n    topic2: request.topic2,\n    topic3: request.topic3,\n    limit: request.limit,\n    cursor: request.cursor,\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n    disableTotal: request.disableTotal\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    blockNumber: jsonRequest.blockNumber,\n    fromBlock: jsonRequest.fromBlock,\n    toBlock: jsonRequest.toBlock,\n    fromDate: jsonRequest.fromDate ? new Date(jsonRequest.fromDate) : undefined,\n    toDate: jsonRequest.toDate ? new Date(jsonRequest.toDate) : undefined,\n    topic0: jsonRequest.topic0,\n    topic1: jsonRequest.topic1,\n    topic2: jsonRequest.topic2,\n    topic3: jsonRequest.topic3,\n    limit: jsonRequest.limit,\n    cursor: jsonRequest.cursor,\n    address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n    disableTotal: jsonRequest.disableTotal\n  };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n  var _a, _b;\n  return (_b = (_a = jsonResponse.result) !== null && _a !== void 0 ? _a : []) === null || _b === void 0 ? void 0 : _b.map(function (log) {\n    return dataTypes_1.EvmTransactionLog.create(__assign(__assign({}, (0, common_core_1.toCamelCase)(log)), {\n      topics: [log.topic0, log.topic1, log.topic2, log.topic3],\n      blockNumber: Number(log.block_number),\n      chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core)\n    }), core);\n  });\n}","map":{"version":3,"sources":["../../../src/operations/events/getContractLogsOperation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContractLogsOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get the logs for a contract. */\nexports.getContractLogsOperation = {\n    method: 'GET',\n    name: 'getContractLogs',\n    id: 'getContractLogs',\n    groupName: 'events',\n    urlPathPattern: '/{address}/logs',\n    urlPathParamNames: ['address'],\n    urlSearchParamNames: [\n        'chain',\n        'blockNumber',\n        'fromBlock',\n        'toBlock',\n        'fromDate',\n        'toDate',\n        'topic0',\n        'topic1',\n        'topic2',\n        'topic3',\n        'limit',\n        'cursor',\n        'disableTotal',\n    ],\n    firstPageIndex: 0,\n    getRequestUrlParams: getRequestUrlParams,\n    serializeRequest: serializeRequest,\n    deserializeRequest: deserializeRequest,\n    deserializeResponse: deserializeResponse,\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n    return {\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n        block_number: request.blockNumber,\n        from_block: request.fromBlock,\n        to_block: request.toBlock,\n        from_date: request.fromDate ? new Date(request.fromDate).toISOString() : undefined,\n        to_date: request.toDate ? new Date(request.toDate).toISOString() : undefined,\n        topic0: request.topic0,\n        topic1: request.topic1,\n        topic2: request.topic2,\n        topic3: request.topic3,\n        limit: (0, common_core_1.maybe)(request.limit, String),\n        cursor: request.cursor,\n        address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n        disable_total: request.disableTotal,\n    };\n}\nfunction serializeRequest(request, core) {\n    return {\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n        blockNumber: request.blockNumber,\n        fromBlock: request.fromBlock,\n        toBlock: request.toBlock,\n        fromDate: request.fromDate ? new Date(request.fromDate).toISOString() : undefined,\n        toDate: request.toDate ? new Date(request.toDate).toISOString() : undefined,\n        topic0: request.topic0,\n        topic1: request.topic1,\n        topic2: request.topic2,\n        topic3: request.topic3,\n        limit: request.limit,\n        cursor: request.cursor,\n        address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n        disableTotal: request.disableTotal,\n    };\n}\nfunction deserializeRequest(jsonRequest, core) {\n    return {\n        chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n        blockNumber: jsonRequest.blockNumber,\n        fromBlock: jsonRequest.fromBlock,\n        toBlock: jsonRequest.toBlock,\n        fromDate: jsonRequest.fromDate ? new Date(jsonRequest.fromDate) : undefined,\n        toDate: jsonRequest.toDate ? new Date(jsonRequest.toDate) : undefined,\n        topic0: jsonRequest.topic0,\n        topic1: jsonRequest.topic1,\n        topic2: jsonRequest.topic2,\n        topic3: jsonRequest.topic3,\n        limit: jsonRequest.limit,\n        cursor: jsonRequest.cursor,\n        address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n        disableTotal: jsonRequest.disableTotal,\n    };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n    var _a, _b;\n    return (_b = ((_a = jsonResponse.result) !== null && _a !== void 0 ? _a : [])) === null || _b === void 0 ? void 0 : _b.map(function (log) {\n        return dataTypes_1.EvmTransactionLog.create(__assign(__assign({}, (0, common_core_1.toCamelCase)(log)), { topics: [log.topic0, log.topic1, log.topic2, log.topic3], blockNumber: Number(log.block_number), chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core) }), core);\n    });\n}\n//# sourceMappingURL=getContractLogsOperation.js.map"]},"metadata":{},"sourceType":"script"}