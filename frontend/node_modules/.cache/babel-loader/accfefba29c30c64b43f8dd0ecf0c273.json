{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.operations = void 0;\nvar balance_1 = require(\"./balance\");\nvar block_1 = require(\"./block\");\nvar defi_1 = require(\"./defi\");\nvar events_1 = require(\"./events\");\nvar ipfs_1 = require(\"./ipfs\");\nvar nft_1 = require(\"./nft\");\nvar resolve_1 = require(\"./resolve\");\nvar token_1 = require(\"./token\");\nvar getWalletTokenTransfersOperation_1 = require(\"./token/getWalletTokenTransfersOperation\");\nvar transaction_1 = require(\"./transaction\");\nvar utils_1 = require(\"./utils\");\nvar runContractFunctionOperation_1 = require(\"./utils/runContractFunctionOperation\");\nexports.operations = [utils_1.endpointWeightsOperation, block_1.getBlockOperation, events_1.getContractEventsOperation, events_1.getContractLogsOperation, nft_1.getContractNFTsOperation, block_1.getDateToBlockOperation, nft_1.getMultipleNFTsOperation, balance_1.getNativeBalanceOperation, balance_1.getNativeBalancesForAddressesOperation, nft_1.getNFTContractMetadataOperation, nft_1.getNFTContractTransfersOperation, nft_1.getNFTLowestPriceOperation, nft_1.getNFTMetadataOperation, nft_1.getNFTOwnersOperation, nft_1.getNFTTokenIdOwnersOperation, nft_1.getNFTTradesOperation, nft_1.getNFTTransfersByBlockOperation, nft_1.getNFTTransfersFromToBlockOperation, nft_1.getNFTTransfersOperation, defi_1.getPairAddressOperation, defi_1.getPairReservesOperation, token_1.getTokenAllowanceOperation, token_1.getTokenMetadataBySymbolOperation, token_1.getTokenMetadataOperation, token_1.getTokenPriceOperation, token_1.getTokenTransfersOperation, transaction_1.getTransactionOperation, nft_1.getWalletNFTCollectionsOperation, nft_1.getWalletNFTsOperation, nft_1.getWalletNFTTransfersOperation, token_1.getWalletTokenBalancesOperation, getWalletTokenTransfersOperation_1.getWalletTokenTransfersOperation, transaction_1.getWalletTransactionsOperation, transaction_1.getWalletTransactionsVerboseOperation, resolve_1.resolveAddressOperation, resolve_1.resolveDomainOperation, nft_1.reSyncMetadataOperation, runContractFunctionOperation_1.runContractFunctionOperation, nft_1.searchNFTsOperation, nft_1.syncNFTContractOperation, ipfs_1.uploadFolderOperation, utils_1.web3ApiVersionOperation];","map":{"version":3,"sources":["../../src/operations/operations.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AAoBA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAQA,IAAA,kCAAA,GAAA,OAAA,CAAA,0CAAA,CAAA;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AAKA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AACA,IAAA,8BAAA,GAAA,OAAA,CAAA,sCAAA,CAAA;AAEa,OAAA,CAAA,UAAU,GAAG,CACxB,OAAA,CAAA,wBAAwB,EACxB,OAAA,CAAA,iBAAiB,EACjB,QAAA,CAAA,0BAA0B,EAC1B,QAAA,CAAA,wBAAwB,EACxB,KAAA,CAAA,wBAAwB,EACxB,OAAA,CAAA,uBAAuB,EACvB,KAAA,CAAA,wBAAwB,EACxB,SAAA,CAAA,yBAAyB,EACzB,SAAA,CAAA,sCAAsC,EACtC,KAAA,CAAA,+BAA+B,EAC/B,KAAA,CAAA,gCAAgC,EAChC,KAAA,CAAA,0BAA0B,EAC1B,KAAA,CAAA,uBAAuB,EACvB,KAAA,CAAA,qBAAqB,EACrB,KAAA,CAAA,4BAA4B,EAC5B,KAAA,CAAA,qBAAqB,EACrB,KAAA,CAAA,+BAA+B,EAC/B,KAAA,CAAA,mCAAmC,EACnC,KAAA,CAAA,wBAAwB,EACxB,MAAA,CAAA,uBAAuB,EACvB,MAAA,CAAA,wBAAwB,EACxB,OAAA,CAAA,0BAA0B,EAC1B,OAAA,CAAA,iCAAiC,EACjC,OAAA,CAAA,yBAAyB,EACzB,OAAA,CAAA,sBAAsB,EACtB,OAAA,CAAA,0BAA0B,EAC1B,aAAA,CAAA,uBAAuB,EACvB,KAAA,CAAA,gCAAgC,EAChC,KAAA,CAAA,sBAAsB,EACtB,KAAA,CAAA,8BAA8B,EAC9B,OAAA,CAAA,+BAA+B,EAC/B,kCAAA,CAAA,gCAAgC,EAChC,aAAA,CAAA,8BAA8B,EAC9B,aAAA,CAAA,qCAAqC,EACrC,SAAA,CAAA,uBAAuB,EACvB,SAAA,CAAA,sBAAsB,EACtB,KAAA,CAAA,uBAAuB,EACvB,8BAAA,CAAA,4BAA4B,EAC5B,KAAA,CAAA,mBAAmB,EACnB,KAAA,CAAA,wBAAwB,EACxB,MAAA,CAAA,qBAAqB,EACrB,OAAA,CAAA,uBAAuB,CACxB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.operations = void 0;\nvar balance_1 = require(\"./balance\");\nvar block_1 = require(\"./block\");\nvar defi_1 = require(\"./defi\");\nvar events_1 = require(\"./events\");\nvar ipfs_1 = require(\"./ipfs\");\nvar nft_1 = require(\"./nft\");\nvar resolve_1 = require(\"./resolve\");\nvar token_1 = require(\"./token\");\nvar getWalletTokenTransfersOperation_1 = require(\"./token/getWalletTokenTransfersOperation\");\nvar transaction_1 = require(\"./transaction\");\nvar utils_1 = require(\"./utils\");\nvar runContractFunctionOperation_1 = require(\"./utils/runContractFunctionOperation\");\nexports.operations = [\n    utils_1.endpointWeightsOperation,\n    block_1.getBlockOperation,\n    events_1.getContractEventsOperation,\n    events_1.getContractLogsOperation,\n    nft_1.getContractNFTsOperation,\n    block_1.getDateToBlockOperation,\n    nft_1.getMultipleNFTsOperation,\n    balance_1.getNativeBalanceOperation,\n    balance_1.getNativeBalancesForAddressesOperation,\n    nft_1.getNFTContractMetadataOperation,\n    nft_1.getNFTContractTransfersOperation,\n    nft_1.getNFTLowestPriceOperation,\n    nft_1.getNFTMetadataOperation,\n    nft_1.getNFTOwnersOperation,\n    nft_1.getNFTTokenIdOwnersOperation,\n    nft_1.getNFTTradesOperation,\n    nft_1.getNFTTransfersByBlockOperation,\n    nft_1.getNFTTransfersFromToBlockOperation,\n    nft_1.getNFTTransfersOperation,\n    defi_1.getPairAddressOperation,\n    defi_1.getPairReservesOperation,\n    token_1.getTokenAllowanceOperation,\n    token_1.getTokenMetadataBySymbolOperation,\n    token_1.getTokenMetadataOperation,\n    token_1.getTokenPriceOperation,\n    token_1.getTokenTransfersOperation,\n    transaction_1.getTransactionOperation,\n    nft_1.getWalletNFTCollectionsOperation,\n    nft_1.getWalletNFTsOperation,\n    nft_1.getWalletNFTTransfersOperation,\n    token_1.getWalletTokenBalancesOperation,\n    getWalletTokenTransfersOperation_1.getWalletTokenTransfersOperation,\n    transaction_1.getWalletTransactionsOperation,\n    transaction_1.getWalletTransactionsVerboseOperation,\n    resolve_1.resolveAddressOperation,\n    resolve_1.resolveDomainOperation,\n    nft_1.reSyncMetadataOperation,\n    runContractFunctionOperation_1.runContractFunctionOperation,\n    nft_1.searchNFTsOperation,\n    nft_1.syncNFTContractOperation,\n    ipfs_1.uploadFolderOperation,\n    utils_1.web3ApiVersionOperation,\n];\n//# sourceMappingURL=operations.js.map"]},"metadata":{},"sourceType":"script"}