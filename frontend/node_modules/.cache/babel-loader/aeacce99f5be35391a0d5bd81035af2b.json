{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertUnreachable = exports.UnreachableError = void 0;\nvar Error_1 = require(\"../Error\");\nexports.UnreachableError = new Error_1.CoreError({\n  code: Error_1.CoreErrorCode.GENERIC_CORE_ERROR,\n  message: \"Incorrect type provided, code should not reach here\"\n});\n/**\n * Typesafe check, to make sure that code never reaches a certain point.\n * Can be used as an exhaustive check in swtich/if-else statements\n *\n * When used properly with Typescript, this code should never reach, as it is typed as 'never'\n *\n * If the code does reach this assertion an UnreachableError is thrown\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar assertUnreachable = function (x) {\n  throw exports.UnreachableError;\n};\nexports.assertUnreachable = assertUnreachable;","map":{"version":3,"sources":["../../src/Assert/assertUnreachable.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAEa,OAAA,CAAA,gBAAgB,GAAG,IAAI,OAAA,CAAA,SAAS,CAAC;EAC5C,IAAI,EAAE,OAAA,CAAA,aAAa,CAAC,kBAAkB;EACtC,OAAO,EAAE;CACV,CAAC;AAEF;;;;;;;AAOG;AACH;AACO,IAAM,iBAAiB,GAAG,UAAC,CAAQ,EAAA;EACxC,MAAM,OAAA,CAAA,gBAAgB;AACxB,CAAC;AAFY,OAAA,CAAA,iBAAiB,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertUnreachable = exports.UnreachableError = void 0;\nvar Error_1 = require(\"../Error\");\nexports.UnreachableError = new Error_1.CoreError({\n    code: Error_1.CoreErrorCode.GENERIC_CORE_ERROR,\n    message: \"Incorrect type provided, code should not reach here\",\n});\n/**\n * Typesafe check, to make sure that code never reaches a certain point.\n * Can be used as an exhaustive check in swtich/if-else statements\n *\n * When used properly with Typescript, this code should never reach, as it is typed as 'never'\n *\n * If the code does reach this assertion an UnreachableError is thrown\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar assertUnreachable = function (x) {\n    throw exports.UnreachableError;\n};\nexports.assertUnreachable = assertUnreachable;\n//# sourceMappingURL=assertUnreachable.js.map"]},"metadata":{},"sourceType":"script"}