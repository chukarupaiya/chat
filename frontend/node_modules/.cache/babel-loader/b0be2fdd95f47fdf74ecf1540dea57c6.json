{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SolAddress = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar PublicKey_1 = require(\"../../utils/PublicKey\");\n/**\n * A representation of an address on the Solana network.\n *\n * Use this class any time you work with an address.\n *\n * @category DataType\n */\nvar SolAddress = /** @class */function () {\n  function SolAddress(address) {\n    this.address = address;\n  }\n  /**\n   * Create a new instance of SolAddress from any valid address input.\n   *\n   * @example `const address = SolAddress.create(\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\")`\n   * @throws an error when a passed address is invalid.\n   */\n  SolAddress.create = function (address) {\n    return address instanceof SolAddress ? address : new SolAddress(SolAddress.parse(address));\n  };\n  SolAddress.parse = function (address) {\n    try {\n      var publicKey = new PublicKey_1.PublicKey(address);\n      return publicKey.toBase58();\n    } catch (e) {\n      throw new common_core_1.CoreError({\n        code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n        message: \"Invalid Solana address provided: \".concat(address),\n        cause: e\n      });\n    }\n  };\n  /**\n   * Formats the address to a specific format.\n   * Currently returns a string representing the address.\n   * @example address.format(); // \"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\"\n   */\n  SolAddress.prototype.format = function () {\n    // TODO: add `format` argument\n    return this.address;\n  };\n  /**\n   * Checks the equality of the current address with another Solana address.\n   * @example `address.equals(\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\")`\n   * @example `address.equals(SolAddress.create(\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\"))`\n   */\n  SolAddress.prototype.equals = function (address) {\n    return this.address === SolAddress.create(address).address;\n  };\n  /**\n   * @returns a string representing the address.\n   * @example address.toString(); // \"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\"\n   */\n  SolAddress.prototype.toString = function () {\n    return this.address;\n  };\n  /**\n   * @returns a string representing the address.\n   * @example address.toJSON(); // \"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\"\n   */\n  SolAddress.prototype.toJSON = function () {\n    return this.address;\n  };\n  return SolAddress;\n}();\nexports.SolAddress = SolAddress;","map":{"version":3,"sources":["../../../src/dataTypes/SolAddress/SolAddress.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;AAWA;;;;;;AAMG;AACH,IAAA,UAAA,GAAA,aAAA,YAAA;EAwBE,SAAA,UAAA,CAAmC,OAAe,EAAA;IAAf,IAAA,CAAA,OAAO,GAAP,OAAO;EAAW;EAvBrD;;;;;AAKG;EACW,UAAA,CAAA,MAAM,GAApB,UAAqB,OAAsB,EAAA;IACzC,OAAO,OAAO,YAAY,UAAU,GAAG,OAAO,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;EAC5F,CAAC;EAEc,UAAA,CAAA,KAAK,GAApB,UAAqB,OAAe,EAAA;IAClC,IAAI;MACF,IAAM,SAAS,GAAG,IAAI,WAAA,CAAA,SAAS,CAAC,OAAO,CAAC;MACxC,OAAO,SAAS,CAAC,QAAQ,EAAE;KAC5B,CAAC,OAAO,CAAC,EAAE;MACV,MAAM,IAAI,aAAA,CAAA,SAAS,CAAC;QAClB,IAAI,EAAE,aAAA,CAAA,aAAa,CAAC,gBAAgB;QACpC,OAAO,EAAE,mCAAA,CAAA,MAAA,CAAoC,OAAO,CAAE;QACtD,KAAK,EAAE;OACR,CAAC;IACH;EACH,CAAC;EAID;;;;AAIG;EACI,UAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACE;IACA,OAAO,IAAI,CAAC,OAAO;EACrB,CAAC;EAED;;;;AAIG;EACI,UAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UAAc,OAAsB,EAAA;IAClC,OAAO,IAAI,CAAC,OAAO,KAAK,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO;EAC5D,CAAC;EAED;;;AAGG;EACI,UAAA,CAAA,SAAA,CAAA,QAAQ,GAAf,YAAA;IACE,OAAO,IAAI,CAAC,OAAO;EACrB,CAAC;EAED;;;AAGG;EACI,UAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACE,OAAO,IAAI,CAAC,OAAO;EACrB,CAAC;EACH,OAAA,UAAC;AAAD,CAAC,EAAA;AA5DY,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolAddress = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar PublicKey_1 = require(\"../../utils/PublicKey\");\n/**\n * A representation of an address on the Solana network.\n *\n * Use this class any time you work with an address.\n *\n * @category DataType\n */\nvar SolAddress = /** @class */ (function () {\n    function SolAddress(address) {\n        this.address = address;\n    }\n    /**\n     * Create a new instance of SolAddress from any valid address input.\n     *\n     * @example `const address = SolAddress.create(\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\")`\n     * @throws an error when a passed address is invalid.\n     */\n    SolAddress.create = function (address) {\n        return address instanceof SolAddress ? address : new SolAddress(SolAddress.parse(address));\n    };\n    SolAddress.parse = function (address) {\n        try {\n            var publicKey = new PublicKey_1.PublicKey(address);\n            return publicKey.toBase58();\n        }\n        catch (e) {\n            throw new common_core_1.CoreError({\n                code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n                message: \"Invalid Solana address provided: \".concat(address),\n                cause: e,\n            });\n        }\n    };\n    /**\n     * Formats the address to a specific format.\n     * Currently returns a string representing the address.\n     * @example address.format(); // \"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\"\n     */\n    SolAddress.prototype.format = function () {\n        // TODO: add `format` argument\n        return this.address;\n    };\n    /**\n     * Checks the equality of the current address with another Solana address.\n     * @example `address.equals(\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\")`\n     * @example `address.equals(SolAddress.create(\"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\"))`\n     */\n    SolAddress.prototype.equals = function (address) {\n        return this.address === SolAddress.create(address).address;\n    };\n    /**\n     * @returns a string representing the address.\n     * @example address.toString(); // \"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\"\n     */\n    SolAddress.prototype.toString = function () {\n        return this.address;\n    };\n    /**\n     * @returns a string representing the address.\n     * @example address.toJSON(); // \"9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM\"\n     */\n    SolAddress.prototype.toJSON = function () {\n        return this.address;\n    };\n    return SolAddress;\n}());\nexports.SolAddress = SolAddress;\n//# sourceMappingURL=SolAddress.js.map"]},"metadata":{},"sourceType":"script"}