{"ast":null,"code":"var _jsxFileName = \"/Users/karupaiyachu/Desktop/project/chat-app copy/frontend/src/Metamask-snaps-main 2/packages/site/src/hooks/MetamaskContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useReducer } from 'react';\nimport { isFlask, getSnap } from '../utils';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isFlask: false,\n  error: undefined\n};\nexport const MetaMaskContext = /*#__PURE__*/createContext([initialState, () => {\n  /* no op */\n}]);\nexport let MetamaskActions;\n(function (MetamaskActions) {\n  MetamaskActions[\"SetInstalled\"] = \"SetInstalled\";\n  MetamaskActions[\"SetFlaskDetected\"] = \"SetFlaskDetected\";\n  MetamaskActions[\"SetError\"] = \"SetError\";\n})(MetamaskActions || (MetamaskActions = {}));\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case MetamaskActions.SetInstalled:\n      return {\n        ...state,\n        installedSnap: action.payload\n      };\n    case MetamaskActions.SetFlaskDetected:\n      return {\n        ...state,\n        isFlask: action.payload\n      };\n    case MetamaskActions.SetError:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n/**\n * MetaMask context provider to handle MetaMask and snap status.\n *\n * @param props - React Props.\n * @param props.children - React component to be wrapped by the Provider.\n * @returns JSX.\n */\nexport const MetaMaskProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  if (typeof window === 'undefined') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false);\n  }\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    async function detectFlask() {\n      const isFlaskDetected = await isFlask();\n      dispatch({\n        type: MetamaskActions.SetFlaskDetected,\n        payload: isFlaskDetected\n      });\n    }\n    async function detectSnapInstalled() {\n      const installedSnap = await getSnap();\n      dispatch({\n        type: MetamaskActions.SetInstalled,\n        payload: installedSnap\n      });\n    }\n    detectFlask();\n    if (state.isFlask) {\n      detectSnapInstalled();\n    }\n  }, [state.isFlask, window.ethereum]);\n  useEffect(() => {\n    let timeoutId;\n    if (state.error) {\n      timeoutId = window.setTimeout(() => {\n        dispatch({\n          type: MetamaskActions.SetError,\n          payload: undefined\n        });\n      }, 10000);\n    }\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [state.error]);\n  return /*#__PURE__*/_jsxDEV(MetaMaskContext.Provider, {\n    value: [state, dispatch],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(MetaMaskProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = MetaMaskProvider;\nvar _c;\n$RefreshReg$(_c, \"MetaMaskProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","isFlask","getSnap","initialState","error","undefined","MetaMaskContext","MetamaskActions","reducer","state","action","type","SetInstalled","installedSnap","payload","SetFlaskDetected","SetError","MetaMaskProvider","children","window","dispatch","detectFlask","isFlaskDetected","detectSnapInstalled","ethereum","timeoutId","setTimeout","clearTimeout"],"sources":["/Users/karupaiyachu/Desktop/project/chat-app copy/frontend/src/Metamask-snaps-main 2/packages/site/src/hooks/MetamaskContext.tsx"],"sourcesContent":["import {\n  createContext,\n  Dispatch,\n  ReactNode,\n  Reducer,\n  useEffect,\n  useReducer,\n} from 'react';\nimport { Snap } from '../types';\nimport { isFlask, getSnap } from '../utils';\n\nexport type MetamaskState = {\n  isFlask: boolean;\n  installedSnap?: Snap;\n  error?: Error;\n};\n\nconst initialState: MetamaskState = {\n  isFlask: false,\n  error: undefined,\n};\n\ntype MetamaskDispatch = { type: MetamaskActions; payload: any };\n\nexport const MetaMaskContext = createContext<\n  [MetamaskState, Dispatch<MetamaskDispatch>]\n>([\n  initialState,\n  () => {\n    /* no op */\n  },\n]);\n\nexport enum MetamaskActions {\n  SetInstalled = 'SetInstalled',\n  SetFlaskDetected = 'SetFlaskDetected',\n  SetError = 'SetError',\n}\n\nconst reducer: Reducer<MetamaskState, MetamaskDispatch> = (state, action) => {\n  switch (action.type) {\n    case MetamaskActions.SetInstalled:\n      return {\n        ...state,\n        installedSnap: action.payload,\n      };\n\n    case MetamaskActions.SetFlaskDetected:\n      return {\n        ...state,\n        isFlask: action.payload,\n      };\n\n    case MetamaskActions.SetError:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/**\n * MetaMask context provider to handle MetaMask and snap status.\n *\n * @param props - React Props.\n * @param props.children - React component to be wrapped by the Provider.\n * @returns JSX.\n */\nexport const MetaMaskProvider = ({ children }: { children: ReactNode }) => {\n  if (typeof window === 'undefined') {\n    return <>{children}</>;\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    async function detectFlask() {\n      const isFlaskDetected = await isFlask();\n\n      dispatch({\n        type: MetamaskActions.SetFlaskDetected,\n        payload: isFlaskDetected,\n      });\n    }\n\n    async function detectSnapInstalled() {\n      const installedSnap = await getSnap();\n      dispatch({\n        type: MetamaskActions.SetInstalled,\n        payload: installedSnap,\n      });\n    }\n\n    detectFlask();\n\n    if (state.isFlask) {\n      detectSnapInstalled();\n    }\n  }, [state.isFlask, window.ethereum]);\n\n  useEffect(() => {\n    let timeoutId: number;\n\n    if (state.error) {\n      timeoutId = window.setTimeout(() => {\n        dispatch({\n          type: MetamaskActions.SetError,\n          payload: undefined,\n        });\n      }, 10000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [state.error]);\n\n  return (\n    <MetaMaskContext.Provider value={[state, dispatch]}>\n      {children}\n    </MetaMaskContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SACEA,aAAa,EAIbC,SAAS,EACTC,UAAU,QACL,OAAO;AAEd,SAASC,OAAO,EAAEC,OAAO,QAAQ,UAAU;AAAC;AAAA;AAQ5C,MAAMC,YAA2B,GAAG;EAClCF,OAAO,EAAE,KAAK;EACdG,KAAK,EAAEC;AACT,CAAC;AAID,OAAO,MAAMC,eAAe,gBAAGR,aAAa,CAE1C,CACAK,YAAY,EACZ,MAAM;EACJ;AAAA,CACD,CACF,CAAC;AAEF,WAAYI,eAAe;AAI1B,WAJWA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;AAAA,GAAfA,eAAe,KAAfA,eAAe;AAM3B,MAAMC,OAAiD,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC3E,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKJ,eAAe,CAACK,YAAY;MAC/B,OAAO;QACL,GAAGH,KAAK;QACRI,aAAa,EAAEH,MAAM,CAACI;MACxB,CAAC;IAEH,KAAKP,eAAe,CAACQ,gBAAgB;MACnC,OAAO;QACL,GAAGN,KAAK;QACRR,OAAO,EAAES,MAAM,CAACI;MAClB,CAAC;IAEH,KAAKP,eAAe,CAACS,QAAQ;MAC3B,OAAO;QACL,GAAGP,KAAK;QACRL,KAAK,EAAEM,MAAM,CAACI;MAChB,CAAC;IAEH;MACE,OAAOL,KAAK;EAAC;AAEnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMQ,gBAAgB,GAAG,QAA2C;EAAA;EAAA,IAA1C;IAAEC;EAAkC,CAAC;EACpE,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC,oBAAO;MAAA,UAAGD;IAAQ,iBAAI;EACxB;EAEA,MAAM,CAACT,KAAK,EAAEW,QAAQ,CAAC,GAAGpB,UAAU,CAACQ,OAAO,EAAEL,YAAY,CAAC;EAE3DJ,SAAS,CAAC,MAAM;IACd,eAAesB,WAAW,GAAG;MAC3B,MAAMC,eAAe,GAAG,MAAMrB,OAAO,EAAE;MAEvCmB,QAAQ,CAAC;QACPT,IAAI,EAAEJ,eAAe,CAACQ,gBAAgB;QACtCD,OAAO,EAAEQ;MACX,CAAC,CAAC;IACJ;IAEA,eAAeC,mBAAmB,GAAG;MACnC,MAAMV,aAAa,GAAG,MAAMX,OAAO,EAAE;MACrCkB,QAAQ,CAAC;QACPT,IAAI,EAAEJ,eAAe,CAACK,YAAY;QAClCE,OAAO,EAAED;MACX,CAAC,CAAC;IACJ;IAEAQ,WAAW,EAAE;IAEb,IAAIZ,KAAK,CAACR,OAAO,EAAE;MACjBsB,mBAAmB,EAAE;IACvB;EACF,CAAC,EAAE,CAACd,KAAK,CAACR,OAAO,EAAEkB,MAAM,CAACK,QAAQ,CAAC,CAAC;EAEpCzB,SAAS,CAAC,MAAM;IACd,IAAI0B,SAAiB;IAErB,IAAIhB,KAAK,CAACL,KAAK,EAAE;MACfqB,SAAS,GAAGN,MAAM,CAACO,UAAU,CAAC,MAAM;QAClCN,QAAQ,CAAC;UACPT,IAAI,EAAEJ,eAAe,CAACS,QAAQ;UAC9BF,OAAO,EAAET;QACX,CAAC,CAAC;MACJ,CAAC,EAAE,KAAK,CAAC;IACX;IAEA,OAAO,MAAM;MACX,IAAIoB,SAAS,EAAE;QACbN,MAAM,CAACQ,YAAY,CAACF,SAAS,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAAChB,KAAK,CAACL,KAAK,CAAC,CAAC;EAEjB,oBACE,QAAC,eAAe,CAAC,QAAQ;IAAC,KAAK,EAAE,CAACK,KAAK,EAAEW,QAAQ,CAAE;IAAA,UAChDF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACgB;AAE/B,CAAC;AAAC,GAxDWD,gBAAgB;AAAA,KAAhBA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}