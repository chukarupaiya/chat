{"ast":null,"code":"var _jsxFileName = \"/Users/karupaiyachu/Desktop/project/chat-app copy/frontend/src/components/Pay.js\",\n  _s = $RefreshSig$();\nimport { React } from \"react\";\nimport \"./Pay.css\";\nimport { FaDollarSign } from \"react-icons/fa\";\nimport { Input, InputGroup, InputLeftElement, InputRightElement } from \"@chakra-ui/input\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, useDisclosure, Text, Image, Select, useStyles } from \"@chakra-ui/react\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport \"./SingleChat.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport senderc20 from \"../contracts/frontend-interaction/senderc20\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\nvar socket, selectedChatCompare;\nconst Pay = _ref => {\n  _s();\n  let {\n    fetchAgain,\n    setFetchAgain,\n    fetchMessages,\n    refAgain,\n    toClose,\n    Moralis,\n    sender_id\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [currency, setCurrency] = useState(\"\");\n  const [payment_type, setPaymentType] = useState(\"token\");\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n  const [token_address, setTokenAddress] = useState(\"\");\n  const [note, setNote] = useState(\"\");\n  const [owner_address, setOwner_address] = useState(\"0x0C9d33186f7D87A94cBA10F3083BB208A49c1647\");\n  const [bal, setBal] = useState(\"\");\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    notification,\n    setNotification\n  } = ChatState();\n  const sendMessage = async event => {\n    senderc20(token_address, sender_id, newMessage, \"0x0C9d33186f7D87A94cBA10F3083BB208A49c1647\", note);\n\n    //console.log(token_address+\" \"+sender_id+\" \"+newMessage);\n\n    if (newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`\n          }\n        };\n        setNewMessage(\"\");\n        console.log(newMessage + \" \" + selectedChat);\n        const {\n          data\n        } = await axios.post(\"/api/message\", {\n          content: newMessage,\n          chatId: selectedChat,\n          payment: true,\n          payment_mode: \"pay\",\n          chat_mode: \"private\",\n          payment_type: payment_type,\n          currency: currency,\n          receiver_id: sender_id,\n          note: note,\n          token_address: token_address\n        }, config);\n        console.log(data);\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\"\n        });\n      }\n      refAgain();\n    }\n  };\n  const sendMessageReq = async event => {\n    if (newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`\n          }\n        };\n        setNewMessage(\"\");\n        console.log(newMessage + \" \" + selectedChat);\n        const {\n          data\n        } = await axios.post(\"/api/message\", {\n          content: newMessage,\n          chatId: selectedChat,\n          payment: true,\n          payment_mode: \"request\",\n          chat_mode: \"private\",\n          payment_type: payment_type,\n          currency: currency,\n          receiver_id: owner_address,\n          note: note,\n          token_address: token_address\n        }, config);\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\"\n        });\n      }\n      refAgain();\n    }\n  };\n  const typingHandler = e => {\n    setNewMessage(e.target.value);\n    if (!socketConnected) return;\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n    console.log(socket);\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    socket.on(\"message recieved\", newMessageRecieved => {\n      if (!selectedChatCompare ||\n      // if chat is not selected or doesn't match current chat\n      selectedChatCompare._id !== newMessageRecieved.chat._id) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n  const [options, setOptions] = useState([]);\n  useEffect(async () => {\n    const {\n      EvmChain\n    } = require(\"@moralisweb3/common-evm-utils\");\n    const address = \"0x0C9d33186f7D87A94cBA10F3083BB208A49c1647\";\n    const chain = EvmChain.MUMBAI;\n    if (Moralis != undefined) {\n      const response = await Moralis.EvmApi.token.getWalletTokenBalances({\n        address,\n        chain\n      });\n      console.log(response.toJSON());\n      setOptions(response.toJSON());\n    }\n  }, [Moralis]);\n  const options2 = options.map(d => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: d.symbol + \"|\" + d.token_address + \"|\" + Math.pow(10, -18) * d.balance,\n      children: d.symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  });\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      width: \"100%\",\n      height: \"100%\",\n      margin: \"0px\",\n      padding: \"0px\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"choice_label\",\n        children: \"TOKEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        d: {\n          base: \"flex\"\n        },\n        icon: /*#__PURE__*/_jsxDEV(FaDollarSign, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }, this),\n        onClick: onOpen,\n        colorScheme: \"grey\",\n        _hover: {\n          bg: \"rgb(68, 201, 34);\"\n        },\n        bg: \"rgb(114,137,218)\",\n        color: \"white\",\n        width: \"100%\",\n        height: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      onClose: () => {\n        onClose();\n        toClose();\n      },\n      isOpen: isOpen,\n      isCentered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        h: \"440px\",\n        bg: \"rgb(30,33,36)\",\n        color: \"white\",\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          fontSize: \"30px\",\n          fontFamily: \"Work sans\",\n          d: \"flex\",\n          justifyContent: \"center\",\n          children: \"Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            onSubmit: sendMessage,\n            id: \"first-name\",\n            isRequired: true,\n            mt: 3,\n            width: \"100%\",\n            margin: \"auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Token\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Bal:\", bal == \"\" ? \"--\" : bal]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"select the token\",\n              width: \"100%\",\n              margin: \"auto\",\n              name: \"currency\",\n              marginBottom: \"15px\",\n              height: \"35px\",\n              onChange: event => {\n                setTokenAddress(event.target.value.split(\"|\")[1]);\n                setCurrency(event.target.value.split(\"|\")[0]);\n                setBal(event.target.value.split(\"|\")[2]);\n              },\n              children: options2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-pay\",\n              style: {\n                width: \"100%\",\n                margin: \"auto\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Enter amount\",\n                type: \"number\",\n                variant: \"filled\",\n                bg: \"rgb(54,57,62)\",\n                color: \"white\",\n                focusBorderColor: \"rgb(54,57,62)\",\n                value: newMessage,\n                width: \"100%\",\n                marginBottom: \"15px\",\n                height: \"35px\",\n                fontSize: \"15px\",\n                onChange: typingHandler,\n                _hover: {\n                  bg: \"rgb(54,57,62)\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Note\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Enter note\",\n                type: \"text\",\n                variant: \"filled\",\n                bg: \"rgb(54,57,62)\",\n                color: \"white\",\n                focusBorderColor: \"rgb(54,57,62)\",\n                value: note,\n                width: \"100%\",\n                marginBottom: \"15px\",\n                height: \"35px\",\n                fontSize: \"15px\",\n                onChange: event => {\n                  setNote(event.target.value);\n                },\n                _hover: {\n                  bg: \"rgb(54,57,62)\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              onClose();\n              sendMessageReq();\n              toClose();\n            },\n            bg: \"rgb(114,137,218)\",\n            marginRight: \"10px\",\n            children: \"Request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              onClose();\n              sendMessage();\n              toClose();\n            },\n            bg: \"rgb(114,137,218)\",\n            children: \"Pay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Pay, \"63YdO+eQvEBROojnHY82/3r3XMs=\", false, function () {\n  return [useToast, useDisclosure];\n});\n_c = Pay;\nexport default Pay;\nvar _c;\n$RefreshReg$(_c, \"Pay\");","map":{"version":3,"names":["React","FaDollarSign","Input","InputGroup","InputLeftElement","InputRightElement","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","useDisclosure","Text","Image","Select","useStyles","FormControl","FormLabel","Box","IconButton","Spinner","useToast","getSender","getSenderFull","useEffect","useState","axios","ArrowBackIcon","ProfileModal","ScrollableChat","Lottie","animationData","io","UpdateGroupChatModal","ChatState","senderc20","ENDPOINT","socket","selectedChatCompare","Pay","fetchAgain","setFetchAgain","fetchMessages","refAgain","toClose","Moralis","sender_id","messages","setMessages","currency","setCurrency","payment_type","setPaymentType","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","toast","token_address","setTokenAddress","note","setNote","owner_address","setOwner_address","bal","setBal","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","selectedChat","setSelectedChat","user","notification","setNotification","sendMessage","event","emit","_id","config","headers","Authorization","token","console","log","data","post","content","chatId","payment","payment_mode","chat_mode","receiver_id","error","title","description","status","duration","isClosable","position","sendMessageReq","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","on","newMessageRecieved","chat","includes","options","setOptions","EvmChain","require","address","chain","MUMBAI","undefined","response","EvmApi","getWalletTokenBalances","toJSON","options2","map","d","symbol","Math","pow","balance","isOpen","onOpen","onClose","base","bg","split","width","margin"],"sources":["/Users/karupaiyachu/Desktop/project/chat-app copy/frontend/src/components/Pay.js"],"sourcesContent":["import { React } from \"react\";\nimport \"./Pay.css\";\nimport { FaDollarSign } from \"react-icons/fa\";\nimport {\n  Input,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n} from \"@chakra-ui/input\";\n\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  Text,\n  Image,\n  Select,\n  useStyles,\n} from \"@chakra-ui/react\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport \"./SingleChat.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nimport senderc20 from \"../contracts/frontend-interaction/senderc20\";\n\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\nvar socket, selectedChatCompare;\n\nconst Pay = ({\n  fetchAgain,\n  setFetchAgain,\n  fetchMessages,\n  refAgain,\n  toClose,\n  Moralis,\n  sender_id,\n}) => {\n  const [messages, setMessages] = useState([]);\n  const [currency, setCurrency] = useState(\"\");\n  const [payment_type, setPaymentType] = useState(\"token\");\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n  const [token_address, setTokenAddress] = useState(\"\");\n  const [note, setNote] = useState(\"\");\n  const [owner_address, setOwner_address] = useState(\n    \"0x0C9d33186f7D87A94cBA10F3083BB208A49c1647\"\n  );\n  const [bal,setBal]=useState(\"\");\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const sendMessage = async (event) => {\n    senderc20(\n      token_address,\n      sender_id,\n      newMessage,\n      \"0x0C9d33186f7D87A94cBA10F3083BB208A49c1647\",\n      note\n    );\n\n    //console.log(token_address+\" \"+sender_id+\" \"+newMessage);\n\n    if (newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        console.log(newMessage + \" \" + selectedChat);\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n            payment: true,\n            payment_mode: \"pay\",\n            chat_mode: \"private\",\n            payment_type: payment_type,\n            currency: currency,\n            receiver_id: sender_id,\n            note: note,\n            token_address: token_address,\n          },\n          config\n        );\n        console.log(data);\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n      refAgain();\n    }\n  };\n\n  const sendMessageReq = async (event) => {\n    if (newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        console.log(newMessage + \" \" + selectedChat);\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n            payment: true,\n            payment_mode: \"request\",\n            chat_mode: \"private\",\n            payment_type: payment_type,\n            currency: currency,\n            receiver_id: owner_address,\n            note: note,\n            token_address: token_address,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n      refAgain();\n    }\n  };\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n    console.log(socket);\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const [options, setOptions] = useState([]);\n\n  useEffect(async () => {\n    const { EvmChain } = require(\"@moralisweb3/common-evm-utils\");\n\n    const address = \"0x0C9d33186f7D87A94cBA10F3083BB208A49c1647\";\n\n    const chain = EvmChain.MUMBAI;\n\n    if (Moralis != undefined) {\n      const response = await Moralis.EvmApi.token.getWalletTokenBalances({\n        address,\n        chain,\n      });\n\n      console.log(response.toJSON());\n      setOptions(response.toJSON());\n    }\n  }, [Moralis]);\n\n  const options2 = options.map((d) => {\n    return (\n      <option value={d.symbol + \"|\" + d.token_address+\"|\"+Math.pow(10, -18) * d.balance}>\n        {d.symbol}\n      </option>\n    );\n  });\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <Button width=\"100%\" height=\"100%\" margin={\"0px\"} padding=\"0px\">\n        <p class=\"choice_label\">TOKEN</p>\n        <IconButton\n          d={{ base: \"flex\" }}\n          icon={<FaDollarSign />}\n          onClick={onOpen}\n          colorScheme=\"grey\"\n          _hover={{ bg: \"rgb(68, 201, 34);\" }}\n          bg=\"rgb(114,137,218)\"\n          color={\"white\"}\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </Button>\n\n      <Modal\n        size=\"lg\"\n        onClose={() => {\n          onClose();\n          toClose();\n        }}\n        isOpen={isOpen}\n        isCentered\n      >\n        <ModalOverlay />\n        <ModalContent h=\"440px\" bg={\"rgb(30,33,36)\"} color=\"white\">\n          <ModalHeader\n            fontSize=\"30px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {\"Payment\"}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <FormControl\n              onSubmit={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n              width={\"100%\"}\n              margin={\"auto\"}\n            >\n              <div>\n              <FormLabel>Token</FormLabel>\n              <p>Bal:{bal==\"\"?\"--\":bal}</p>\n              </div>\n              \n              <Select\n                placeholder=\"select the token\"\n                width={\"100%\"}\n                margin={\"auto\"}\n                name=\"currency\"\n                marginBottom={\"15px\"}\n                height={\"35px\"}\n                onChange={(event) => {\n                  setTokenAddress(event.target.value.split(\"|\")[1]);\n                  setCurrency(event.target.value.split(\"|\")[0]);\n                  setBal(event.target.value.split(\"|\")[2]);\n                }}\n              >\n                {options2}\n              </Select>\n\n              <div className={\"form-pay\"} style={{ width: \"100%\", margin: \"auto\" }}>\n                <FormLabel>Amount</FormLabel>\n                <Input\n                  placeholder=\"Enter amount\"\n                  type=\"number\"\n                  variant=\"filled\"\n                  bg=\"rgb(54,57,62)\"\n                  color=\"white\"\n                  focusBorderColor=\"rgb(54,57,62)\"\n                  value={newMessage}\n                  width=\"100%\"\n                  marginBottom={\"15px\"}\n                  height={\"35px\"}\n                  fontSize=\"15px\"\n                  onChange={typingHandler}\n                  _hover={{ bg: \"rgb(54,57,62)\" }}\n                />\n                <FormLabel>Note</FormLabel>\n                <Input\n                  placeholder=\"Enter note\"\n                  type=\"text\"\n                  variant=\"filled\"\n                  bg=\"rgb(54,57,62)\"\n                  color=\"white\"\n                  focusBorderColor=\"rgb(54,57,62)\"\n                  value={note}\n                  width=\"100%\"\n                  marginBottom={\"15px\"}\n                  height={\"35px\"}\n                  fontSize=\"15px\"\n                  onChange={(event) => {\n                    setNote(event.target.value);\n                  }}\n                  _hover={{ bg: \"rgb(54,57,62)\" }}\n                />\n              </div>\n            </FormControl>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              onClick={() => {\n                onClose();\n                sendMessageReq();\n                toClose();\n              }}\n              bg=\"rgb(114,137,218)\"\n              marginRight={\"10px\"}\n            >\n              Request\n            </Button>\n            <Button\n              onClick={() => {\n                onClose();\n                sendMessage();\n                toClose();\n              }}\n              bg=\"rgb(114,137,218)\"\n            >\n              Pay\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default Pay;\n"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,OAAO;AAC7B,OAAO,WAAW;AAClB,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SACEC,KAAK,EACLC,UAAU,EACVC,gBAAgB,EAChBC,iBAAiB,QACZ,kBAAkB;AAGzB,SACEC,KAAK,EACLC,YAAY,EACZC,YAAY,EACZC,WAAW,EACXC,WAAW,EACXC,SAAS,EACTC,gBAAgB,EAChBC,MAAM,EACNC,aAAa,EACbC,IAAI,EACJC,KAAK,EACLC,MAAM,EACNC,SAAS,QACJ,kBAAkB;AACzB,SAASC,WAAW,EAAEC,SAAS,QAAQ,yBAAyB;AAChE,SAASC,GAAG,QAAQ,mBAAmB;AACvC,OAAO,cAAc;AACrB,OAAO,kBAAkB;AACzB,SAASC,UAAU,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,kBAAkB;AAChE,SAASC,SAAS,EAAEC,aAAa,QAAQ,sBAAsB;AAC/D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,aAAa,MAAM,2BAA2B;AAErD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,SAASC,SAAS,QAAQ,yBAAyB;AAEnD,OAAOC,SAAS,MAAM,6CAA6C;AAAC;AAAA;AAEpE,MAAMC,QAAQ,GAAG,uBAAuB,CAAC,CAAC;AAC1C,IAAIC,MAAM,EAAEC,mBAAmB;AAE/B,MAAMC,GAAG,GAAG,QAQN;EAAA;EAAA,IARO;IACXC,UAAU;IACVC,aAAa;IACbC,aAAa;IACbC,QAAQ;IACRC,OAAO;IACPC,OAAO;IACPC;EACF,CAAC;EACC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0B,YAAY,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,OAAO,CAAC;EACxD,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC8B,eAAe,EAAEC,kBAAkB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACgC,MAAM,EAAEC,SAAS,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACkC,QAAQ,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMoC,KAAK,GAAGxC,QAAQ,EAAE;EACxB,MAAM,CAACyC,aAAa,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACrD,MAAM,CAACuC,IAAI,EAAEC,OAAO,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyC,aAAa,EAAEC,gBAAgB,CAAC,GAAG1C,QAAQ,CAChD,4CAA4C,CAC7C;EACD,MAAM,CAAC2C,GAAG,EAACC,MAAM,CAAC,GAAC5C,QAAQ,CAAC,EAAE,CAAC;EAE/B,MAAM6C,cAAc,GAAG;IACrBC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,IAAI;IACdzC,aAAa,EAAEA,aAAa;IAC5B0C,gBAAgB,EAAE;MAChBC,mBAAmB,EAAE;IACvB;EACF,CAAC;EACD,MAAM;IAAEC,YAAY;IAAEC,eAAe;IAAEC,IAAI;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAC1E7C,SAAS,EAAE;EAEb,MAAM8C,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnC9C,SAAS,CACP2B,aAAa,EACbhB,SAAS,EACTO,UAAU,EACV,4CAA4C,EAC5CW,IAAI,CACL;;IAED;;IAEA,IAAIX,UAAU,EAAE;MACdhB,MAAM,CAAC6C,IAAI,CAAC,aAAa,EAAEP,YAAY,CAACQ,GAAG,CAAC;MAC5C,IAAI;QACF,MAAMC,MAAM,GAAG;UACbC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAG,UAAST,IAAI,CAACU,KAAM;UACtC;QACF,CAAC;QACDjC,aAAa,CAAC,EAAE,CAAC;QACjBkC,OAAO,CAACC,GAAG,CAACpC,UAAU,GAAG,GAAG,GAAGsB,YAAY,CAAC;QAC5C,MAAM;UAAEe;QAAK,CAAC,GAAG,MAAMhE,KAAK,CAACiE,IAAI,CAC/B,cAAc,EACd;UACEC,OAAO,EAAEvC,UAAU;UACnBwC,MAAM,EAAElB,YAAY;UACpBmB,OAAO,EAAE,IAAI;UACbC,YAAY,EAAE,KAAK;UACnBC,SAAS,EAAE,SAAS;UACpB7C,YAAY,EAAEA,YAAY;UAC1BF,QAAQ,EAAEA,QAAQ;UAClBgD,WAAW,EAAEnD,SAAS;UACtBkB,IAAI,EAAEA,IAAI;UACVF,aAAa,EAAEA;QACjB,CAAC,EACDsB,MAAM,CACP;QACDI,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;QACjBrD,MAAM,CAAC6C,IAAI,CAAC,aAAa,EAAEQ,IAAI,CAAC;QAChC1C,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE2C,IAAI,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdrC,KAAK,CAAC;UACJsC,KAAK,EAAE,gBAAgB;UACvBC,WAAW,EAAE,4BAA4B;UACzCC,MAAM,EAAE,OAAO;UACfC,QAAQ,EAAE,IAAI;UACdC,UAAU,EAAE,IAAI;UAChBC,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ;MACA7D,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,MAAM8D,cAAc,GAAG,MAAOxB,KAAK,IAAK;IACtC,IAAI5B,UAAU,EAAE;MACdhB,MAAM,CAAC6C,IAAI,CAAC,aAAa,EAAEP,YAAY,CAACQ,GAAG,CAAC;MAC5C,IAAI;QACF,MAAMC,MAAM,GAAG;UACbC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAG,UAAST,IAAI,CAACU,KAAM;UACtC;QACF,CAAC;QACDjC,aAAa,CAAC,EAAE,CAAC;QACjBkC,OAAO,CAACC,GAAG,CAACpC,UAAU,GAAG,GAAG,GAAGsB,YAAY,CAAC;QAC5C,MAAM;UAAEe;QAAK,CAAC,GAAG,MAAMhE,KAAK,CAACiE,IAAI,CAC/B,cAAc,EACd;UACEC,OAAO,EAAEvC,UAAU;UACnBwC,MAAM,EAAElB,YAAY;UACpBmB,OAAO,EAAE,IAAI;UACbC,YAAY,EAAE,SAAS;UACvBC,SAAS,EAAE,SAAS;UACpB7C,YAAY,EAAEA,YAAY;UAC1BF,QAAQ,EAAEA,QAAQ;UAClBgD,WAAW,EAAE/B,aAAa;UAC1BF,IAAI,EAAEA,IAAI;UACVF,aAAa,EAAEA;QACjB,CAAC,EACDsB,MAAM,CACP;QACD/C,MAAM,CAAC6C,IAAI,CAAC,aAAa,EAAEQ,IAAI,CAAC;QAChC1C,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE2C,IAAI,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdrC,KAAK,CAAC;UACJsC,KAAK,EAAE,gBAAgB;UACvBC,WAAW,EAAE,4BAA4B;UACzCC,MAAM,EAAE,OAAO;UACfC,QAAQ,EAAE,IAAI;UACdC,UAAU,EAAE,IAAI;UAChBC,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ;MACA7D,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,MAAM+D,aAAa,GAAIC,CAAC,IAAK;IAC3BrD,aAAa,CAACqD,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC7B,IAAI,CAACtD,eAAe,EAAE;IAEtB,IAAI,CAACE,MAAM,EAAE;MACXC,SAAS,CAAC,IAAI,CAAC;MACfrB,MAAM,CAAC6C,IAAI,CAAC,QAAQ,EAAEP,YAAY,CAACQ,GAAG,CAAC;IACzC;IACA,IAAI2B,cAAc,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;IACzC,IAAIC,WAAW,GAAG,IAAI;IACtBC,UAAU,CAAC,MAAM;MACf,IAAIC,OAAO,GAAG,IAAIJ,IAAI,EAAE,CAACC,OAAO,EAAE;MAClC,IAAII,QAAQ,GAAGD,OAAO,GAAGL,cAAc;MACvC,IAAIM,QAAQ,IAAIH,WAAW,IAAIxD,MAAM,EAAE;QACrCpB,MAAM,CAAC6C,IAAI,CAAC,aAAa,EAAEP,YAAY,CAACQ,GAAG,CAAC;QAC5CzB,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC,EAAEuD,WAAW,CAAC;EACjB,CAAC;EAEDzF,SAAS,CAAC,MAAM;IACda,MAAM,GAAGL,EAAE,CAACI,QAAQ,CAAC;IACrBC,MAAM,CAAC6C,IAAI,CAAC,OAAO,EAAEL,IAAI,CAAC;IAC1BxC,MAAM,CAACgF,EAAE,CAAC,WAAW,EAAE,MAAM7D,kBAAkB,CAAC,IAAI,CAAC,CAAC;IACtDnB,MAAM,CAACgF,EAAE,CAAC,QAAQ,EAAE,MAAMzD,WAAW,CAAC,IAAI,CAAC,CAAC;IAC5CvB,MAAM,CAACgF,EAAE,CAAC,aAAa,EAAE,MAAMzD,WAAW,CAAC,KAAK,CAAC,CAAC;IAClD4B,OAAO,CAACC,GAAG,CAACpD,MAAM,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACda,MAAM,CAACgF,EAAE,CAAC,kBAAkB,EAAGC,kBAAkB,IAAK;MACpD,IACE,CAAChF,mBAAmB;MAAI;MACxBA,mBAAmB,CAAC6C,GAAG,KAAKmC,kBAAkB,CAACC,IAAI,CAACpC,GAAG,EACvD;QACA,IAAI,CAACL,YAAY,CAAC0C,QAAQ,CAACF,kBAAkB,CAAC,EAAE;UAC9CvC,eAAe,CAAC,CAACuC,kBAAkB,EAAE,GAAGxC,YAAY,CAAC,CAAC;UACtDrC,aAAa,CAAC,CAACD,UAAU,CAAC;QAC5B;MACF,CAAC,MAAM;QACLQ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEuE,kBAAkB,CAAC,CAAC;MAChD;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGjG,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,YAAY;IACpB,MAAM;MAAEmG;IAAS,CAAC,GAAGC,OAAO,CAAC,+BAA+B,CAAC;IAE7D,MAAMC,OAAO,GAAG,4CAA4C;IAE5D,MAAMC,KAAK,GAAGH,QAAQ,CAACI,MAAM;IAE7B,IAAIlF,OAAO,IAAImF,SAAS,EAAE;MACxB,MAAMC,QAAQ,GAAG,MAAMpF,OAAO,CAACqF,MAAM,CAAC3C,KAAK,CAAC4C,sBAAsB,CAAC;QACjEN,OAAO;QACPC;MACF,CAAC,CAAC;MAEFtC,OAAO,CAACC,GAAG,CAACwC,QAAQ,CAACG,MAAM,EAAE,CAAC;MAC9BV,UAAU,CAACO,QAAQ,CAACG,MAAM,EAAE,CAAC;IAC/B;EACF,CAAC,EAAE,CAACvF,OAAO,CAAC,CAAC;EAEb,MAAMwF,QAAQ,GAAGZ,OAAO,CAACa,GAAG,CAAEC,CAAC,IAAK;IAClC,oBACE;MAAQ,KAAK,EAAEA,CAAC,CAACC,MAAM,GAAG,GAAG,GAAGD,CAAC,CAACzE,aAAa,GAAC,GAAG,GAAC2E,IAAI,CAACC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAAGH,CAAC,CAACI,OAAQ;MAAA,UAC/EJ,CAAC,CAACC;IAAM;MAAA;MAAA;MAAA;IAAA,QACF;EAEb,CAAC,CAAC;EAEF,MAAM;IAAEI,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGnI,aAAa,EAAE;EAEnD,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,KAAK,EAAC,MAAM;MAAC,MAAM,EAAC,MAAM;MAAC,MAAM,EAAE,KAAM;MAAC,OAAO,EAAC,KAAK;MAAA,wBAC7D;QAAG,KAAK,EAAC,cAAc;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAI,eACjC,QAAC,UAAU;QACT,CAAC,EAAE;UAAEoI,IAAI,EAAE;QAAO,CAAE;QACpB,IAAI,eAAE,QAAC,YAAY;UAAA;UAAA;UAAA;QAAA,QAAI;QACvB,OAAO,EAAEF,MAAO;QAChB,WAAW,EAAC,MAAM;QAClB,MAAM,EAAE;UAAEG,EAAE,EAAE;QAAoB,CAAE;QACpC,EAAE,EAAC,kBAAkB;QACrB,KAAK,EAAE,OAAQ;QACf,KAAK,EAAC,MAAM;QACZ,MAAM,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QACb;IAAA;MAAA;MAAA;MAAA;IAAA,QACK,eAET,QAAC,KAAK;MACJ,IAAI,EAAC,IAAI;MACT,OAAO,EAAE,MAAM;QACbF,OAAO,EAAE;QACTlG,OAAO,EAAE;MACX,CAAE;MACF,MAAM,EAAEgG,MAAO;MACf,UAAU;MAAA,wBAEV,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eAChB,QAAC,YAAY;QAAC,CAAC,EAAC,OAAO;QAAC,EAAE,EAAE,eAAgB;QAAC,KAAK,EAAC,OAAO;QAAA,wBACxD,QAAC,WAAW;UACV,QAAQ,EAAC,MAAM;UACf,UAAU,EAAC,WAAW;UACtB,CAAC,EAAC,MAAM;UACR,cAAc,EAAC,QAAQ;UAAA,UAEtB;QAAS;UAAA;UAAA;UAAA;QAAA,QACE,eACd,QAAC,gBAAgB;UAAA;UAAA;UAAA;QAAA,QAAG,eACpB,QAAC,SAAS;UAAA,uBACR,QAAC,WAAW;YACV,QAAQ,EAAE5D,WAAY;YACtB,EAAE,EAAC,YAAY;YACf,UAAU;YACV,EAAE,EAAE,CAAE;YACN,KAAK,EAAE,MAAO;YACd,MAAM,EAAE,MAAO;YAAA,wBAEf;cAAA,wBACA,QAAC,SAAS;gBAAA,UAAC;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAY,eAC5B;gBAAA,WAAG,MAAI,EAACZ,GAAG,IAAE,EAAE,GAAC,IAAI,GAACA,GAAG;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAK;YAAA;cAAA;cAAA;cAAA;YAAA,QACvB,eAEN,QAAC,MAAM;cACL,WAAW,EAAC,kBAAkB;cAC9B,KAAK,EAAE,MAAO;cACd,MAAM,EAAE,MAAO;cACf,IAAI,EAAC,UAAU;cACf,YAAY,EAAE,MAAO;cACrB,MAAM,EAAE,MAAO;cACf,QAAQ,EAAGa,KAAK,IAAK;gBACnBlB,eAAe,CAACkB,KAAK,CAAC2B,MAAM,CAACC,KAAK,CAACoC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjD/F,WAAW,CAAC+B,KAAK,CAAC2B,MAAM,CAACC,KAAK,CAACoC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C5E,MAAM,CAACY,KAAK,CAAC2B,MAAM,CAACC,KAAK,CAACoC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;cAC1C,CAAE;cAAA,UAEDZ;YAAQ;cAAA;cAAA;cAAA;YAAA,QACF,eAET;cAAK,SAAS,EAAE,UAAW;cAAC,KAAK,EAAE;gBAAEa,KAAK,EAAE,MAAM;gBAAEC,MAAM,EAAE;cAAO,CAAE;cAAA,wBACnE,QAAC,SAAS;gBAAA,UAAC;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAY,eAC7B,QAAC,KAAK;gBACJ,WAAW,EAAC,cAAc;gBAC1B,IAAI,EAAC,QAAQ;gBACb,OAAO,EAAC,QAAQ;gBAChB,EAAE,EAAC,eAAe;gBAClB,KAAK,EAAC,OAAO;gBACb,gBAAgB,EAAC,eAAe;gBAChC,KAAK,EAAE9F,UAAW;gBAClB,KAAK,EAAC,MAAM;gBACZ,YAAY,EAAE,MAAO;gBACrB,MAAM,EAAE,MAAO;gBACf,QAAQ,EAAC,MAAM;gBACf,QAAQ,EAAEqD,aAAc;gBACxB,MAAM,EAAE;kBAAEsC,EAAE,EAAE;gBAAgB;cAAE;gBAAA;gBAAA;gBAAA;cAAA,QAChC,eACF,QAAC,SAAS;gBAAA,UAAC;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAY,eAC3B,QAAC,KAAK;gBACJ,WAAW,EAAC,YAAY;gBACxB,IAAI,EAAC,MAAM;gBACX,OAAO,EAAC,QAAQ;gBAChB,EAAE,EAAC,eAAe;gBAClB,KAAK,EAAC,OAAO;gBACb,gBAAgB,EAAC,eAAe;gBAChC,KAAK,EAAEhF,IAAK;gBACZ,KAAK,EAAC,MAAM;gBACZ,YAAY,EAAE,MAAO;gBACrB,MAAM,EAAE,MAAO;gBACf,QAAQ,EAAC,MAAM;gBACf,QAAQ,EAAGiB,KAAK,IAAK;kBACnBhB,OAAO,CAACgB,KAAK,CAAC2B,MAAM,CAACC,KAAK,CAAC;gBAC7B,CAAE;gBACF,MAAM,EAAE;kBAAEmC,EAAE,EAAE;gBAAgB;cAAE;gBAAA;gBAAA;gBAAA;cAAA,QAChC;YAAA;cAAA;cAAA;cAAA;YAAA,QACE;UAAA;YAAA;YAAA;YAAA;UAAA;QACM;UAAA;UAAA;UAAA;QAAA,QACJ,eACZ,QAAC,WAAW;UAAA,wBACV,QAAC,MAAM;YACL,OAAO,EAAE,MAAM;cACbF,OAAO,EAAE;cACTrC,cAAc,EAAE;cAChB7D,OAAO,EAAE;YACX,CAAE;YACF,EAAE,EAAC,kBAAkB;YACrB,WAAW,EAAE,MAAO;YAAA,UACrB;UAED;YAAA;YAAA;YAAA;UAAA,QAAS,eACT,QAAC,MAAM;YACL,OAAO,EAAE,MAAM;cACbkG,OAAO,EAAE;cACT9D,WAAW,EAAE;cACbpC,OAAO,EAAE;YACX,CAAE;YACF,EAAE,EAAC,kBAAkB;YAAA,UACtB;UAED;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACG;MAAA;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACT;EAAA,gBACP;AAEP,CAAC;AAAC,GAtVIL,GAAG;EAAA,QAgBOlB,QAAQ,EAgMcV,aAAa;AAAA;AAAA,KAhN7C4B,GAAG;AAwVT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}