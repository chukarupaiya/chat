{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EvmTransactionLog = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar EvmAddress_1 = require(\"../EvmAddress\");\nvar EvmChain_1 = require(\"../EvmChain\");\n/**\n * The EvmTransactionLog class is a MoralisData that references an EVM transaction log.\n *\n * @category DataType\n */\nvar EvmTransactionLog = /** @class */function () {\n  function EvmTransactionLog(value, core) {\n    this._value = EvmTransactionLog.parse(value, core);\n  }\n  /**\n   * Create a new instance of EvmTransactionLog from any valid address input\n   *\n   * @example\n   * ```\n   * const log = EvmTransactionLog.create(value, core);\n   * ```\n   * @param value - A valid EvmTransactionLogish\n   * @param core - The Core instance\n   */\n  EvmTransactionLog.create = function (value, core) {\n    if (value instanceof EvmTransactionLog) {\n      return value;\n    }\n    var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n    return new EvmTransactionLog(value, finalCore);\n  };\n  EvmTransactionLog.parse = function (value, core) {\n    return {\n      chain: EvmChain_1.EvmChain.create(value.chain, core),\n      logIndex: (0, common_core_1.maybe)(value.logIndex, function (index) {\n        return +index;\n      }),\n      transactionHash: value.transactionHash,\n      transactionIndex: (0, common_core_1.maybe)(value.transactionIndex),\n      data: value.data,\n      topics: value.topics,\n      blockHash: value.blockHash,\n      blockNumber: value.blockNumber,\n      blockTimestamp: value.blockTimestamp,\n      address: EvmAddress_1.EvmAddress.create(value.address, core)\n    };\n  };\n  /**\n   * Compares the log to another log for equality.\n   *\n   * @param value - The value to compare with\n   * @returns true if the logs are equal, otherwise false\n   * @example\n   * ```ts\n   * log.equals(log);\n   * ```\n   */\n  EvmTransactionLog.prototype.equals = function (value) {\n    return value._value.transactionHash === this._value.transactionHash && value._value.address.equals(this._value.address) && value._value.logIndex === this._value.logIndex && value._value.chain.equals(this._value.chain);\n  };\n  /**\n   * Converts the log to a JSON object.\n   *\n   * @returns the EvmTransactionLog as a JSON object\n   * @example\n   * ```ts\n   * log.toJSON();\n   * ```\n   */\n  EvmTransactionLog.prototype.toJSON = function () {\n    var value = this._value;\n    return __assign(__assign({}, value), {\n      address: value.address.format(),\n      chain: value.chain.format()\n    });\n  };\n  /**\n   * Converts the log to a JSON object.\n   *\n   * @returns the EvmTransactionLog as a JSON object\n   * @example\n   * ```ts\n   * log.format();\n   * ```\n   */\n  EvmTransactionLog.prototype.format = function () {\n    return this.toJSON();\n  };\n  Object.defineProperty(EvmTransactionLog.prototype, \"result\", {\n    /**\n     * Returns the processed Erc20Token.\n     *\n     * @returns the EvmTransactionLog value\n     * @example\n     * ```ts\n     * log.result;\n     *  ```\n     */\n    get: function () {\n      return this._value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransactionLog.prototype, \"transactionHash\", {\n    /**\n     * @returns the transaction hash of the log.\n     *\n     * @example\n     * ```ts\n     * log.transactionHash; // \"0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5\"\n     * ```\n     */\n    get: function () {\n      return this._value.transactionHash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransactionLog.prototype, \"address\", {\n    /**\n     * Returns the address of the log.\n     *\n     * @example\n     * ```ts\n     * log.address; // EvmAddress\n     * ```\n     */\n    get: function () {\n      return this._value.address;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransactionLog.prototype, \"chain\", {\n    /**\n     * Returns the chain of the log.\n     *\n     * @example\n     * ```ts\n     * log.chain; // EvmChain\n     * ```\n     */\n    get: function () {\n      return this._value.chain;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransactionLog.prototype, \"logIndex\", {\n    /**\n     * @returns the log index of the log.\n     *\n     * @example\n     * ```ts\n     * log.logIndex; // 273\n     * ```\n     */\n    get: function () {\n      return this._value.logIndex;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransactionLog.prototype, \"data\", {\n    /**\n     * @returns the data of the log.\n     *\n     * @example\n     * ```ts\n     * log.data; // \"0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443\"\n     * ```\n     */\n    get: function () {\n      return this._value.data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransactionLog.prototype, \"topics\", {\n    /**\n     * @returns the topics of the log.\n     *\n     * @example\n     * ```ts\n     * log.topic0; // [\"0x0000000000000000000000000000000000000000000000000000000000000001\", \"0x0000000000000000000000000000000000000000000000000000000000000002\"]\n     * ```\n     */\n    get: function () {\n      return this._value.topics;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransactionLog.prototype, \"blockHash\", {\n    /**\n     * @returns the block hash of the log.\n     *\n     * @example\n     * ```ts\n     * log.blockHash; // \"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171\"\n     * ```\n     */\n    get: function () {\n      return this._value.blockHash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransactionLog.prototype, \"blockNumber\", {\n    /**\n     * @returns the block number of the log.\n     *\n     * @example\n     * ```ts\n     * log.blockNumber; // 12386788\n     * ```\n     */\n    get: function () {\n      return this._value.blockNumber;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransactionLog.prototype, \"blockTimestamp\", {\n    /**\n     * @returns the block timestamp of the log.\n     *\n     * @example\n     * ```ts\n     * log.blockTimestamp; // \"2021-05-07T11:08:35.000Z\"\n     * ```\n     */\n    get: function () {\n      return this._value.blockTimestamp;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return EvmTransactionLog;\n}();\nexports.EvmTransactionLog = EvmTransactionLog;","map":{"version":3,"sources":["../../../src/dataTypes/EvmTransactionLog/EvmTransactionLog.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EvmTransactionLog = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar EvmAddress_1 = require(\"../EvmAddress\");\nvar EvmChain_1 = require(\"../EvmChain\");\n/**\n * The EvmTransactionLog class is a MoralisData that references an EVM transaction log.\n *\n * @category DataType\n */\nvar EvmTransactionLog = /** @class */ (function () {\n    function EvmTransactionLog(value, core) {\n        this._value = EvmTransactionLog.parse(value, core);\n    }\n    /**\n     * Create a new instance of EvmTransactionLog from any valid address input\n     *\n     * @example\n     * ```\n     * const log = EvmTransactionLog.create(value, core);\n     * ```\n     * @param value - A valid EvmTransactionLogish\n     * @param core - The Core instance\n     */\n    EvmTransactionLog.create = function (value, core) {\n        if (value instanceof EvmTransactionLog) {\n            return value;\n        }\n        var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n        return new EvmTransactionLog(value, finalCore);\n    };\n    EvmTransactionLog.parse = function (value, core) {\n        return {\n            chain: EvmChain_1.EvmChain.create(value.chain, core),\n            logIndex: (0, common_core_1.maybe)(value.logIndex, function (index) { return +index; }),\n            transactionHash: value.transactionHash,\n            transactionIndex: (0, common_core_1.maybe)(value.transactionIndex),\n            data: value.data,\n            topics: value.topics,\n            blockHash: value.blockHash,\n            blockNumber: value.blockNumber,\n            blockTimestamp: value.blockTimestamp,\n            address: EvmAddress_1.EvmAddress.create(value.address, core),\n        };\n    };\n    /**\n     * Compares the log to another log for equality.\n     *\n     * @param value - The value to compare with\n     * @returns true if the logs are equal, otherwise false\n     * @example\n     * ```ts\n     * log.equals(log);\n     * ```\n     */\n    EvmTransactionLog.prototype.equals = function (value) {\n        return (value._value.transactionHash === this._value.transactionHash &&\n            value._value.address.equals(this._value.address) &&\n            value._value.logIndex === this._value.logIndex &&\n            value._value.chain.equals(this._value.chain));\n    };\n    /**\n     * Converts the log to a JSON object.\n     *\n     * @returns the EvmTransactionLog as a JSON object\n     * @example\n     * ```ts\n     * log.toJSON();\n     * ```\n     */\n    EvmTransactionLog.prototype.toJSON = function () {\n        var value = this._value;\n        return __assign(__assign({}, value), { address: value.address.format(), chain: value.chain.format() });\n    };\n    /**\n     * Converts the log to a JSON object.\n     *\n     * @returns the EvmTransactionLog as a JSON object\n     * @example\n     * ```ts\n     * log.format();\n     * ```\n     */\n    EvmTransactionLog.prototype.format = function () {\n        return this.toJSON();\n    };\n    Object.defineProperty(EvmTransactionLog.prototype, \"result\", {\n        /**\n         * Returns the processed Erc20Token.\n         *\n         * @returns the EvmTransactionLog value\n         * @example\n         * ```ts\n         * log.result;\n         *  ```\n         */\n        get: function () {\n            return this._value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransactionLog.prototype, \"transactionHash\", {\n        /**\n         * @returns the transaction hash of the log.\n         *\n         * @example\n         * ```ts\n         * log.transactionHash; // \"0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5\"\n         * ```\n         */\n        get: function () {\n            return this._value.transactionHash;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransactionLog.prototype, \"address\", {\n        /**\n         * Returns the address of the log.\n         *\n         * @example\n         * ```ts\n         * log.address; // EvmAddress\n         * ```\n         */\n        get: function () {\n            return this._value.address;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransactionLog.prototype, \"chain\", {\n        /**\n         * Returns the chain of the log.\n         *\n         * @example\n         * ```ts\n         * log.chain; // EvmChain\n         * ```\n         */\n        get: function () {\n            return this._value.chain;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransactionLog.prototype, \"logIndex\", {\n        /**\n         * @returns the log index of the log.\n         *\n         * @example\n         * ```ts\n         * log.logIndex; // 273\n         * ```\n         */\n        get: function () {\n            return this._value.logIndex;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransactionLog.prototype, \"data\", {\n        /**\n         * @returns the data of the log.\n         *\n         * @example\n         * ```ts\n         * log.data; // \"0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443\"\n         * ```\n         */\n        get: function () {\n            return this._value.data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransactionLog.prototype, \"topics\", {\n        /**\n         * @returns the topics of the log.\n         *\n         * @example\n         * ```ts\n         * log.topic0; // [\"0x0000000000000000000000000000000000000000000000000000000000000001\", \"0x0000000000000000000000000000000000000000000000000000000000000002\"]\n         * ```\n         */\n        get: function () {\n            return this._value.topics;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransactionLog.prototype, \"blockHash\", {\n        /**\n         * @returns the block hash of the log.\n         *\n         * @example\n         * ```ts\n         * log.blockHash; // \"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171\"\n         * ```\n         */\n        get: function () {\n            return this._value.blockHash;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransactionLog.prototype, \"blockNumber\", {\n        /**\n         * @returns the block number of the log.\n         *\n         * @example\n         * ```ts\n         * log.blockNumber; // 12386788\n         * ```\n         */\n        get: function () {\n            return this._value.blockNumber;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmTransactionLog.prototype, \"blockTimestamp\", {\n        /**\n         * @returns the block timestamp of the log.\n         *\n         * @example\n         * ```ts\n         * log.blockTimestamp; // \"2021-05-07T11:08:35.000Z\"\n         * ```\n         */\n        get: function () {\n            return this._value.blockTimestamp;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return EvmTransactionLog;\n}());\nexports.EvmTransactionLog = EvmTransactionLog;\n//# sourceMappingURL=EvmTransactionLog.js.map"]},"metadata":{},"sourceType":"script"}