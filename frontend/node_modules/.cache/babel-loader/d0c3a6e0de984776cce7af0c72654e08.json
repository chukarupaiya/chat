{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParamNameResolver = void 0;\nvar ParamNameResolver = /** @class */function () {\n  function ParamNameResolver(restrictedNames) {\n    this.restrictedNames = restrictedNames;\n    this.usedNames = [];\n  }\n  ParamNameResolver.prototype.iterate = function (object, callback) {\n    var _this = this;\n    // We need to always keep parameters in the same order\n    // because the RowParamNameResolver is order-sensitive.\n    var sortedNames = Object.keys(object).sort(function (a, b) {\n      return a.localeCompare(b);\n    });\n    sortedNames.forEach(function (name) {\n      var safeName = _this.resolve(name);\n      callback(safeName, object[name]);\n    });\n  };\n  ParamNameResolver.prototype.resolve = function (name) {\n    if (this.isUsed(name)) {\n      do {\n        name = \"_\".concat(name);\n      } while (this.isUsed(name));\n    }\n    this.usedNames.push(name);\n    return name;\n  };\n  ParamNameResolver.prototype.isUsed = function (name) {\n    return this.restrictedNames.includes(name) || this.usedNames.includes(name);\n  };\n  return ParamNameResolver;\n}();\nexports.ParamNameResolver = ParamNameResolver;","map":{"version":3,"sources":["../../../src/mapping/logs-processor/ParamNameResolver.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,iBAAA,GAAA,aAAA,YAAA;EAGE,SAAA,iBAAA,CAAoC,eAAyB,EAAA;IAAzB,IAAA,CAAA,eAAe,GAAf,eAAe;IAFlC,IAAA,CAAA,SAAS,GAAa,EAAE;EAEuB;EAEzD,iBAAA,CAAA,SAAA,CAAA,OAAO,GAAd,UAAsB,MAA6B,EAAE,QAAkD,EAAA;IAAvG,IAAA,KAAA,GAAA,IAAA;IACE;IACA;IACA,IAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,EAAA;MAAK,OAAA,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IAAlB,CAAkB,CAAC;IAE1E,WAAW,CAAC,OAAO,CAAC,UAAC,IAAI,EAAA;MACvB,IAAM,QAAQ,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;MACnC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC;EAEM,iBAAA,CAAA,SAAA,CAAA,OAAO,GAAd,UAAe,IAAY,EAAA;IACzB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;MACrB,GAAG;QACD,IAAI,GAAG,GAAA,CAAA,MAAA,CAAI,IAAI,CAAE;OAClB,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IAC3B;IAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,OAAO,IAAI;EACb,CAAC;EAEO,iBAAA,CAAA,SAAA,CAAA,MAAM,GAAd,UAAe,IAAY,EAAA;IACzB,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;EAC7E,CAAC;EACH,OAAA,iBAAC;AAAD,CAAC,EAAA;AA9BY,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParamNameResolver = void 0;\nvar ParamNameResolver = /** @class */ (function () {\n    function ParamNameResolver(restrictedNames) {\n        this.restrictedNames = restrictedNames;\n        this.usedNames = [];\n    }\n    ParamNameResolver.prototype.iterate = function (object, callback) {\n        var _this = this;\n        // We need to always keep parameters in the same order\n        // because the RowParamNameResolver is order-sensitive.\n        var sortedNames = Object.keys(object).sort(function (a, b) { return a.localeCompare(b); });\n        sortedNames.forEach(function (name) {\n            var safeName = _this.resolve(name);\n            callback(safeName, object[name]);\n        });\n    };\n    ParamNameResolver.prototype.resolve = function (name) {\n        if (this.isUsed(name)) {\n            do {\n                name = \"_\".concat(name);\n            } while (this.isUsed(name));\n        }\n        this.usedNames.push(name);\n        return name;\n    };\n    ParamNameResolver.prototype.isUsed = function (name) {\n        return this.restrictedNames.includes(name) || this.usedNames.includes(name);\n    };\n    return ParamNameResolver;\n}());\nexports.ParamNameResolver = ParamNameResolver;\n//# sourceMappingURL=ParamNameResolver.js.map"]},"metadata":{},"sourceType":"script"}