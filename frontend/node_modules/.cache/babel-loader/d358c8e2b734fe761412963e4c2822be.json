{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EvmChain = void 0;\nvar chaindata_1 = require(\"../../data/chaindata\");\nvar EvmChainParser_1 = require(\"./EvmChainParser\");\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar CommonEvmUtilsConfig_1 = require(\"../../config/CommonEvmUtilsConfig\");\n/**\n * The EvmChain class is a MoralisData that references to a EVM chain\n * @category DataType\n */\nvar EvmChain = /** @class */function () {\n  function EvmChain(value, config) {\n    var _this = this;\n    var _a;\n    this.config = config;\n    this._value = EvmChainParser_1.EvmChainParser.parse(value);\n    this._chainlistData = (_a = chaindata_1.chainList.find(function (chainData) {\n      return chainData.chainId === _this.decimal;\n    })) !== null && _a !== void 0 ? _a : null;\n  }\n  Object.defineProperty(EvmChain, \"ETHEREUM\", {\n    /**\n     * Returns ETHEREUM chain\n     *\n     * @example EvmChain.ETHEREUM\n     */\n    get: function () {\n      return EvmChain.create(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"GOERLI\", {\n    /**\n     * Returns GOERLI chain\n     *\n     * @example EvmChain.GOERLI\n     */\n    get: function () {\n      return EvmChain.create(5);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"SEPOLIA\", {\n    /**\n     * Returns SEPOLIA chain\n     *\n     * @example EvmChain.SEPOLIA\n     */\n    get: function () {\n      return EvmChain.create(11155111);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"POLYGON\", {\n    /**\n     * Returns POLYGON chain\n     *\n     * @example EvmChain.POLYGON\n     */\n    get: function () {\n      return EvmChain.create(137);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"MUMBAI\", {\n    /**\n     * Returns MUMBAI chain\n     *\n     * @example EvmChain.MUMBAI\n     */\n    get: function () {\n      return EvmChain.create(80001);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"BSC\", {\n    /**\n     * Returns BSC chain\n     *\n     * @example EvmChain.BSC\n     */\n    get: function () {\n      return EvmChain.create(56);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"BSC_TESTNET\", {\n    /**\n     * Returns BSC_TESTNET chain\n     *\n     * @example EvmChain.BSC_TESTNET\n     */\n    get: function () {\n      return EvmChain.create(97);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"AVALANCHE\", {\n    /**\n     * Returns AVALANCHE chain\n     *\n     * @example EvmChain.AVALANCHE\n     */\n    get: function () {\n      return EvmChain.create(43114);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"FUJI\", {\n    /**\n     * Returns FUJI chain\n     *\n     * @example EvmChain.FUJI\n     */\n    get: function () {\n      return EvmChain.create(43113);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"FANTOM\", {\n    /**\n     * Returns FANTOM chain\n     *\n     * @example EvmChain.FANTOM\n     */\n    get: function () {\n      return EvmChain.create(250);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"CRONOS\", {\n    /**\n     * Returns CRONOS chain\n     *\n     * @example EvmChain.CRONOS\n     */\n    get: function () {\n      return EvmChain.create(25);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"CRONOS_TESTNET\", {\n    /**\n     * Returns CRONOS_TESTNET chain\n     *\n     * @example EvmChain.CRONOS_TESTNET\n     */\n    get: function () {\n      return EvmChain.create(338);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"PALM\", {\n    /**\n     * Returns PALM chain\n     *\n     * @example EvmChain.PALM\n     */\n    get: function () {\n      return EvmChain.create(11297108109);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"ARBITRUM\", {\n    /**\n     * Returns ARBITRUM chain\n     *\n     * @example EvmChain.ARBITRUM\n     */\n    get: function () {\n      return EvmChain.create(42161);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Create a new instance of EvmChain from any valid address input.\n   *\n   * @example\n   * ```ts\n   * const chain = EvmChain.create(1)\n   * const chain = EvmChain.create(\"0x3\")\n   * ```\n   */\n  EvmChain.create = function (chain, core) {\n    if (chain instanceof EvmChain) {\n      return chain;\n    }\n    var c = core || common_core_1.CoreProvider.getDefault();\n    return new EvmChain(chain, c.config);\n  };\n  // Getter to return _chainlistData and throws an error if it is not defined\n  EvmChain.prototype._getChainlistData = function () {\n    if (!this._chainlistData) {\n      return null;\n    }\n    return this._chainlistData;\n  };\n  /**\n   * Compares if 2 chains are equal, based on the chainId\n   *\n   * @param chainA - The first chain to compare\n   * @param chainB - The second chain to compare\n   *\n   * @returns true if the chains are equal, false otherwise\n   * @example\n   * ```ts\n   * EvmChain.equals(\"1\", \"0x1\")\n   * ```\n   */\n  EvmChain.equals = function (chainA, chainB) {\n    return EvmChain.create(chainA)._value === EvmChain.create(chainB)._value;\n  };\n  /**\n   * Compares if the current chain is equal to the provided chain, based on the chainId\n   * @param chain - The chain to compare to\n   * @returns true if the chains are equal, false otherwise\n   * @example\n   * ```ts\n   * chain.equals(EvmChain.ETHEREUM)\n   * ```\n   */\n  EvmChain.prototype.equals = function (chain) {\n    return EvmChain.equals(this, chain);\n  };\n  /**\n   * Formats the chain to the given output; in decimal value or as hex-string.\n   * The default formatting can be set in MoralisConfig\n   * @param _formatStyle - The output format to use\n   * @example chain.format() // 1\n   * @example chain.format('hex') // \"0x1\"\n   * @example chain.format('decimal') // 1\n   *\n   * @returns The formatted chain\n   */\n  EvmChain.prototype.format = function (_formatStyle) {\n    var formatStyle = _formatStyle !== null && _formatStyle !== void 0 ? _formatStyle : this.config.get(CommonEvmUtilsConfig_1.CommonEvmUtilsConfig.formatEvmChainId);\n    if (formatStyle === 'decimal') {\n      return this.decimal;\n    }\n    if (formatStyle === 'hex') {\n      return this.hex;\n    }\n    return (0, common_core_1.assertUnreachable)(formatStyle);\n  };\n  /**\n   * Displays the chain hex-string representation of the chain and also the chain name if not null\n   *\n   * @example chain.display() // \"Ethereum (0x1)\" | \"0x1\"\n   */\n  EvmChain.prototype.display = function () {\n    return this.name ? \"\".concat(this.name, \" (\").concat(this.hex, \")\") : this.hex;\n  };\n  /**\n   * This function returns the explorer url of a block, transaction, account or token.\n   *\n   * @param value - An object containing the `block`, `transaction`, `account` or `erc20` to get the explorer url for.\n   *\n   * @example chain.getExplorerUrl({ block: 'block_here' }) // \"https://etherscan.io/block/block_here\"\n   * @example chain.getExplorerUrl({ transaction: 'some_transaction' }) // \"https://etherscan.io/tx/some_transaction\"\n   * @example chain.getExplorerUrl({ account: 'accoun_here' }) // \"https://etherscan.io/address/accoun_here\"\n   * @example chain.getExplorerUrl({ erc20: 'token_here' }) // \"https://etherscan.io/token/token_here\"\n   */\n  EvmChain.prototype.getExplorerPath = function (value) {\n    var explorer = this.explorer;\n    if (!explorer || explorer.standard !== 'EIP3091') {\n      return null;\n    }\n    var url = explorer.url;\n    // See https://eips.ethereum.org/EIPS/eip-3091 for paths\n    if ('block' in value) {\n      return \"\".concat(url, \"/block/\").concat(value.block);\n    }\n    if ('transaction' in value) {\n      return \"\".concat(url, \"/tx/\").concat(value.transaction);\n    }\n    if ('account' in value) {\n      return \"\".concat(url, \"/address/\").concat(value.account);\n    }\n    if ('erc20' in value) {\n      return \"\".concat(url, \"/token/\").concat(value.erc20);\n    }\n    return null;\n  };\n  Object.defineProperty(EvmChain.prototype, \"decimal\", {\n    /**\n     * Returns the decimal representation of the chain\n     * @example chain.decimal // 1\n     */\n    get: function () {\n      return parseInt(this._value, 16);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain.prototype, \"hex\", {\n    /**\n     * Returns the hex-string representation of the chain\n     * @example chain.hex // \"0x1\"\n     */\n    get: function () {\n      return this._value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain.prototype, \"apiHex\", {\n    /**\n     * Validate and cast to api compatible hex\n     *\n     * @example chain.apiHex // \"0x1\"\n     */\n    get: function () {\n      return this._value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain.prototype, \"name\", {\n    /**\n     * Returns the name of the chain\n     * @example chain.name // \"Ethereum\"\n     */\n    get: function () {\n      var _a;\n      return (_a = this._getChainlistData()) === null || _a === void 0 ? void 0 : _a.name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain.prototype, \"currency\", {\n    /**\n     * Returns the currency of the chain\n     * @returns The cuurrency of the chain or undefined if not found\n     *\n     * @example chain.currency // EvmNativeCurrency\n     */\n    get: function () {\n      var _a;\n      return (_a = this._getChainlistData()) === null || _a === void 0 ? void 0 : _a.nativeCurrency;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain.prototype, \"rpcUrls\", {\n    /**\n     * Returns the rpc Urls of the chain\n     *\n     * @example chain.rpcUrls // [\"https://mainnet.infura.io/v3/<infura-key>\"]\n     */\n    get: function () {\n      var _a;\n      return (_a = this._getChainlistData()) === null || _a === void 0 ? void 0 : _a.rpc;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain.prototype, \"explorer\", {\n    /**\n     * Returns the explorer Urls of the chain\n     *\n     * @example chain.explorerUrls // [\"https://etherscan.io/\"]\n     */\n    get: function () {\n      var _a;\n      var explorers = (_a = this._getChainlistData()) === null || _a === void 0 ? void 0 : _a.explorers;\n      if (!explorers || explorers.length === 0) {\n        return null;\n      }\n      return explorers[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return EvmChain;\n}();\nexports.EvmChain = EvmChain;","map":{"version":3,"sources":["../../../src/dataTypes/EvmChain/EvmChain.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EvmChain = void 0;\nvar chaindata_1 = require(\"../../data/chaindata\");\nvar EvmChainParser_1 = require(\"./EvmChainParser\");\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar CommonEvmUtilsConfig_1 = require(\"../../config/CommonEvmUtilsConfig\");\n/**\n * The EvmChain class is a MoralisData that references to a EVM chain\n * @category DataType\n */\nvar EvmChain = /** @class */ (function () {\n    function EvmChain(value, config) {\n        var _this = this;\n        var _a;\n        this.config = config;\n        this._value = EvmChainParser_1.EvmChainParser.parse(value);\n        this._chainlistData = (_a = chaindata_1.chainList.find(function (chainData) { return chainData.chainId === _this.decimal; })) !== null && _a !== void 0 ? _a : null;\n    }\n    Object.defineProperty(EvmChain, \"ETHEREUM\", {\n        /**\n         * Returns ETHEREUM chain\n         *\n         * @example EvmChain.ETHEREUM\n         */\n        get: function () {\n            return EvmChain.create(1);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"GOERLI\", {\n        /**\n         * Returns GOERLI chain\n         *\n         * @example EvmChain.GOERLI\n         */\n        get: function () {\n            return EvmChain.create(5);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"SEPOLIA\", {\n        /**\n         * Returns SEPOLIA chain\n         *\n         * @example EvmChain.SEPOLIA\n         */\n        get: function () {\n            return EvmChain.create(11155111);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"POLYGON\", {\n        /**\n         * Returns POLYGON chain\n         *\n         * @example EvmChain.POLYGON\n         */\n        get: function () {\n            return EvmChain.create(137);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"MUMBAI\", {\n        /**\n         * Returns MUMBAI chain\n         *\n         * @example EvmChain.MUMBAI\n         */\n        get: function () {\n            return EvmChain.create(80001);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"BSC\", {\n        /**\n         * Returns BSC chain\n         *\n         * @example EvmChain.BSC\n         */\n        get: function () {\n            return EvmChain.create(56);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"BSC_TESTNET\", {\n        /**\n         * Returns BSC_TESTNET chain\n         *\n         * @example EvmChain.BSC_TESTNET\n         */\n        get: function () {\n            return EvmChain.create(97);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"AVALANCHE\", {\n        /**\n         * Returns AVALANCHE chain\n         *\n         * @example EvmChain.AVALANCHE\n         */\n        get: function () {\n            return EvmChain.create(43114);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"FUJI\", {\n        /**\n         * Returns FUJI chain\n         *\n         * @example EvmChain.FUJI\n         */\n        get: function () {\n            return EvmChain.create(43113);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"FANTOM\", {\n        /**\n         * Returns FANTOM chain\n         *\n         * @example EvmChain.FANTOM\n         */\n        get: function () {\n            return EvmChain.create(250);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"CRONOS\", {\n        /**\n         * Returns CRONOS chain\n         *\n         * @example EvmChain.CRONOS\n         */\n        get: function () {\n            return EvmChain.create(25);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"CRONOS_TESTNET\", {\n        /**\n         * Returns CRONOS_TESTNET chain\n         *\n         * @example EvmChain.CRONOS_TESTNET\n         */\n        get: function () {\n            return EvmChain.create(338);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"PALM\", {\n        /**\n         * Returns PALM chain\n         *\n         * @example EvmChain.PALM\n         */\n        get: function () {\n            return EvmChain.create(11297108109);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain, \"ARBITRUM\", {\n        /**\n         * Returns ARBITRUM chain\n         *\n         * @example EvmChain.ARBITRUM\n         */\n        get: function () {\n            return EvmChain.create(42161);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Create a new instance of EvmChain from any valid address input.\n     *\n     * @example\n     * ```ts\n     * const chain = EvmChain.create(1)\n     * const chain = EvmChain.create(\"0x3\")\n     * ```\n     */\n    EvmChain.create = function (chain, core) {\n        if (chain instanceof EvmChain) {\n            return chain;\n        }\n        var c = core || common_core_1.CoreProvider.getDefault();\n        return new EvmChain(chain, c.config);\n    };\n    // Getter to return _chainlistData and throws an error if it is not defined\n    EvmChain.prototype._getChainlistData = function () {\n        if (!this._chainlistData) {\n            return null;\n        }\n        return this._chainlistData;\n    };\n    /**\n     * Compares if 2 chains are equal, based on the chainId\n     *\n     * @param chainA - The first chain to compare\n     * @param chainB - The second chain to compare\n     *\n     * @returns true if the chains are equal, false otherwise\n     * @example\n     * ```ts\n     * EvmChain.equals(\"1\", \"0x1\")\n     * ```\n     */\n    EvmChain.equals = function (chainA, chainB) {\n        return EvmChain.create(chainA)._value === EvmChain.create(chainB)._value;\n    };\n    /**\n     * Compares if the current chain is equal to the provided chain, based on the chainId\n     * @param chain - The chain to compare to\n     * @returns true if the chains are equal, false otherwise\n     * @example\n     * ```ts\n     * chain.equals(EvmChain.ETHEREUM)\n     * ```\n     */\n    EvmChain.prototype.equals = function (chain) {\n        return EvmChain.equals(this, chain);\n    };\n    /**\n     * Formats the chain to the given output; in decimal value or as hex-string.\n     * The default formatting can be set in MoralisConfig\n     * @param _formatStyle - The output format to use\n     * @example chain.format() // 1\n     * @example chain.format('hex') // \"0x1\"\n     * @example chain.format('decimal') // 1\n     *\n     * @returns The formatted chain\n     */\n    EvmChain.prototype.format = function (_formatStyle) {\n        var formatStyle = _formatStyle !== null && _formatStyle !== void 0 ? _formatStyle : this.config.get(CommonEvmUtilsConfig_1.CommonEvmUtilsConfig.formatEvmChainId);\n        if (formatStyle === 'decimal') {\n            return this.decimal;\n        }\n        if (formatStyle === 'hex') {\n            return this.hex;\n        }\n        return (0, common_core_1.assertUnreachable)(formatStyle);\n    };\n    /**\n     * Displays the chain hex-string representation of the chain and also the chain name if not null\n     *\n     * @example chain.display() // \"Ethereum (0x1)\" | \"0x1\"\n     */\n    EvmChain.prototype.display = function () {\n        return this.name ? \"\".concat(this.name, \" (\").concat(this.hex, \")\") : this.hex;\n    };\n    /**\n     * This function returns the explorer url of a block, transaction, account or token.\n     *\n     * @param value - An object containing the `block`, `transaction`, `account` or `erc20` to get the explorer url for.\n     *\n     * @example chain.getExplorerUrl({ block: 'block_here' }) // \"https://etherscan.io/block/block_here\"\n     * @example chain.getExplorerUrl({ transaction: 'some_transaction' }) // \"https://etherscan.io/tx/some_transaction\"\n     * @example chain.getExplorerUrl({ account: 'accoun_here' }) // \"https://etherscan.io/address/accoun_here\"\n     * @example chain.getExplorerUrl({ erc20: 'token_here' }) // \"https://etherscan.io/token/token_here\"\n     */\n    EvmChain.prototype.getExplorerPath = function (value) {\n        var explorer = this.explorer;\n        if (!explorer || explorer.standard !== 'EIP3091') {\n            return null;\n        }\n        var url = explorer.url;\n        // See https://eips.ethereum.org/EIPS/eip-3091 for paths\n        if ('block' in value) {\n            return \"\".concat(url, \"/block/\").concat(value.block);\n        }\n        if ('transaction' in value) {\n            return \"\".concat(url, \"/tx/\").concat(value.transaction);\n        }\n        if ('account' in value) {\n            return \"\".concat(url, \"/address/\").concat(value.account);\n        }\n        if ('erc20' in value) {\n            return \"\".concat(url, \"/token/\").concat(value.erc20);\n        }\n        return null;\n    };\n    Object.defineProperty(EvmChain.prototype, \"decimal\", {\n        /**\n         * Returns the decimal representation of the chain\n         * @example chain.decimal // 1\n         */\n        get: function () {\n            return parseInt(this._value, 16);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain.prototype, \"hex\", {\n        /**\n         * Returns the hex-string representation of the chain\n         * @example chain.hex // \"0x1\"\n         */\n        get: function () {\n            return this._value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain.prototype, \"apiHex\", {\n        /**\n         * Validate and cast to api compatible hex\n         *\n         * @example chain.apiHex // \"0x1\"\n         */\n        get: function () {\n            return this._value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain.prototype, \"name\", {\n        /**\n         * Returns the name of the chain\n         * @example chain.name // \"Ethereum\"\n         */\n        get: function () {\n            var _a;\n            return (_a = this._getChainlistData()) === null || _a === void 0 ? void 0 : _a.name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain.prototype, \"currency\", {\n        /**\n         * Returns the currency of the chain\n         * @returns The cuurrency of the chain or undefined if not found\n         *\n         * @example chain.currency // EvmNativeCurrency\n         */\n        get: function () {\n            var _a;\n            return (_a = this._getChainlistData()) === null || _a === void 0 ? void 0 : _a.nativeCurrency;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain.prototype, \"rpcUrls\", {\n        /**\n         * Returns the rpc Urls of the chain\n         *\n         * @example chain.rpcUrls // [\"https://mainnet.infura.io/v3/<infura-key>\"]\n         */\n        get: function () {\n            var _a;\n            return (_a = this._getChainlistData()) === null || _a === void 0 ? void 0 : _a.rpc;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EvmChain.prototype, \"explorer\", {\n        /**\n         * Returns the explorer Urls of the chain\n         *\n         * @example chain.explorerUrls // [\"https://etherscan.io/\"]\n         */\n        get: function () {\n            var _a;\n            var explorers = (_a = this._getChainlistData()) === null || _a === void 0 ? void 0 : _a.explorers;\n            if (!explorers || explorers.length === 0) {\n                return null;\n            }\n            return explorers[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return EvmChain;\n}());\nexports.EvmChain = EvmChain;\n//# sourceMappingURL=EvmChain.js.map"]},"metadata":{},"sourceType":"script"}