{"ast":null,"code":"const {\n  ethers,\n  BigNumber\n} = require(\"ethers\");\nconst {\n  POSClient,\n  use\n} = require(\"@maticnetwork/maticjs\");\nconst {\n  Web3ClientPlugin\n} = require(\"@maticnetwork/maticjs-ethers\");\nasync function senderc20(token_address, receiver_address, amount1, sender_address) {\n  const contractabi = require(\"../abi/senderc20.json\");\n  const contractaddr = \"0xAAEFCa53e21E85C00B1Db5090fF2EC275b6d4D90\";\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  await provider.send(\"eth_requestAccounts\", []);\n  const signer = provider.getSigner();\n  const contract_signer = new ethers.Contract(contractaddr, contractabi, signer);\n  const owner1 = sender_address;\n  console.log(\"1\");\n  use(Web3ClientPlugin);\n  const posClient = new POSClient();\n  await posClient.init({\n    network: \"testnet\",\n    version: \"mumbai\",\n    parent: {\n      provider: signer,\n      defaultConfig: {\n        from: owner1\n      }\n    },\n    child: {\n      provider: signer,\n      defaultConfig: {\n        from: owner1\n      }\n    }\n  });\n  console.log(\"2\");\n  const erc20Token = posClient.erc20(token_address, true);\n  const input0 = \"\" + amount;\n  const decimals0 = \"18\";\n  const amount = ethers.utils.parseUnits(input0, decimals0);\n  const amounthex = ethers.utils.hexlify(amount);\n  const approveResult = await erc20Token.approve(amounthex, {\n    spenderAddress: contractaddr\n  });\n  console.log(\"3\");\n  const note = \"\";\n  const senderc20 = await contract_signer.sendToken(token_address, receiver_address, amount, \"\");\n}\nexport default senderc20;","map":{"version":3,"names":["ethers","BigNumber","require","POSClient","use","Web3ClientPlugin","senderc20","token_address","receiver_address","amount1","sender_address","contractabi","contractaddr","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","contract_signer","Contract","owner1","console","log","posClient","init","network","version","parent","defaultConfig","from","child","erc20Token","erc20","input0","amount","decimals0","utils","parseUnits","amounthex","hexlify","approveResult","approve","spenderAddress","note","sendToken"],"sources":["/Users/karupaiyachu/Desktop/project/chat-app copy/frontend/src/contracts/frontend-interaction/senderc20.js"],"sourcesContent":["const { ethers, BigNumber } = require(\"ethers\");\nconst { POSClient, use } = require(\"@maticnetwork/maticjs\");\nconst { Web3ClientPlugin } = require(\"@maticnetwork/maticjs-ethers\");\n\n\n\nasync function senderc20(token_address,receiver_address,amount1,sender_address) {\n  const contractabi = require(\"../abi/senderc20.json\");\n  const contractaddr = \"0xAAEFCa53e21E85C00B1Db5090fF2EC275b6d4D90\";\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  await provider.send(\"eth_requestAccounts\", []);\n  const signer = provider.getSigner();\n\n  const contract_signer = new ethers.Contract(\n    contractaddr,\n    contractabi,\n    signer\n  );\n\n  const owner1 = sender_address;\n\n  console.log(\"1\");\n  use(Web3ClientPlugin);\n\n  const posClient = new POSClient();\n  await posClient.init({\n    network: \"testnet\",\n    version: \"mumbai\",\n    parent: {\n      provider: signer,\n      defaultConfig: {\n        from: owner1,\n      },\n    },\n    child: {\n      provider: signer,\n      defaultConfig: {\n        from: owner1,\n      },\n    },\n  });\n  console.log(\"2\");\n\n  \n  const erc20Token = posClient.erc20(token_address, true);\n  const input0 = \"\"+amount;\n  const decimals0 = \"18\";\n  const amount = ethers.utils.parseUnits(input0, decimals0);\n  const amounthex = ethers.utils.hexlify(amount);\n  const approveResult = await erc20Token.approve(amounthex, {\n    spenderAddress: contractaddr,\n  });\n  console.log(\"3\");\n\n  const note = \"\";\n  const senderc20 = await contract_signer.sendToken(token_address,receiver_address,amount,\"\");\n}\n\nexport default senderc20;\n"],"mappings":"AAAA,MAAM;EAAEA,MAAM;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC/C,MAAM;EAAEC,SAAS;EAAEC;AAAI,CAAC,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AAC3D,MAAM;EAAEG;AAAiB,CAAC,GAAGH,OAAO,CAAC,8BAA8B,CAAC;AAIpE,eAAeI,SAAS,CAACC,aAAa,EAACC,gBAAgB,EAACC,OAAO,EAACC,cAAc,EAAE;EAC9E,MAAMC,WAAW,GAAGT,OAAO,CAAC,uBAAuB,CAAC;EACpD,MAAMU,YAAY,GAAG,4CAA4C;EAEjE,MAAMC,QAAQ,GAAG,IAAIb,MAAM,CAACc,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;EACnE,MAAMJ,QAAQ,CAACK,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;EAC9C,MAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAS,EAAE;EAEnC,MAAMC,eAAe,GAAG,IAAIrB,MAAM,CAACsB,QAAQ,CACzCV,YAAY,EACZD,WAAW,EACXQ,MAAM,CACP;EAED,MAAMI,MAAM,GAAGb,cAAc;EAE7Bc,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAChBrB,GAAG,CAACC,gBAAgB,CAAC;EAErB,MAAMqB,SAAS,GAAG,IAAIvB,SAAS,EAAE;EACjC,MAAMuB,SAAS,CAACC,IAAI,CAAC;IACnBC,OAAO,EAAE,SAAS;IAClBC,OAAO,EAAE,QAAQ;IACjBC,MAAM,EAAE;MACNjB,QAAQ,EAAEM,MAAM;MAChBY,aAAa,EAAE;QACbC,IAAI,EAAET;MACR;IACF,CAAC;IACDU,KAAK,EAAE;MACLpB,QAAQ,EAAEM,MAAM;MAChBY,aAAa,EAAE;QACbC,IAAI,EAAET;MACR;IACF;EACF,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAGhB,MAAMS,UAAU,GAAGR,SAAS,CAACS,KAAK,CAAC5B,aAAa,EAAE,IAAI,CAAC;EACvD,MAAM6B,MAAM,GAAG,EAAE,GAACC,MAAM;EACxB,MAAMC,SAAS,GAAG,IAAI;EACtB,MAAMD,MAAM,GAAGrC,MAAM,CAACuC,KAAK,CAACC,UAAU,CAACJ,MAAM,EAAEE,SAAS,CAAC;EACzD,MAAMG,SAAS,GAAGzC,MAAM,CAACuC,KAAK,CAACG,OAAO,CAACL,MAAM,CAAC;EAC9C,MAAMM,aAAa,GAAG,MAAMT,UAAU,CAACU,OAAO,CAACH,SAAS,EAAE;IACxDI,cAAc,EAAEjC;EAClB,CAAC,CAAC;EACFY,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAEhB,MAAMqB,IAAI,GAAG,EAAE;EACf,MAAMxC,SAAS,GAAG,MAAMe,eAAe,CAAC0B,SAAS,CAACxC,aAAa,EAACC,gBAAgB,EAAC6B,MAAM,EAAC,EAAE,CAAC;AAC7F;AAEA,eAAe/B,SAAS"},"metadata":{},"sourceType":"module"}