{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamTriggerOutput = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\n/**\n * The StreamTrigger class is a representation of a stream trigger that is used by the Moralis Stream API\n *\n * @category DataType\n */\nvar StreamTriggerOutput = /** @class */function () {\n  function StreamTriggerOutput(data, core) {\n    this._data = StreamTriggerOutput.parse(data, core);\n  }\n  StreamTriggerOutput.create = function (data, core) {\n    if (data instanceof StreamTriggerOutput) {\n      return data;\n    }\n    var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n    return new StreamTriggerOutput(data, finalCore);\n  };\n  /**\n   * Compares two StreamTriggerOutput data. It checks a deep equality check of both values.\n   * @param valueA - the first StreamTriggerOutputish data to compare\n   * @param valueB - the second StreamTriggerOutputish data to compare\n   * @returns true if the values are equal, false otherwise\n   * @example\n   * ```ts\n   *  StreamTriggerOutput.equals(valueA, valueB);\n   * ```\n   */\n  StreamTriggerOutput.equals = function (valueA, valueB) {\n    var streamTriggerOutputA = StreamTriggerOutput.create(valueA);\n    var streamTriggerOutputB = StreamTriggerOutput.create(valueB);\n    return streamTriggerOutputA.name === streamTriggerOutputB.name && streamTriggerOutputA.value === streamTriggerOutputB.value;\n  };\n  /**\n   * Compares two StreamTriggerOutput arrays. It checks a deep equality check of both values, meaning that all the values have to be on both arrays.\n   * @param valueA - the first StreamTriggerOutputish[] data to compare\n   * @param valueB - the second StreamTriggerOutputish[] data to compare\n   * @returns true if all values are equal, false otherwise\n   * @example\n   * ```ts\n   *  StreamTriggerOutput.arrayEquals(valueA, valueB);\n   * ```\n   */\n  StreamTriggerOutput.arrayEquals = function (valueA, valueB) {\n    if (valueA.length !== valueB.length) {\n      return false;\n    }\n    var triggerOutputsA = valueA.map(function (triggerOutput) {\n      return StreamTriggerOutput.create(triggerOutput);\n    });\n    var triggerOutputsB = valueB.map(function (triggerOutput) {\n      return StreamTriggerOutput.create(triggerOutput);\n    });\n    triggerOutputsA.sort(function (a, b) {\n      return b.name > a.name ? 1 : -1;\n    });\n    triggerOutputsB.sort(function (a, b) {\n      return b.name > a.name ? 1 : -1;\n    });\n    for (var i = 0; i < (triggerOutputsA === null || triggerOutputsA === void 0 ? void 0 : triggerOutputsA.length); i++) {\n      if (!triggerOutputsA[i].equals(triggerOutputsB[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n  /**\n   * Compares an StreamTriggerOutputish data to this StreamTriggerOutput instance.\n   * @param value - the value to compare\n   * @returns true if the value is equal to the current instance, false otherwise\n   * @example\n   * ```ts\n   * streamTriggerOutput.equals(value);\n   * ```\n   */\n  StreamTriggerOutput.prototype.equals = function (value) {\n    return StreamTriggerOutput.equals(this, value);\n  };\n  /**\n   * Converts the StreamTriggerOutput instance to a JSON object.\n   * @returns JSON object of the StreamTriggerOutput instance\n   * @example `streamTriggerOutput.toJSON()`\n   */\n  StreamTriggerOutput.prototype.toJSON = function () {\n    var data = __rest(this._data, []);\n    return __assign({}, data);\n  };\n  /**\n   * Converts the StreamTriggerOutput instance to a JSON object.\n   * @returns JSON object of the StreamTriggerOutput instance\n   * @example `streamTriggerOutput.format()`\n   */\n  StreamTriggerOutput.prototype.format = function () {\n    return this.toJSON();\n  };\n  Object.defineProperty(StreamTriggerOutput.prototype, \"name\", {\n    get: function () {\n      return this._data.name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamTriggerOutput.prototype, \"value\", {\n    get: function () {\n      return this._data.value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StreamTriggerOutput.parse = function (data, _core) {\n    return __assign({}, data);\n  };\n  return StreamTriggerOutput;\n}();\nexports.StreamTriggerOutput = StreamTriggerOutput;","map":{"version":3,"sources":["../../../src/dataTypes/StreamTriggerOutput/StreamTriggerOutput.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamTriggerOutput = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\n/**\n * The StreamTrigger class is a representation of a stream trigger that is used by the Moralis Stream API\n *\n * @category DataType\n */\nvar StreamTriggerOutput = /** @class */ (function () {\n    function StreamTriggerOutput(data, core) {\n        this._data = StreamTriggerOutput.parse(data, core);\n    }\n    StreamTriggerOutput.create = function (data, core) {\n        if (data instanceof StreamTriggerOutput) {\n            return data;\n        }\n        var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n        return new StreamTriggerOutput(data, finalCore);\n    };\n    /**\n     * Compares two StreamTriggerOutput data. It checks a deep equality check of both values.\n     * @param valueA - the first StreamTriggerOutputish data to compare\n     * @param valueB - the second StreamTriggerOutputish data to compare\n     * @returns true if the values are equal, false otherwise\n     * @example\n     * ```ts\n     *  StreamTriggerOutput.equals(valueA, valueB);\n     * ```\n     */\n    StreamTriggerOutput.equals = function (valueA, valueB) {\n        var streamTriggerOutputA = StreamTriggerOutput.create(valueA);\n        var streamTriggerOutputB = StreamTriggerOutput.create(valueB);\n        return (streamTriggerOutputA.name === streamTriggerOutputB.name &&\n            streamTriggerOutputA.value === streamTriggerOutputB.value);\n    };\n    /**\n     * Compares two StreamTriggerOutput arrays. It checks a deep equality check of both values, meaning that all the values have to be on both arrays.\n     * @param valueA - the first StreamTriggerOutputish[] data to compare\n     * @param valueB - the second StreamTriggerOutputish[] data to compare\n     * @returns true if all values are equal, false otherwise\n     * @example\n     * ```ts\n     *  StreamTriggerOutput.arrayEquals(valueA, valueB);\n     * ```\n     */\n    StreamTriggerOutput.arrayEquals = function (valueA, valueB) {\n        if (valueA.length !== valueB.length) {\n            return false;\n        }\n        var triggerOutputsA = valueA.map(function (triggerOutput) { return StreamTriggerOutput.create(triggerOutput); });\n        var triggerOutputsB = valueB.map(function (triggerOutput) { return StreamTriggerOutput.create(triggerOutput); });\n        triggerOutputsA.sort(function (a, b) { return (b.name > a.name ? 1 : -1); });\n        triggerOutputsB.sort(function (a, b) { return (b.name > a.name ? 1 : -1); });\n        for (var i = 0; i < (triggerOutputsA === null || triggerOutputsA === void 0 ? void 0 : triggerOutputsA.length); i++) {\n            if (!triggerOutputsA[i].equals(triggerOutputsB[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Compares an StreamTriggerOutputish data to this StreamTriggerOutput instance.\n     * @param value - the value to compare\n     * @returns true if the value is equal to the current instance, false otherwise\n     * @example\n     * ```ts\n     * streamTriggerOutput.equals(value);\n     * ```\n     */\n    StreamTriggerOutput.prototype.equals = function (value) {\n        return StreamTriggerOutput.equals(this, value);\n    };\n    /**\n     * Converts the StreamTriggerOutput instance to a JSON object.\n     * @returns JSON object of the StreamTriggerOutput instance\n     * @example `streamTriggerOutput.toJSON()`\n     */\n    StreamTriggerOutput.prototype.toJSON = function () {\n        var data = __rest(this._data, []);\n        return __assign({}, data);\n    };\n    /**\n     * Converts the StreamTriggerOutput instance to a JSON object.\n     * @returns JSON object of the StreamTriggerOutput instance\n     * @example `streamTriggerOutput.format()`\n     */\n    StreamTriggerOutput.prototype.format = function () {\n        return this.toJSON();\n    };\n    Object.defineProperty(StreamTriggerOutput.prototype, \"name\", {\n        get: function () {\n            return this._data.name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StreamTriggerOutput.prototype, \"value\", {\n        get: function () {\n            return this._data.value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StreamTriggerOutput.parse = function (data, _core) {\n        return __assign({}, data);\n    };\n    return StreamTriggerOutput;\n}());\nexports.StreamTriggerOutput = StreamTriggerOutput;\n//# sourceMappingURL=StreamTriggerOutput.js.map"]},"metadata":{},"sourceType":"script"}