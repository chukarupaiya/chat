{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.requestChallengeEvmOperation = void 0;\nvar common_evm_utils_1 = require(\"@moralisweb3/common-evm-utils\");\n/** The back channel challenge containing the id to store on the api and the message to be signed by the user */\nexports.requestChallengeEvmOperation = {\n  method: 'POST',\n  name: 'requestChallengeEvm',\n  id: 'requestChallengeEvm',\n  groupName: 'evm',\n  urlPathPattern: '/challenge/request/evm',\n  bodyParamNames: ['domain', 'chainId', 'address', 'statement', 'uri', 'expirationTime', 'notBefore', 'resources', 'timeout'],\n  bodyType: 'properties',\n  getRequestUrlParams: getRequestUrlParams,\n  getRequestBody: getRequestBody,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams() {\n  return {};\n}\nfunction getRequestBody(request, core) {\n  return {\n    domain: request.domain,\n    chainId: common_evm_utils_1.EvmChainResolver.resolve(request.chainId, core).hex,\n    address: common_evm_utils_1.EvmAddress.create(request.address, core).checksum,\n    statement: request.statement,\n    uri: request.uri,\n    expirationTime: request.expirationTime,\n    notBefore: request.notBefore,\n    resources: request.resources,\n    timeout: request.timeout\n  };\n}\nfunction deserializeResponse(jsonResponse) {\n  return jsonResponse;\n}\nfunction serializeRequest(request, core) {\n  return {\n    domain: request.domain,\n    chainId: common_evm_utils_1.EvmChainResolver.resolve(request.chainId, core).decimal.toString(),\n    address: common_evm_utils_1.EvmAddress.create(request.address, core).checksum,\n    statement: request.statement,\n    uri: request.uri,\n    expirationTime: request.expirationTime,\n    notBefore: request.notBefore,\n    resources: request.resources,\n    timeout: request.timeout\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    domain: jsonRequest.domain,\n    chainId: common_evm_utils_1.EvmChainResolver.resolve(jsonRequest.chainId, core),\n    address: common_evm_utils_1.EvmAddress.create(jsonRequest.address, core),\n    statement: jsonRequest.statement,\n    uri: jsonRequest.uri,\n    expirationTime: jsonRequest.expirationTime,\n    notBefore: jsonRequest.notBefore,\n    resources: jsonRequest.resources,\n    timeout: jsonRequest.timeout\n  };\n}","map":{"version":3,"sources":["../../../src/operations/evm/requestChallengeEvmOperation.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;AA6BA;AACa,OAAA,CAAA,4BAA4B,GAKrC;EACF,MAAM,EAAE,MAAM;EACd,IAAI,EAAE,qBAAqB;EAC3B,EAAE,EAAE,qBAAqB;EACzB,SAAS,EAAE,KAAK;EAChB,cAAc,EAAE,wBAAwB;EACxC,cAAc,EAAE,CACd,QAAQ,EACR,SAAS,EACT,SAAS,EACT,WAAW,EACX,KAAK,EACL,gBAAgB,EAChB,WAAW,EACX,WAAW,EACX,SAAS,CACV;EACD,QAAQ,EAAE,YAAY;EAEtB,mBAAmB,EAAA,mBAAA;EACnB,cAAc,EAAA,cAAA;EACd,gBAAgB,EAAA,gBAAA;EAChB,kBAAkB,EAAA,kBAAA;EAClB,mBAAmB,EAAA;CACpB;AAED;AAEA,SAAS,mBAAmB,GAAA;EAC1B,OAAO,CAAA,CAAE;AACX;AAEA,SAAS,cAAc,CAAC,OAAmC,EAAE,IAAU,EAAA;EACrE,OAAO;IACL,MAAM,EAAE,OAAO,CAAC,MAAM;IACtB,OAAO,EAAE,kBAAA,CAAA,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,GAAG;IAC5D,OAAO,EAAE,kBAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,QAAQ;IAC1D,SAAS,EAAE,OAAO,CAAC,SAAS;IAC5B,GAAG,EAAE,OAAO,CAAC,GAAG;IAChB,cAAc,EAAE,OAAO,CAAC,cAAc;IACtC,SAAS,EAAE,OAAO,CAAC,SAAS;IAC5B,SAAS,EAAE,OAAO,CAAC,SAAS;IAC5B,OAAO,EAAE,OAAO,CAAC;GAClB;AACH;AAEA,SAAS,mBAAmB,CAAC,YAA6C,EAAA;EACxE,OAAO,YAAY;AACrB;AAEA,SAAS,gBAAgB,CAAC,OAAmC,EAAE,IAAU,EAAA;EACvE,OAAO;IACL,MAAM,EAAE,OAAO,CAAC,MAAM;IACtB,OAAO,EAAE,kBAAA,CAAA,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE;IAC3E,OAAO,EAAE,kBAAA,CAAA,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,QAAQ;IAC1D,SAAS,EAAE,OAAO,CAAC,SAAS;IAC5B,GAAG,EAAE,OAAO,CAAC,GAAG;IAChB,cAAc,EAAE,OAAO,CAAC,cAAc;IACtC,SAAS,EAAE,OAAO,CAAC,SAAS;IAC5B,SAAS,EAAE,OAAO,CAAC,SAAS;IAC5B,OAAO,EAAE,OAAO,CAAC;GAClB;AACH;AAEA,SAAS,kBAAkB,CAAC,WAA2C,EAAE,IAAU,EAAA;EACjF,OAAO;IACL,MAAM,EAAE,WAAW,CAAC,MAAM;IAC1B,OAAO,EAAE,kBAAA,CAAA,gBAAgB,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC;IAC5D,OAAO,EAAE,kBAAA,CAAA,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC;IACrD,SAAS,EAAE,WAAW,CAAC,SAAS;IAChC,GAAG,EAAE,WAAW,CAAC,GAAG;IACpB,cAAc,EAAE,WAAW,CAAC,cAAc;IAC1C,SAAS,EAAE,WAAW,CAAC,SAAS;IAChC,SAAS,EAAE,WAAW,CAAC,SAAS;IAChC,OAAO,EAAE,WAAW,CAAC;GACtB;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requestChallengeEvmOperation = void 0;\nvar common_evm_utils_1 = require(\"@moralisweb3/common-evm-utils\");\n/** The back channel challenge containing the id to store on the api and the message to be signed by the user */\nexports.requestChallengeEvmOperation = {\n    method: 'POST',\n    name: 'requestChallengeEvm',\n    id: 'requestChallengeEvm',\n    groupName: 'evm',\n    urlPathPattern: '/challenge/request/evm',\n    bodyParamNames: [\n        'domain',\n        'chainId',\n        'address',\n        'statement',\n        'uri',\n        'expirationTime',\n        'notBefore',\n        'resources',\n        'timeout',\n    ],\n    bodyType: 'properties',\n    getRequestUrlParams: getRequestUrlParams,\n    getRequestBody: getRequestBody,\n    serializeRequest: serializeRequest,\n    deserializeRequest: deserializeRequest,\n    deserializeResponse: deserializeResponse,\n};\n// Methods\nfunction getRequestUrlParams() {\n    return {};\n}\nfunction getRequestBody(request, core) {\n    return {\n        domain: request.domain,\n        chainId: common_evm_utils_1.EvmChainResolver.resolve(request.chainId, core).hex,\n        address: common_evm_utils_1.EvmAddress.create(request.address, core).checksum,\n        statement: request.statement,\n        uri: request.uri,\n        expirationTime: request.expirationTime,\n        notBefore: request.notBefore,\n        resources: request.resources,\n        timeout: request.timeout,\n    };\n}\nfunction deserializeResponse(jsonResponse) {\n    return jsonResponse;\n}\nfunction serializeRequest(request, core) {\n    return {\n        domain: request.domain,\n        chainId: common_evm_utils_1.EvmChainResolver.resolve(request.chainId, core).decimal.toString(),\n        address: common_evm_utils_1.EvmAddress.create(request.address, core).checksum,\n        statement: request.statement,\n        uri: request.uri,\n        expirationTime: request.expirationTime,\n        notBefore: request.notBefore,\n        resources: request.resources,\n        timeout: request.timeout,\n    };\n}\nfunction deserializeRequest(jsonRequest, core) {\n    return {\n        domain: jsonRequest.domain,\n        chainId: common_evm_utils_1.EvmChainResolver.resolve(jsonRequest.chainId, core),\n        address: common_evm_utils_1.EvmAddress.create(jsonRequest.address, core),\n        statement: jsonRequest.statement,\n        uri: jsonRequest.uri,\n        expirationTime: jsonRequest.expirationTime,\n        notBefore: jsonRequest.notBefore,\n        resources: jsonRequest.resources,\n        timeout: jsonRequest.timeout,\n    };\n}\n//# sourceMappingURL=requestChallengeEvmOperation.js.map"]},"metadata":{},"sourceType":"script"}