{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AptosAddress = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar AccountAddress_1 = require(\"../../utils/AccountAddress\");\n/**\n * A representation of an address on the Aptos network.\n *\n * Use this class any time you work with an address.\n *\n * @category DataType\n */\nvar AptosAddress = /** @class */function () {\n  function AptosAddress(address) {\n    this.address = address;\n  }\n  /**\n   * Create a new instance of AptosAddress from any valid address input.\n   *\n   * @example `const address = AptosAddress.create(\"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\")`\n   * @throws an error when a passed address is invalid.\n   */\n  AptosAddress.create = function (address) {\n    return address instanceof AptosAddress ? address : new AptosAddress(AptosAddress.parse(address));\n  };\n  AptosAddress.parse = function (address) {\n    try {\n      if (!AccountAddress_1.AccountAddress.isValid(address)) {\n        // Throw and catch locally to resolve the same way if it is invalid and if it cannot be parsed\n        throw new Error();\n      }\n      return address;\n    } catch (e) {\n      throw new common_core_1.CoreError({\n        code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n        message: \"Invalid address provided: \".concat(address),\n        cause: e\n      });\n    }\n  };\n  /**\n   * Formats the address to hex format.\n   * Currently returns a string representing the address.\n   * @example address.format(); // \"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\"\n   */\n  AptosAddress.prototype.format = function () {\n    // TODO: add `format` argument\n    return this.address;\n  };\n  /**\n   * Check the equality between two Aptos addresses\n   * @example `AptosAddress.equals(\"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\", \"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\")`\n   */\n  AptosAddress.equals = function (addressA, addressB) {\n    return AptosAddress.create(addressA).equals(addressB);\n  };\n  /**\n   * Checks the equality of the current address with another Aptos address.\n   * @example `address.equals(\"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\")`\n   * @example `address.equals(AptosAddress.create(\"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\"))`\n   */\n  AptosAddress.prototype.equals = function (address) {\n    return this.address === AptosAddress.create(address).address;\n  };\n  /**\n   * @returns a string representing the address.\n   * @example address.toString(); // \"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\"\n   */\n  AptosAddress.prototype.toString = function () {\n    return this.address;\n  };\n  /**\n   * @returns a string representing the address.\n   * @example address.toJSON(); // \"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\"\n   */\n  AptosAddress.prototype.toJSON = function () {\n    return this.address;\n  };\n  return AptosAddress;\n}();\nexports.AptosAddress = AptosAddress;","map":{"version":3,"sources":["../../../src/dataTypes/AptosAddress/AptosAddress.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;AAWA;;;;;;AAMG;AACH,IAAA,YAAA,GAAA,aAAA,YAAA;EA4BE,SAAA,YAAA,CAAmC,OAAe,EAAA;IAAf,IAAA,CAAA,OAAO,GAAP,OAAO;EAAW;EA3BrD;;;;;AAKG;EACW,YAAA,CAAA,MAAM,GAApB,UAAqB,OAAwB,EAAA;IAC3C,OAAO,OAAO,YAAY,YAAY,GAAG,OAAO,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;EAClG,CAAC;EAEc,YAAA,CAAA,KAAK,GAApB,UAAqB,OAAe,EAAA;IAClC,IAAI;MACF,IAAI,CAAC,gBAAA,CAAA,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACpC;QACA,MAAM,IAAI,KAAK,EAAE;MAClB;MAED,OAAO,OAAO;KACf,CAAC,OAAO,CAAC,EAAE;MACV,MAAM,IAAI,aAAA,CAAA,SAAS,CAAC;QAClB,IAAI,EAAE,aAAA,CAAA,aAAa,CAAC,gBAAgB;QACpC,OAAO,EAAE,4BAAA,CAAA,MAAA,CAA6B,OAAO,CAAE;QAC/C,KAAK,EAAE;OACR,CAAC;IACH;EACH,CAAC;EAID;;;;AAIG;EACI,YAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACE;IACA,OAAO,IAAI,CAAC,OAAO;EACrB,CAAC;EAED;;;AAGG;EACI,YAAA,CAAA,MAAM,GAAb,UAAc,QAAyB,EAAE,QAAyB,EAAA;IAChE,OAAO,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;EACvD,CAAC;EAED;;;;AAIG;EACI,YAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UAAc,OAAwB,EAAA;IACpC,OAAO,IAAI,CAAC,OAAO,KAAK,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO;EAC9D,CAAC;EAED;;;AAGG;EACI,YAAA,CAAA,SAAA,CAAA,QAAQ,GAAf,YAAA;IACE,OAAO,IAAI,CAAC,OAAO;EACrB,CAAC;EAED;;;AAGG;EACI,YAAA,CAAA,SAAA,CAAA,MAAM,GAAb,YAAA;IACE,OAAO,IAAI,CAAC,OAAO;EACrB,CAAC;EACH,OAAA,YAAC;AAAD,CAAC,EAAA;AAxEY,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosAddress = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar AccountAddress_1 = require(\"../../utils/AccountAddress\");\n/**\n * A representation of an address on the Aptos network.\n *\n * Use this class any time you work with an address.\n *\n * @category DataType\n */\nvar AptosAddress = /** @class */ (function () {\n    function AptosAddress(address) {\n        this.address = address;\n    }\n    /**\n     * Create a new instance of AptosAddress from any valid address input.\n     *\n     * @example `const address = AptosAddress.create(\"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\")`\n     * @throws an error when a passed address is invalid.\n     */\n    AptosAddress.create = function (address) {\n        return address instanceof AptosAddress ? address : new AptosAddress(AptosAddress.parse(address));\n    };\n    AptosAddress.parse = function (address) {\n        try {\n            if (!AccountAddress_1.AccountAddress.isValid(address)) {\n                // Throw and catch locally to resolve the same way if it is invalid and if it cannot be parsed\n                throw new Error();\n            }\n            return address;\n        }\n        catch (e) {\n            throw new common_core_1.CoreError({\n                code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n                message: \"Invalid address provided: \".concat(address),\n                cause: e,\n            });\n        }\n    };\n    /**\n     * Formats the address to hex format.\n     * Currently returns a string representing the address.\n     * @example address.format(); // \"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\"\n     */\n    AptosAddress.prototype.format = function () {\n        // TODO: add `format` argument\n        return this.address;\n    };\n    /**\n     * Check the equality between two Aptos addresses\n     * @example `AptosAddress.equals(\"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\", \"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\")`\n     */\n    AptosAddress.equals = function (addressA, addressB) {\n        return AptosAddress.create(addressA).equals(addressB);\n    };\n    /**\n     * Checks the equality of the current address with another Aptos address.\n     * @example `address.equals(\"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\")`\n     * @example `address.equals(AptosAddress.create(\"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\"))`\n     */\n    AptosAddress.prototype.equals = function (address) {\n        return this.address === AptosAddress.create(address).address;\n    };\n    /**\n     * @returns a string representing the address.\n     * @example address.toString(); // \"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\"\n     */\n    AptosAddress.prototype.toString = function () {\n        return this.address;\n    };\n    /**\n     * @returns a string representing the address.\n     * @example address.toJSON(); // \"0xcd30fbbda98b2aed026772c13e5ed90a7f056b589ef9e78cd96415e1af12451c\"\n     */\n    AptosAddress.prototype.toJSON = function () {\n        return this.address;\n    };\n    return AptosAddress;\n}());\nexports.AptosAddress = AptosAddress;\n//# sourceMappingURL=AptosAddress.js.map"]},"metadata":{},"sourceType":"script"}