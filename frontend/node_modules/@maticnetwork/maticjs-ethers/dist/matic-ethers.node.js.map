{"version":3,"sources":["webpack://matic-ethers/webpack/bootstrap","webpack://matic-ethers/./src/ethers/ethjs_contract.ts","webpack://matic-ethers/./src/ethers/ethjs_method.ts","webpack://matic-ethers/./src/ethers/index.ts","webpack://matic-ethers/./src/ethers/web3_client.ts","webpack://matic-ethers/./src/helpers/do_nothing.ts","webpack://matic-ethers/./src/helpers/index.ts","webpack://matic-ethers/./src/helpers/transaction_write_result.ts","webpack://matic-ethers/./src/index.ts","webpack://matic-ethers/./src/utils/eth_block_to_matic_block.ts","webpack://matic-ethers/./src/utils/eth_receipt_to_matic_receipt.ts","webpack://matic-ethers/./src/utils/eth_tx_to_matic_tx.ts","webpack://matic-ethers/./src/utils/index.ts","webpack://matic-ethers/./src/utils/matic_big_number.ts","webpack://matic-ethers/external \"@maticnetwork/maticjs\"","webpack://matic-ethers/external \"ethers\""],"names":[],"mappings":"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","file":"matic-ethers.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import { BaseContract } from \"@maticnetwork/maticjs\";\r\nimport { Contract } from \"ethers\";\r\nimport { ContractMethod } from \"./ethjs_method\";\r\n\r\nexport class EthJsContract extends BaseContract {\r\n\r\n    contract: Contract;\r\n\r\n    constructor(address: string, contract: Contract, logger) {\r\n        super(address, logger);\r\n        this.contract = contract;\r\n    }\r\n\r\n    method(methodName: string, ...args) {\r\n        this.logger.log(\"args method\", arguments);\r\n        return new ContractMethod(\r\n            this.logger, this.contract, methodName, args\r\n        );\r\n    }\r\n}","import { BaseContractMethod, ITransactionRequestConfig, ITransactionWriteResult, Logger } from \"@maticnetwork/maticjs\";\r\nimport { BigNumber, Contract, PopulatedTransaction } from \"ethers\";\r\nimport { TransactionWriteResult } from \"../helpers\";\r\n\r\nexport class ContractMethod extends BaseContractMethod {\r\n    constructor(logger: Logger, private contract_: Contract, private methodName, private args) {\r\n        super(logger);\r\n    }\r\n\r\n    get address() {\r\n        return this.contract_.address;\r\n    }\r\n\r\n    toBigNumber(value) {\r\n        return value ? BigNumber.from(value) : value;\r\n    }\r\n\r\n    private toConfig_(config: ITransactionRequestConfig = {}) {\r\n        const toBigNumber = this.toBigNumber;\r\n        return {\r\n            to: config.to,\r\n            from: config.from,\r\n            gasPrice: toBigNumber(config.gasPrice),\r\n            gasLimit: toBigNumber(config.gasLimit),\r\n            value: toBigNumber(config.value),\r\n            nonce: config.nonce,\r\n            // chainId: config.chainId,\r\n            data: config.data,\r\n            type: config.type,\r\n            maxFeePerGas: toBigNumber(config.maxFeePerGas),\r\n            maxPriorityFeePerGas: toBigNumber(config.maxPriorityFeePerGas),\r\n\r\n        } as PopulatedTransaction;\r\n    }\r\n\r\n    encodeABI() {\r\n        return this.contract_.interface.encodeFunctionData(\r\n            this.methodName, this.args\r\n        );\r\n        // return this.contract_.interface.functions.encode[this.methodName](...this.args);\r\n    }\r\n\r\n    estimateGas(config: ITransactionRequestConfig = {}) {\r\n        return this.contract_.estimateGas[this.methodName](...this.args, this.toConfig_(config)).then(result => {\r\n            return result.toNumber();\r\n        });\r\n    }\r\n\r\n    read(config: ITransactionRequestConfig) {\r\n        this.logger.log(\"sending tx with config\", config);\r\n        return this.getMethod_(config).then(result => {\r\n            if (result._isBigNumber) {\r\n                result = result.toString();\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n\r\n    private getMethod_(config: ITransactionRequestConfig = {}) {\r\n        return this.contract_[this.methodName](...this.args, this.toConfig_(config));\r\n    }\r\n\r\n    write(config: ITransactionRequestConfig) {\r\n        this.logger.log(\"sending tx with config\", config);\r\n        return new TransactionWriteResult(this.getMethod_(config));\r\n    }\r\n}\r\n","export * from \"./web3_client\";\r\nexport * from \"./ethjs_method\";","import { providers, Wallet, utils, Contract, ethers, BigNumber } from \"ethers\";\r\nimport { EthJsContract } from \"./ethjs_contract\";\r\nimport { doNothing } from \"../helpers\";\r\nimport { BaseWeb3Client, IBlockWithTransaction, IError, IJsonRpcRequestPayload, IJsonRpcResponse, ITransactionRequestConfig, ITransactionWriteResult } from \"@maticnetwork/maticjs\";\r\nimport { ethBlockToMaticBlock, ethReceiptToMaticReceipt, ethTxToMaticTx } from \"../utils\";\r\n\r\ntype ETHER_PROVIDER = providers.JsonRpcProvider;\r\ntype ETHER_SIGNER = providers.JsonRpcSigner;\r\n\r\nexport class EtherWeb3Client extends BaseWeb3Client {\r\n    name = 'ETHER';\r\n    provider: ETHER_PROVIDER;\r\n    signer: ETHER_SIGNER;\r\n\r\n    constructor(provider: ETHER_PROVIDER | Wallet, logger) {\r\n        super(logger);\r\n        if ((provider as ETHER_PROVIDER)._isProvider) {\r\n            this.provider = provider as ETHER_PROVIDER;\r\n            this.signer = this.provider.getSigner();\r\n        }\r\n        else {\r\n            this.signer = (provider as any);\r\n            this.provider = ((provider as Wallet).provider) as any;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getBlock(blockHashOrBlockNumber) {\r\n        return this.provider.getBlock(blockHashOrBlockNumber).then(block => {\r\n            return block as any;\r\n        });\r\n    }\r\n\r\n    getBlockWithTransaction(blockHashOrBlockNumber) {\r\n        // return this.provider.getBlockWithTransactions(blockHashOrBlockNumber)\r\n        const provider = this.provider;\r\n        return provider.send(\r\n            'eth_getBlockByNumber',\r\n            [utils.hexValue(blockHashOrBlockNumber), true]\r\n        ).then(rawBlock => {\r\n            const block = provider.formatter.blockWithTransactions(rawBlock);\r\n            block['stateRoot'] = provider.formatter.hash(rawBlock.stateRoot);\r\n            block['transactionsRoot'] = provider.formatter.hash(rawBlock.transactionsRoot);\r\n            block['receiptsRoot'] = provider.formatter.hash(rawBlock.receiptsRoot);\r\n\r\n            block.transactions = block.transactions.map(tx => {\r\n                return ethTxToMaticTx(tx as any);\r\n            }) as any;\r\n\r\n            return ethBlockToMaticBlock(block) as any;\r\n        });\r\n    }\r\n\r\n\r\n    getChainId() {\r\n        return this.signer.getChainId();\r\n    }\r\n\r\n    getBalance(address) {\r\n        return this.provider.getBalance(address).then(balance => {\r\n            return balance.toString();\r\n        });\r\n    }\r\n\r\n    getAccounts() {\r\n        return this.signer.getAddress().then(address => {\r\n            return [address];\r\n        });\r\n    }\r\n\r\n    private ensureTransactionNotNull_(data) {\r\n        if (!data) {\r\n            throw {\r\n                type: 'invalid_transaction' as any,\r\n                message: 'Could not retrieve transaction. Either it is invalid or might be in archive node.'\r\n            } as IError;\r\n        }\r\n    }\r\n\r\n    getTransaction(transactionHash: string) {\r\n        return this.provider.getTransaction(transactionHash).then(result => {\r\n            this.ensureTransactionNotNull_(result);\r\n\r\n            return ethTxToMaticTx(result);\r\n        });\r\n    }\r\n\r\n    getTransactionCount(address: string, blockNumber: any) {\r\n        return this.provider.getTransactionCount(address, blockNumber);\r\n    }\r\n\r\n    getTransactionReceipt(transactionHash: string) {\r\n        return this.provider.getTransactionReceipt(transactionHash).then(result => {\r\n            this.ensureTransactionNotNull_(result);\r\n            \r\n            return ethReceiptToMaticReceipt(result);\r\n        });\r\n    }\r\n\r\n    getGasPrice() {\r\n        return this.provider.getGasPrice().then(result => {\r\n            return result.toString();\r\n        });\r\n    }\r\n\r\n    estimateGas(config) {\r\n        return this.provider.estimateGas(\r\n            this.toEthTxConfig_(config)\r\n        ).then(value => {\r\n            return value.toNumber();\r\n        });\r\n    }\r\n\r\n    encodeParameters(params: any[], types: any[]) {\r\n        return utils.defaultAbiCoder.encode(types, params);\r\n    }\r\n\r\n    toHex(value, returnType) {\r\n\r\n        if (utils.isAddress(value)) {\r\n            return returnType ? 'address' : '0x' + value.toLowerCase().replace(/^0x/i, '');\r\n        }\r\n\r\n        if (typeof value === 'boolean') {\r\n            return returnType ? 'bool' : value ? '0x01' : '0x00';\r\n        }\r\n\r\n        if (Buffer.isBuffer(value)) {\r\n            return '0x' + value.toString('hex');\r\n        }\r\n\r\n        if (typeof value === 'object' && !!value && !BigNumber.isBigNumber(value)) {\r\n            return returnType ? 'string' : utils.hexlify(JSON.stringify(value));\r\n        }\r\n\r\n        // if its a negative number, pass it through numberToHex\r\n        if (typeof value === 'string') {\r\n            if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\r\n                return returnType ? 'int256' : utils.hexlify(value);\r\n            } else if (value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\r\n                return returnType ? 'bytes' : value;\r\n            } else if (!isFinite(value as any)) {\r\n                return returnType ? 'string' : utils.hexlify(value);\r\n            }\r\n        }\r\n\r\n        return returnType ? (value < 0 ? 'int256' : 'uint256') : utils.hexlify(value);\r\n    }\r\n\r\n    hexToNumber(value) {\r\n        return BigNumber.from(value).toNumber();\r\n    }\r\n    \r\n    hexToNumberString(value) {\r\n        return BigNumber.from(value).toString();\r\n    }\r\n\r\n    signTypedData(signer, typedData) {\r\n        const {domain, types, message: value} = typedData;\r\n        if(types.EIP712Domain) {\r\n            delete types.EIP712Domain;\r\n        }\r\n        return this.signer._signTypedData(domain, types, value);\r\n    }\r\n\r\n    etheriumSha3(...value) {\r\n        const types = value.map(val => {\r\n            return this.toHex(val, true);\r\n        });\r\n        return utils.solidityKeccak256(types, value);\r\n    }\r\n\r\n    sendRPCRequest(request: IJsonRpcRequestPayload) {\r\n        return this.provider.send(request.method, request.params).then(result => {\r\n            return {\r\n                result: result\r\n            } as IJsonRpcResponse;\r\n        });\r\n    }\r\n\r\n    private toEthTxConfig_(config: ITransactionRequestConfig) {\r\n        return {\r\n            chainId: config.chainId,\r\n            data: config.data,\r\n            from: config.from as any,\r\n            gasLimit: config.gasLimit,\r\n            gasPrice: config.gasPrice as any,\r\n            nonce: config.nonce,\r\n            to: config.to,\r\n            value: config.value as any\r\n        };\r\n    }\r\n\r\n    write(config: ITransactionRequestConfig) {\r\n        let onTransactionHash = doNothing as any;\r\n        let onTransactionError = doNothing as any;\r\n\r\n        const result = {\r\n            getTransactionHash() {\r\n                return new Promise(res => {\r\n                    onTransactionHash = res;\r\n                });\r\n            }\r\n        } as ITransactionWriteResult;\r\n        this.signer.sendTransaction(\r\n            this.toEthTxConfig_(config)\r\n        ).then(response => {\r\n            onTransactionHash(response.hash);\r\n            result.getReceipt = () => {\r\n                return response.wait().then(receipt => {\r\n                    return ethReceiptToMaticReceipt(receipt);\r\n                });\r\n            };\r\n        }).catch(err => {\r\n            onTransactionError = err;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    read(config: ITransactionRequestConfig) {\r\n        return this.signer.call(\r\n            this.toEthTxConfig_(config)\r\n        );\r\n    }\r\n\r\n    getContract(address: string, abi: any) {\r\n        return new EthJsContract(\r\n            address,\r\n            new Contract(address, abi, this.signer),\r\n            this.logger\r\n        );\r\n    }\r\n\r\n    decodeParameters(hexString, types: any[]) {\r\n        return utils.defaultAbiCoder.decode(types, hexString) as any;\r\n    }\r\n\r\n}\r\n","export const doNothing = () => {\r\n\r\n};","export * from \"./do_nothing\";\r\nexport * from \"./transaction_write_result\";","import { ITransactionWriteResult } from \"@maticnetwork/maticjs\";\r\nimport { providers } from \"ethers\";\r\nimport { ethReceiptToMaticReceipt } from \"../utils\";\r\nimport { doNothing } from \"./do_nothing\";\r\n\r\nexport class TransactionWriteResult implements ITransactionWriteResult {\r\n\r\n    onTransactionHash = doNothing as any;\r\n    onTransactionError = doNothing as any;\r\n\r\n    onTransactionReceipt: Function;\r\n\r\n    getReceipt() {\r\n        return new Promise<providers.TransactionReceipt>((res, rej) => {\r\n            this.onTransactionReceipt = res;\r\n            this.onTransactionError = rej;\r\n        }).then(receipt => {\r\n            return ethReceiptToMaticReceipt(receipt);\r\n        });\r\n    }\r\n\r\n    constructor(private promise: Promise<providers.TransactionResponse>) {\r\n        promise.then(response => {\r\n            this.onTransactionHash(response.hash);\r\n            setTimeout(() => {\r\n                if (this.onTransactionReceipt) {\r\n                    response.wait().then(receipt => {\r\n                        this.onTransactionReceipt(receipt);\r\n                    });\r\n                }\r\n            }, 0);\r\n        }).catch(err => {\r\n            this.onTransactionError(err);\r\n        });\r\n    }\r\n\r\n    getTransactionHash() {\r\n        return new Promise<string>((res, rej) => {\r\n            this.onTransactionHash = res;\r\n            this.onTransactionError = rej;\r\n        });\r\n    }\r\n}\r\n","import { ITransactionRequestConfig, IPlugin, ITransactionResult, Converter, utils } from \"@maticnetwork/maticjs\";\r\nimport { BigNumber, ethers } from \"ethers\";\r\nimport { EtherWeb3Client } from \"./ethers\";\r\nimport { MaticBigNumber } from \"./utils\";\r\n\r\n\r\nexport class Web3ClientPlugin implements IPlugin {\r\n    setup(matic) {\r\n        matic.utils.Web3Client = EtherWeb3Client as any;\r\n        matic.utils.BN = MaticBigNumber;\r\n        matic.utils.isBN = (value) => {\r\n            return BigNumber.isBigNumber(value);\r\n        };\r\n    }\r\n}\r\n\r\nexport * from \"./ethers\";\r\n\r\n/* tslint:disable-next-line */\r\nexport default Web3ClientPlugin;","import { IBlock } from \"@maticnetwork/maticjs\";\r\nimport { providers } from \"ethers\";\r\n\r\nexport const ethBlockToMaticBlock = (block: providers.Block) => {\r\n    block.gasUsed = block.gasUsed.toNumber() as any;\r\n    block.gasLimit = block.gasLimit.toNumber() as any;\r\n    if ((block as any).baseFeePerGas) {\r\n        (block as any).baseFeePerGas = block.baseFeePerGas.toHexString();\r\n    }\r\n    return block as any as IBlock;\r\n};\r\n","import { ITransactionReceipt } from \"@maticnetwork/maticjs\";\r\nimport { providers } from \"ethers\";\r\n\r\nexport const ethReceiptToMaticReceipt = (receipt: providers.TransactionReceipt) => {\r\n\r\n    const maticReceipt: ITransactionReceipt = receipt as any;\r\n\r\n    maticReceipt.gasUsed = receipt.gasUsed.toNumber();\r\n    maticReceipt.cumulativeGasUsed = receipt.cumulativeGasUsed.toNumber();\r\n\r\n    return maticReceipt;\r\n};\r\n","import { IBlock, ITransactionData, ITransactionResult } from \"@maticnetwork/maticjs\";\r\nimport { providers } from \"ethers\";\r\n\r\nexport const ethTxToMaticTx = (tx: providers.TransactionResponse) => {\r\n    const maticTx: ITransactionData = tx as any;\r\n    maticTx.gasPrice = tx.gasPrice.toString();\r\n    maticTx.gas = tx.gasLimit.toNumber();\r\n    (maticTx as any).gasLimit = tx.gasLimit.toNumber();\r\n    maticTx.value = tx.value.toString();\r\n    maticTx.transactionHash = tx.hash;\r\n\r\n    return maticTx;\r\n};\r\n","export * from \"./eth_receipt_to_matic_receipt\";\r\nexport * from \"./eth_block_to_matic_block\";\r\nexport * from \"./eth_tx_to_matic_tx\";\r\nexport * from \"./matic_big_number\";","import { BaseBigNumber } from \"@maticnetwork/maticjs\";\r\nimport { BigNumber, utils } from \"ethers\";\r\n\r\nexport class MaticBigNumber extends BaseBigNumber {\r\n    private bn_: BigNumber;\r\n\r\n    constructor(value) {\r\n        super();\r\n        this.bn_ = BigNumber.from(value);\r\n    }\r\n\r\n    static isBN(value) {\r\n        if (value instanceof MaticBigNumber) {\r\n            return true;\r\n        }\r\n        return BigNumber.isBigNumber(value);\r\n    }\r\n\r\n    toString(base?) {\r\n        if (base === 16) {\r\n            let hex = this.bn_.toHexString();\r\n            hex = utils.hexStripZeros(hex);\r\n            return hex.indexOf('0x') === 0 ? hex.slice(2) : hex;\r\n        }\r\n        return this.bn_.toString();\r\n    }\r\n\r\n    toNumber() {\r\n        return this.bn_.toNumber();\r\n    }\r\n\r\n    toBuffer() {\r\n        return (this as any).bn_.toBuffer();\r\n    }\r\n\r\n    add(value: BaseBigNumber) {\r\n        const bn = this.bn_.add(\r\n            BigNumber.from(value.toString())\r\n        );\r\n        return new MaticBigNumber(bn);\r\n    }\r\n\r\n    sub(value: BaseBigNumber) {\r\n        const bn = this.bn_.sub(\r\n            BigNumber.from(value.toString())\r\n        );\r\n        return new MaticBigNumber(bn);\r\n    }\r\n\r\n    mul(value: BaseBigNumber) {\r\n        const bn = this.bn_.mul(\r\n            BigNumber.from(value.toString())\r\n        );\r\n        return new MaticBigNumber(bn);\r\n    }\r\n\r\n    div(value: BaseBigNumber) {\r\n        const bn = this.bn_.div(\r\n            BigNumber.from(value.toString())\r\n        );\r\n        return new MaticBigNumber(bn);\r\n    }\r\n\r\n    lte(value: BaseBigNumber) {\r\n        return this.bn_.lte(\r\n            BigNumber.from(value.toString())\r\n        );\r\n    }\r\n\r\n    lt(value: BaseBigNumber) {\r\n        return this.bn_.lt(\r\n            BigNumber.from(value.toString())\r\n        );\r\n    }\r\n\r\n    gte(value: BaseBigNumber) {\r\n        return this.bn_.gte(\r\n            BigNumber.from(value.toString())\r\n        );\r\n    }\r\n\r\n    gt(value: BaseBigNumber) {\r\n        return this.bn_.gt(\r\n            BigNumber.from(value.toString())\r\n        );\r\n    }\r\n\r\n    eq(value: BaseBigNumber) {\r\n        return this.bn_.eq(\r\n            BigNumber.from(value.toString())\r\n        );\r\n    }\r\n}","module.exports = require(\"@maticnetwork/maticjs\");","module.exports = require(\"ethers\");"],"sourceRoot":""}