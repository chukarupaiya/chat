"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.readJsonFile = exports.isFile = exports.isDirectory = void 0;
const fs_1 = require("fs");
const misc_1 = require("./misc");
/**
 * Checks whether the given path string resolves to an existing directory, and
 * optionally creates the directory if it doesn't exist.
 *
 * @param pathString - The path string to check.
 * @param createDir - Whether to create the directory if it doesn't exist.
 * @returns Whether the given path is an existing directory.
 */
async function isDirectory(pathString, createDir) {
    try {
        const stats = await fs_1.promises.stat(pathString);
        return stats.isDirectory();
    }
    catch (error) {
        if (error.code === 'ENOENT') {
            if (!createDir) {
                return false;
            }
            try {
                await fs_1.promises.mkdir(pathString);
                return true;
            }
            catch (mkdirError) {
                (0, misc_1.logError)(`Directory '${pathString}' could not be created.`, mkdirError);
                throw mkdirError;
            }
        }
        return false;
    }
}
exports.isDirectory = isDirectory;
/**
 * Checks whether the given path string resolves to an existing file.
 *
 * @param pathString - The path string to check.
 * @returns Whether the given path is an existing file.
 */
async function isFile(pathString) {
    try {
        const stats = await fs_1.promises.stat(pathString);
        return stats.isFile();
    }
    catch (error) {
        return false;
    }
}
exports.isFile = isFile;
/**
 * Reads a `.json` file, parses its contents, and returns them.
 *
 * @param pathString - The path to the JSON file.
 * @returns The parsed contents of the JSON file.
 */
async function readJsonFile(pathString) {
    if (!pathString.endsWith('.json')) {
        throw new Error('The specified file must be a ".json" file.');
    }
    return JSON.parse(await fs_1.promises.readFile(pathString, 'utf8'));
}
exports.readJsonFile = readJsonFile;
//# sourceMappingURL=fs.js.map