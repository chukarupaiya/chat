"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var common_core_1 = __importDefault(require("@moralisweb3/common-core"));
var config_1 = require("../config");
var OperationRequestBuilder_1 = require("./OperationRequestBuilder");
var operation = {
    name: 'test',
    id: 'test',
    groupName: 'test',
    method: 'POST',
    urlPathParamNames: ['userId'],
    urlSearchParamNames: ['traceId', 'flag'],
    urlPathPattern: '/api/{userId}',
    bodyParamNames: ['password'],
    bodyType: 'properties',
    getRequestUrlParams: function (request) {
        return {
            userId: String(request.userId),
            trace_id: String(request.traceId),
            extraSearchParam: '100',
            flag: request.flag,
        };
    },
    getRequestBody: function (request) {
        return {
            password: request.password,
            extraBodyParam: 900,
        };
    },
    deserializeResponse: function () {
        throw new Error('Not implemented');
    },
    serializeRequest: function () {
        throw new Error('Not implemented');
    },
    deserializeRequest: function () {
        throw new Error('Not implemented');
    },
};
describe('OperationRequestBuilder', function () {
    var API_KEY = '0000000000000000000000000000000000000000000000000000000000000123';
    var core;
    var builder;
    beforeEach(function () {
        core = common_core_1.default.create();
        core.config.registerKey(config_1.ApiUtilsConfig.apiKey);
        core.config.set(config_1.ApiUtilsConfig.apiKey, API_KEY);
        builder = new OperationRequestBuilder_1.OperationRequestBuilder(operation, core);
    });
    describe('prepareUrl()', function () {
        it('returns correct values', function () {
            var _a = builder.prepareUrl('https://localhost', {
                userId: 100,
                traceId: 200,
                password: 'foo',
                flag: true,
            }), url = _a.url, urlSearchParams = _a.urlSearchParams;
            expect(url).toBe('https://localhost/api/100');
            expect(Object.keys(urlSearchParams).length).toBe(3);
            expect(urlSearchParams['trace_id']).toBe('200');
            expect(urlSearchParams['extraSearchParam']).toBe('100');
            expect(urlSearchParams['flag']).toBe(true);
        });
        it('keeps false value', function () {
            var urlSearchParams = builder.prepareUrl('https://localhost', {
                userId: 1,
                traceId: 1,
                password: '1',
                flag: false,
            }).urlSearchParams;
            expect(urlSearchParams['flag']).toBe(false);
        });
    });
    describe('prepareBody()', function () {
        it('returns properties body', function () {
            var body = builder.prepareBody({
                userId: 100,
                traceId: 200,
                password: 'foo',
                flag: true,
            });
            expect(Object.keys(body).length).toBe(2);
            expect(body['password']).toBe('foo');
            expect(body['extraBodyParam']).toBe(900);
        });
    });
    describe('prepareHeaders()', function () {
        it('returns headers', function () {
            var headers = builder.prepareHeaders();
            expect(headers['x-api-key']).toBe(API_KEY);
            expect(headers['x-moralis-platform']).toBe('JS SDK');
            expect(headers['x-moralis-platform-version']).toBeDefined();
            expect(headers['x-moralis-build-target']).toBe('node');
        });
    });
});
//# sourceMappingURL=OperationRequestBuilder.test.js.map