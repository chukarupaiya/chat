import Core from '@moralisweb3/common-core';
export interface VerifyEvmOptions {
    networkType?: 'evm';
    /**
     * @deprecated use networkType instead
     */
    network?: 'evm';
    message: string;
    signature: string;
}
export interface VerifySolOptions {
    networkType: 'solana';
    /**
     * @deprecated use networkType instead
     */
    network?: 'solana';
    message: string;
    signature: string;
}
export interface VerifyAptosOptions {
    networkType: 'aptos';
    message: string;
    signature: string;
}
export type VerifyOptions = VerifyEvmOptions | VerifySolOptions | VerifyAptosOptions;
export declare const makeVerify: (core: Core) => (options: VerifyOptions) => Promise<import("@moralisweb3/common-core").ResponseAdapter<{
    chain: import("@moralisweb3/common-evm-utils").EvmChain;
    address: import("@moralisweb3/common-evm-utils").EvmAddress;
    expirationTime: Date | undefined;
    notBefore: Date | undefined;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    expirationTime?: string | undefined;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
    chainId: "1" | "5" | "25" | "56" | "97" | "137" | "250" | "338" | "1337" | "43113" | "43114" | "80001" | "11155111";
    address: string;
}> | import("@moralisweb3/common-core").ResponseAdapter<{
    solNetwork: import("@moralisweb3/common-sol-utils").SolNetwork;
    address: import("@moralisweb3/common-sol-utils").SolAddress;
    expirationTime: Date | undefined;
    notBefore: Date | undefined;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    expirationTime?: string | undefined;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
    network: "mainnet" | "devnet" | "testnet";
    address: string;
}> | import("@moralisweb3/common-core").ResponseAdapter<{
    chain: import("@moralisweb3/common-aptos-utils").AptosNetwork;
    address: import("@moralisweb3/common-aptos-utils").AptosAddress;
    expirationTime: Date | undefined;
    notBefore: Date | undefined;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
    publicKey: string;
}, {
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    expirationTime?: string | undefined;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
    chainId: "1" | "2" | "3";
    address: string;
    publicKey: string;
}>>;
//# sourceMappingURL=verify.d.ts.map