import { MoralisData, MoralisDataFormatted, BigNumberish, BigNumber } from '@moralisweb3/common-core';
/**
 * Type containing valid Aptos native units
 */
export type AptosNativeUnit = 'aptos' | 'octas' | number;
/**
 * Valid input for a new AptosNative instance.
 * This can be an existing {@link AptosNative} or a valid {@link @moralisweb3/common-core!BigNumberish} type
 */
export type AptosNativeish = AptosNative | BigNumberish;
/**
 * The AptosNative class is a MoralisData that references to the value of Aptos native currency APT
 *
 * @category DataType
 */
export declare class AptosNative implements MoralisData {
    private readonly rawValue;
    /**
     * Create a new instance of AptosNative from any valid {@link AptosNativeish} value.
     * @param value - the value to create the AptosNative from
     * @param unit - the unit of the value (optional), defaults to `aptos`
     * @returns a new instance of AptosNative
     * @example
     * ```ts
     * const native = AptosNative.create(2, 'octas');
     * const native = AptosNative.create(2);
     *```
     */
    static create(value: AptosNativeish, unit?: AptosNativeUnit): AptosNative;
    private static parse;
    private constructor();
    /**
     * Compares two AptosNativeish values.
     * @param valueA - the first value to compare
     * @param valueB - the second value to compare
     * @returns true if the values are equal
     * @example
     * ```ts
     * AptosNative.equals(AptosNative.create(1), AptosNative.create(1)); // true
     * ```
     */
    static equals(valueA: AptosNativeish, valueB: AptosNativeish): boolean;
    /**
     * Compares AptosNative with current instance.
     * @param value - the value to compare with
     * @returns true if the values are equal
     * @example
     * ```ts
     * const native = AptosNative.create(2, 'octas');
     * native.equals(AptosNative.create(1)); // false
     * ```
     */
    equals(value: AptosNative): boolean;
    /**
     * Converts the AptosNative to a string.
     * @returns the value of the AptosNative as a string
     * @example `native.format()`
     */
    format(): MoralisDataFormatted;
    /**
     * Converts the AptosNative to a string.
     * @returns the value of the AptosNative as a string
     * @example `native.toJSON()`
     */
    toJSON(): string;
    /**
     * Converts the AptosNative to a string.
     * @returns the value of the AptosNative as a string
     * @example `native.toString()`
     */
    toString(): string;
    /**
     * @returns the value of the AptosNative as a BigNumber
     * @example `native.value`
     */
    get value(): BigNumber;
    /**
     * Converts the AptosNative to an aptos unit.
     * @returns the value of the AptosNative as an aptos string
     * @example `native.aptos`
     */
    get aptos(): string;
    /**
     * Converts the AptosNative to a string.
     * @returns the value of the AptosNative as a string
     * @example `native.lamports`
     */
    get octas(): string;
}
//# sourceMappingURL=AptosNative.d.ts.map