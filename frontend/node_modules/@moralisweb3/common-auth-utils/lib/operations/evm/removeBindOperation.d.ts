import { Camelize, Core, Operation, ResponseAdapter } from '@moralisweb3/common-core';
import { EvmAddressish } from '@moralisweb3/common-evm-utils';
import { operations } from '../openapi';
type OperationId = 'removeBind';
type BodyParams = operations[OperationId]['requestBody']['content']['application/json'];
type RequestParams = BodyParams;
type SuccessResponse = operations[OperationId]['responses']['201']['content']['application/json'];
export interface RemoveBindRequest extends Camelize<Omit<RequestParams, 'address' | 'publicKey'>> {
    address: EvmAddressish;
    publicKey?: string;
}
export type RemoveBindJSONRequest = ReturnType<typeof serializeRequest>;
export type RemoveBindJSONResponse = SuccessResponse;
export type RemoveBindResponse = ReturnType<typeof deserializeResponse>;
export interface RemoveBindResponseAdapter extends ResponseAdapter<RemoveBindResponse, RemoveBindJSONResponse> {
}
export declare const removeBindOperation: Operation<RemoveBindRequest, RemoveBindJSONRequest, RemoveBindResponse, RemoveBindJSONResponse>;
declare function deserializeResponse(jsonResponse: RemoveBindJSONResponse): {
    message: string;
};
declare function serializeRequest(request: RemoveBindRequest, core: Core): {
    blockchainType: Camelize<"evm" | "solana" | "aptos">;
    address: string;
    profileId: string;
    publicKey: string | undefined;
};
export {};
//# sourceMappingURL=removeBindOperation.d.ts.map