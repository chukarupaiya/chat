import { Camelize, Operation, ResponseAdapter } from '@moralisweb3/common-core';
import { operations } from '../openapi';
type OperationId = 'verifyRequestBind';
type BodyParams = operations[OperationId]['requestBody']['content']['application/json'];
type RequestParams = BodyParams;
type SuccessResponse = operations[OperationId]['responses']['201']['content']['application/json'];
export interface VerifyRequestBindRequest extends Camelize<RequestParams> {
}
export type VerifyRequestBindJSONRequest = ReturnType<typeof serializeRequest>;
export type VerifyRequestBindJSONResponse = SuccessResponse;
export type VerifyRequestBindResponse = ReturnType<typeof deserializeResponse>;
export interface VerifyRequestBindResponseAdapter extends ResponseAdapter<VerifyRequestBindResponse, VerifyRequestBindJSONResponse> {
}
export declare const verifyRequestBindOperation: Operation<VerifyRequestBindRequest, VerifyRequestBindJSONRequest, VerifyRequestBindResponse, VerifyRequestBindJSONResponse>;
declare function deserializeResponse(jsonResponse: VerifyRequestBindJSONResponse): {
    profileId: string;
};
declare function serializeRequest(request: VerifyRequestBindRequest): {
    verifications: Camelize<{
        message: string;
        signature: string;
    }>[];
};
export {};
//# sourceMappingURL=verifyRequestBindOperation.d.ts.map