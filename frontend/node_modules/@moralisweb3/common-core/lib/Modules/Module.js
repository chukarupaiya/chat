"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Module = void 0;
var LoggerController_1 = require("../controllers/LoggerController");
var ModuleType_1 = require("./ModuleType");
/**
 * The base class of every Moralis class that gets registered as a module via MoralisModules
 * It should always be created with:
 * - `name`: name of the module (should be unique)
 * - `core`: the Core instance
 * - `type`: (optional) CoreModuleType, defaults to CoreModuleType.DEFAULT
 *
 * When creating an api, or network module, you should use the ApiModule or NetworkModule
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
var Module = /** @class */ (function () {
    function Module(name, core, type) {
        if (type === void 0) { type = ModuleType_1.ModuleType.DEFAULT; }
        this.name = name;
        this.core = core;
        this.type = type;
        this.logger = LoggerController_1.LoggerController.create(this.name, this.core);
    }
    /**
     * Any cleanup that needs to be done for removing this module.
     * It also should remove the module via `this.core.modules.remove(this.name)`
     */
    Module.prototype.cleanUp = function () {
        this.core.modules.remove(this.name);
    };
    return Module;
}());
exports.Module = Module;
//# sourceMappingURL=Module.js.map