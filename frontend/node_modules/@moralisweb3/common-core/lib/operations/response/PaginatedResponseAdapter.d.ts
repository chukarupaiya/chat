import { PaginatedJSONResponse } from '../PaginatedOperation';
import { Pagination } from './Pagination';
export declare class PaginatedResponseAdapter<Result, JSONResult> {
    readonly pagination: Pagination;
    private readonly jsonResponse;
    private readonly getResult;
    private readonly nextHandler;
    constructor(pagination: Pagination, jsonResponse: PaginatedJSONResponse<JSONResult>, getResult: () => Result, nextHandler: (() => Promise<PaginatedResponseAdapter<Result, JSONResult>>) | undefined);
    get result(): Result;
    get raw(): PaginatedJSONResponse<JSONResult>;
    toJSON(): PaginatedJSONResponse<JSONResult>;
    readonly hasNext: () => boolean;
    next: () => Promise<PaginatedResponseAdapter<Result, JSONResult>>;
}
//# sourceMappingURL=PaginatedResponseAdapter.d.ts.map