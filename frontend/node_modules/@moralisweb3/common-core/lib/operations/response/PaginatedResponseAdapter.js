"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaginatedResponseAdapter = void 0;
var Error_1 = require("../../Error");
var PaginatedResponseAdapter = /** @class */ (function () {
    function PaginatedResponseAdapter(pagination, jsonResponse, getResult, nextHandler) {
        var _this = this;
        this.pagination = pagination;
        this.jsonResponse = jsonResponse;
        this.getResult = getResult;
        this.nextHandler = nextHandler;
        this.hasNext = function () { return !!_this.nextHandler; };
        this.next = function () {
            if (!_this.nextHandler) {
                throw new Error_1.MoralisError({
                    code: Error_1.CoreErrorCode.NO_DATA_FOUND,
                    message: 'Page limit exceeded! Before call this method check an existence of the next page by .hasNext() method.',
                });
            }
            return _this.nextHandler();
        };
    }
    Object.defineProperty(PaginatedResponseAdapter.prototype, "result", {
        get: function () {
            return this.getResult();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PaginatedResponseAdapter.prototype, "raw", {
        get: function () {
            return this.jsonResponse;
        },
        enumerable: false,
        configurable: true
    });
    PaginatedResponseAdapter.prototype.toJSON = function () {
        return this.jsonResponse;
    };
    return PaginatedResponseAdapter;
}());
exports.PaginatedResponseAdapter = PaginatedResponseAdapter;
//# sourceMappingURL=PaginatedResponseAdapter.js.map