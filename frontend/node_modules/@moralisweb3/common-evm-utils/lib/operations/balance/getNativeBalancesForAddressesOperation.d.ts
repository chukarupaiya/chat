import { Core, Camelize, Operation, ResponseAdapter } from '@moralisweb3/common-core';
import { EvmChainish, EvmAddress, EvmAddressish, EvmNative } from '../../dataTypes';
import { operations } from '../openapi';
type OperationId = 'getNativeBalancesForAddresses';
type QueryParams = operations[OperationId]['parameters']['query'];
type RequestParams = QueryParams;
type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface GetNativeBalancesForAddressesRequest extends Camelize<Omit<RequestParams, 'chain' | 'wallet_addresses'>> {
    chain?: EvmChainish;
    walletAddresses: EvmAddressish[];
}
export type GetNativeBalancesForAddressesJSONRequest = ReturnType<typeof serializeRequest>;
export type GetNativeBalancesForAddressesJSONResponse = SuccessResponse;
export type GetNativeBalancesForAddressesResponse = ReturnType<typeof deserializeResponse>;
export interface GetNativeBalancesForAddressesResponseAdapter extends ResponseAdapter<GetNativeBalancesForAddressesResponse, GetNativeBalancesForAddressesJSONResponse> {
}
/** Get the native balances for a set of specific addresses */
export declare const getNativeBalancesForAddressesOperation: Operation<GetNativeBalancesForAddressesRequest, GetNativeBalancesForAddressesJSONRequest, GetNativeBalancesForAddressesResponse, GetNativeBalancesForAddressesJSONResponse>;
declare function deserializeResponse(jsonResponse: GetNativeBalancesForAddressesJSONResponse, request: GetNativeBalancesForAddressesRequest, core: Core): {
    chain: import("../../dataTypes").EvmChain;
    blockNumber: string;
    blockTimestamp: string;
    totalBalance: EvmNative;
    walletBalances: {
        address: EvmAddress;
        balance: EvmNative;
    }[];
}[];
declare function serializeRequest(request: GetNativeBalancesForAddressesRequest, core: Core): {
    chain: "0x1" | "0x5" | "0xaa36a7" | "0x89" | "0x13881" | "0x38" | "0x61" | "0xa86a" | "0xa869" | "0xfa" | "0x19" | "0x152" | "0x2a15c308d" | "0xa4B1";
    providerUrl: string | undefined;
    toBlock: number | undefined;
    walletAddresses: string[];
};
export {};
//# sourceMappingURL=getNativeBalancesForAddressesOperation.d.ts.map