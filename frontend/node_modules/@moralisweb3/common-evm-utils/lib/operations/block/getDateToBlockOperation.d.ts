import { Core, Camelize, Operation, DateInput, ResponseAdapter } from '@moralisweb3/common-core';
import { EvmBlockDate, EvmChainish } from '../../dataTypes';
import { operations } from '../openapi';
type OperationId = 'getDateToBlock';
type QueryParams = operations[OperationId]['parameters']['query'];
type RequestParams = QueryParams;
type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface GetDateToBlockRequest extends Camelize<Omit<RequestParams, 'chain' | 'date'>> {
    chain?: EvmChainish;
    date: DateInput;
}
export type GetDateToBlockJSONRequest = ReturnType<typeof serializeRequest>;
export type GetDateToBlockJSONResponse = SuccessResponse;
export type GetDateToBlockResponse = ReturnType<typeof deserializeResponse>;
export interface GetDateToBlockResponseAdapter extends ResponseAdapter<GetDateToBlockResponse, GetDateToBlockJSONResponse> {
}
/** Get the closest block given the date. */
export declare const getDateToBlockOperation: Operation<GetDateToBlockRequest, GetDateToBlockJSONRequest, GetDateToBlockResponse, GetDateToBlockJSONResponse>;
declare function deserializeResponse(jsonResponse: GetDateToBlockJSONResponse): EvmBlockDate;
declare function serializeRequest(request: GetDateToBlockRequest, core: Core): {
    chain: "0x1" | "0x5" | "0xaa36a7" | "0x89" | "0x13881" | "0x38" | "0x61" | "0xa86a" | "0xa869" | "0xfa" | "0x19" | "0x152" | "0x2a15c308d" | "0xa4B1";
    date: string;
};
export {};
//# sourceMappingURL=getDateToBlockOperation.d.ts.map