import { Core, Camelize, Operation, DateInput, ResponseAdapter } from '@moralisweb3/common-core';
import { EvmChainish, EvmAddress, EvmAddressish, Erc20Token } from '../../dataTypes';
import { operations } from '../openapi';
type OperationId = 'getPairAddress';
type PathParams = operations[OperationId]['parameters']['path'];
type QueryParams = operations[OperationId]['parameters']['query'];
type RequestParams = PathParams & QueryParams;
type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface GetPairAddressRequest extends Camelize<Omit<RequestParams, 'chain' | 'token0_address' | 'token1_address' | 'to_date'>> {
    chain?: EvmChainish;
    token0Address: EvmAddressish;
    token1Address: EvmAddressish;
    toDate?: DateInput;
}
export type GetPairAddressJSONRequest = ReturnType<typeof serializeRequest>;
export type GetPairAddressJSONResponse = SuccessResponse;
export type GetPairAddressResponse = ReturnType<typeof deserializeResponse>;
export interface GetPairAddressResponseAdapter extends ResponseAdapter<GetPairAddressResponse, GetPairAddressJSONResponse> {
}
/**
 * Fetch the pair data of the provided token0+token1 combination.
 * The token0 and token1 options are interchangable (ie. there is no different outcome in "token0=WETH and token1=USDT" or "token0=USDT and token1=WETH")
 */
export declare const getPairAddressOperation: Operation<GetPairAddressRequest, GetPairAddressJSONRequest, GetPairAddressResponse, GetPairAddressJSONResponse>;
declare function deserializeResponse(jsonResponse: GetPairAddressJSONResponse, request: GetPairAddressRequest, core: Core): {
    token0: {
        token: Erc20Token;
        blockNumber: string | undefined;
        validated: number | undefined;
        createdAt: Date | undefined;
    };
    token1: {
        token: Erc20Token;
        blockNumber: string | undefined;
        validated: number | undefined;
        createdAt: Date | undefined;
    };
    pairAddress: EvmAddress | undefined;
};
declare function serializeRequest(request: GetPairAddressRequest, core: Core): {
    chain: "0x1" | "0x5" | "0xaa36a7" | "0x89" | "0x13881" | "0x38" | "0x61" | "0xa86a" | "0xa869" | "0xfa" | "0x19" | "0x152" | "0x2a15c308d" | "0xa4B1";
    toBlock: string | undefined;
    toDate: string | undefined;
    exchange: Camelize<"uniswapv2" | "uniswapv3" | "sushiswapv2" | "pancakeswapv2" | "pancakeswapv1" | "quickswap">;
    token0Address: string;
    token1Address: string;
};
export {};
//# sourceMappingURL=getPairAddressOperation.d.ts.map