import { Core, Camelize, PaginatedOperation, DateInput, PaginatedResponseAdapter } from '@moralisweb3/common-core';
import { EvmChainish, EvmAddressish, EvmNftTrade } from '../../dataTypes';
import { operations } from '../openapi';
type OperationId = 'getNFTTrades';
type PathParams = operations[OperationId]['parameters']['path'];
type QueryParams = operations[OperationId]['parameters']['query'];
type RequestParams = PathParams & QueryParams;
type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface GetNFTTradesRequest extends Camelize<Omit<RequestParams, 'chain' | 'address' | 'from_date' | 'to_date'>> {
    chain?: EvmChainish;
    address: EvmAddressish;
    fromDate?: DateInput;
    toDate?: DateInput;
}
export type GetNFTTradesJSONRequest = ReturnType<typeof serializeRequest>;
export type GetNFTTradesJSONResponse = SuccessResponse;
export type GetNFTTradesResponse = ReturnType<typeof deserializeResponse>;
export interface GetNFTTradesResponseAdapter extends PaginatedResponseAdapter<GetNFTTradesResponse, GetNFTTradesJSONResponse['result']> {
}
/** Get trades of NFTs for a given contract and marketplace. */
export declare const getNFTTradesOperation: PaginatedOperation<GetNFTTradesRequest, GetNFTTradesJSONRequest, GetNFTTradesResponse, GetNFTTradesJSONResponse['result']>;
declare function deserializeResponse(jsonResponse: GetNFTTradesJSONResponse, request: GetNFTTradesRequest, core: Core): EvmNftTrade[];
declare function serializeRequest(request: GetNFTTradesRequest, core: Core): {
    chain: "0x1" | "0x5" | "0xaa36a7" | "0x89" | "0x13881" | "0x38" | "0x61" | "0xa86a" | "0xa869" | "0xfa" | "0x19" | "0x152" | "0x2a15c308d" | "0xa4B1";
    fromBlock: number | undefined;
    toBlock: string | undefined;
    fromDate: DateInput | undefined;
    toDate: DateInput | undefined;
    marketplace: "opensea" | undefined;
    cursor: string | undefined;
    limit: number | undefined;
    address: string;
    disableTotal: boolean | undefined;
};
export {};
//# sourceMappingURL=getNFTTradesOperation.d.ts.map