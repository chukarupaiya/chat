import { Core, Camelize, PaginatedOperation, DateInput, PaginatedResponseAdapter } from '@moralisweb3/common-core';
import { EvmChainish, EvmAddressish, Erc20Transfer } from '../../dataTypes';
import { operations } from '../openapi';
type OperationId = 'getWalletTokenTransfers';
type PathParams = operations[OperationId]['parameters']['path'];
type QueryParams = operations[OperationId]['parameters']['query'];
type RequestParams = PathParams & QueryParams;
type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface GetWalletTokenTransfersRequest extends Camelize<Omit<RequestParams, 'chain' | 'address' | 'from_date' | 'to_date'>> {
    chain?: EvmChainish;
    address: EvmAddressish;
    fromDate?: DateInput;
    toDate?: DateInput;
}
export type GetWalletTokenTransfersJSONRequest = ReturnType<typeof serializeRequest>;
export type GetWalletTokenTransfersJSONResponse = SuccessResponse;
export type GetWalletTokenTransfersResponse = ReturnType<typeof deserializeResponse>;
export interface GetWalletTokenTransfersResponseAdapter extends PaginatedResponseAdapter<GetWalletTokenTransfersResponse, GetWalletTokenTransfersJSONResponse['result']> {
}
/** Get ERC20 token transactions ordered by block number in descending order. */
export declare const getWalletTokenTransfersOperation: PaginatedOperation<GetWalletTokenTransfersRequest, GetWalletTokenTransfersJSONRequest, GetWalletTokenTransfersResponse, GetWalletTokenTransfersJSONResponse['result']>;
declare function deserializeResponse(jsonResponse: GetWalletTokenTransfersJSONResponse, request: GetWalletTokenTransfersRequest, core: Core): Erc20Transfer[];
declare function serializeRequest(request: GetWalletTokenTransfersRequest, core: Core): {
    chain: "0x1" | "0x5" | "0xaa36a7" | "0x89" | "0x13881" | "0x38" | "0x61" | "0xa86a" | "0xa869" | "0xfa" | "0x19" | "0x152" | "0x2a15c308d" | "0xa4B1";
    address: string;
    fromBlock: number | undefined;
    toBlock: number | undefined;
    fromDate: DateInput | undefined;
    toDate: DateInput | undefined;
    limit: number | undefined;
    cursor: string | undefined;
    disableTotal: boolean | undefined;
};
export {};
//# sourceMappingURL=getWalletTokenTransfersOperation.d.ts.map