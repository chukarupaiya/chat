"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTransactionOperation = void 0;
var dataTypes_1 = require("../../dataTypes");
var EvmChainResolver_1 = require("../../EvmChainResolver");
/** Get the contents of a transaction by the given transaction hash. */
exports.getTransactionOperation = {
    method: 'GET',
    name: 'getTransaction',
    id: 'getTransaction',
    groupName: 'transaction',
    isNullable: true,
    urlPathPattern: '/transaction/{transactionHash}',
    urlPathParamNames: ['transactionHash'],
    urlSearchParamNames: ['chain'],
    getRequestUrlParams: getRequestUrlParams,
    serializeRequest: serializeRequest,
    deserializeRequest: deserializeRequest,
    deserializeResponse: deserializeResponse,
};
function getRequestUrlParams(request, core) {
    return {
        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,
        transactionHash: request.transactionHash,
    };
}
function serializeRequest(request, core) {
    return {
        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,
        transactionHash: request.transactionHash,
    };
}
function deserializeRequest(jsonRequest, core) {
    return {
        chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),
        transactionHash: jsonRequest.transactionHash,
    };
}
//TODO: I noticed that the docs comes with a type of "string | unknown" which automatically resolves to "unknown". I think we should fix this in the api, casting for now
function deserializeResponse(jsonResponse, request, core) {
    var _a;
    return dataTypes_1.EvmTransaction.create({
        from: jsonResponse.from_address,
        to: jsonResponse.to_address,
        value: jsonResponse.value,
        gasPrice: jsonResponse.gas_price,
        gasUsed: jsonResponse.receipt_gas_used,
        data: jsonResponse.input,
        nonce: jsonResponse.nonce,
        blockHash: jsonResponse.block_hash,
        blockNumber: jsonResponse.block_number,
        blockTimestamp: jsonResponse.block_timestamp,
        index: jsonResponse.transaction_index,
        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core),
        hash: jsonResponse.hash,
        gas: jsonResponse.gas,
        cumulativeGasUsed: jsonResponse.receipt_cumulative_gas_used,
        contractAddress: jsonResponse.receipt_contract_address,
        logs: ((_a = jsonResponse.logs) !== null && _a !== void 0 ? _a : []).map(function (log) {
            return dataTypes_1.EvmTransactionLog.create({
                address: log.address,
                blockHash: log.block_hash,
                blockNumber: +log.block_number,
                data: log.data,
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                topics: [log.topic0, log.topic1, log.topic2, log.topic3],
                transactionHash: log.transaction_hash,
                blockTimestamp: log.block_timestamp,
                logIndex: +log.log_index,
                transactionIndex: +log.transaction_index,
                chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core),
            }, core);
        }),
        receiptRoot: jsonResponse.receipt_root,
        receiptStatus: jsonResponse.receipt_status,
    }, core);
}
//# sourceMappingURL=getTransactionOperation.js.map