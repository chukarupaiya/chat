"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.runContractFunctionOperation = void 0;
var dataTypes_1 = require("../../dataTypes");
var EvmChainResolver_1 = require("../../EvmChainResolver");
/** Run a given function of a contract ABI and retrieve readonly data. */
exports.runContractFunctionOperation = {
    method: 'POST',
    name: 'runContractFunction',
    id: 'runContractFunction',
    groupName: 'utils',
    urlPathParamNames: ['address'],
    urlSearchParamNames: ['chain', 'functionName'],
    urlPathPattern: '/{address}/function',
    bodyType: 'properties',
    bodyParamNames: ['abi', 'params'],
    getRequestUrlParams: getRequestUrlParams,
    getRequestBody: getRequestBody,
    deserializeResponse: deserializeResponse,
    serializeRequest: serializeRequest,
    deserializeRequest: deserializeRequest,
};
// Methods
function getRequestUrlParams(request, core) {
    return {
        address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,
        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,
        function_name: request.functionName,
    };
}
function getRequestBody(request) {
    return {
        abi: request.abi,
        params: request.params,
    };
}
function deserializeResponse(jsonResponse) {
    return jsonResponse;
}
function serializeRequest(request, core) {
    return {
        address: dataTypes_1.EvmAddress.create(request.address, core).checksum,
        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,
        functionName: request.functionName,
        abi: request.abi,
        params: request.params,
    };
}
function deserializeRequest(jsonRequest, core) {
    return {
        address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),
        chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),
        functionName: jsonRequest.functionName,
        abi: jsonRequest.abi,
        params: jsonRequest.params,
    };
}
//# sourceMappingURL=runContractFunctionOperation.js.map