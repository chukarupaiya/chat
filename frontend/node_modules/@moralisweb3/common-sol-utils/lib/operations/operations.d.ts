export declare const operations: (import("@moralisweb3/common-core").Operation<import("./account/getBalanceOperation").GetBalanceRequest, {
    address: string;
    network: "mainnet" | "devnet";
}, import("..").SolNative, import("./account/getBalanceOperation").GetBalanceJSONResponse> | import("@moralisweb3/common-core").Operation<import("./account/getNFTsOperation").GetNFTsRequest, {
    address: string;
    network: "mainnet" | "devnet";
}, {
    associatedTokenAddress: import("..").SolAddress;
    mint: import("..").SolAddress;
}[], import("./account/getNFTsOperation").GetNFTsJSONResponse> | import("@moralisweb3/common-core").Operation<import("./account/getPortfolioOperation").GetPortfolioRequest, {
    address: string;
    network: "mainnet" | "devnet";
}, {
    nativeBalance: import("..").SolNative;
    nfts: {
        associatedTokenAddress: import("..").SolAddress;
        mint: import("..").SolAddress;
    }[];
    tokens: {
        associatedTokenAddress: import("..").SolAddress;
        mint: import("..").SolAddress;
        amount: import("..").SolNative;
    }[];
}, import("./account/getPortfolioOperation").GetPortfolioJSONResponse> | import("@moralisweb3/common-core").Operation<import("./nft/getNFTMetadataOperation").GetNFTMetadataRequest, {
    address: string;
    network: "mainnet" | "devnet";
}, {
    mint: import("..").SolAddress;
    standard: string;
    name: string;
    symbol: string;
    metaplex: {
        metadataUri: string;
        updateAuthority: import("..").SolAddress;
        sellerFeeBasisPoints: number;
        primarySaleHappened: boolean;
        isMutable: boolean;
        masterEdition: boolean;
    };
}, import("./nft/getNFTMetadataOperation").GetNFTMetadataJSONResponse> | import("@moralisweb3/common-core").Operation<import("./token/getTokenPriceOperation").GetTokenPriceRequest, {
    address: string;
    network: "mainnet" | "devnet";
}, {
    nativePrice: {
        value: import("..").SolNative;
        decimals: number;
        name: string;
        symbol: string;
    };
    usdPrice: number;
    exchangeAddress: import("..").SolAddress;
    exchangeName: string;
}, import("./token/getTokenPriceOperation").GetTokenPriceJSONResponse>)[];
//# sourceMappingURL=operations.d.ts.map