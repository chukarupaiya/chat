"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EvmStreamResultFormatter = void 0;
var EvmStreamResultFormatter = /** @class */ (function () {
    function EvmStreamResultFormatter() {
    }
    EvmStreamResultFormatter.toJSON = function (data) {
        return __assign(__assign({}, data), { erc20Transfers: data.erc20Transfers.map(function (value) { return value.toJSON(); }), erc20Approvals: data.erc20Approvals.map(function (value) { return value.toJSON(); }), nftTransfers: data.nftTransfers.map(function (value) { return value.toJSON(); }), nftApprovals: {
                ERC721: data.nftApprovals.ERC721.map(function (value) { return value.toJSON(); }),
                ERC1155: data.nftApprovals.ERC1155.map(function (value) { return value.toJSON(); }),
            }, chain: data.chain.format(), block: data.block.toJSON(), logs: data.logs.map(function (value) { return value.toJSON(); }), txs: data.txs.map(function (value) { return value.toJSON(); }), txsInternal: data.txsInternal.map(function (value) { return value.toJSON(); }), abi: data.abi, nativeBalances: data.nativeBalances.map(function (nativeBalance) { return nativeBalance.toJSON(); }) });
    };
    return EvmStreamResultFormatter;
}());
exports.EvmStreamResultFormatter = EvmStreamResultFormatter;
//# sourceMappingURL=EvmStreamResultFormatter.js.map