import Core from '@moralisweb3/common-core';
import { EvmSimpleBlock, EvmChain } from '@moralisweb3/common-evm-utils';
import { Block, IERC20Approval, IERC20Transfer, INFTTransfer, InternalTransaction, IOldNFTApproval, Log, Transaction, INativeBalance } from '@moralisweb3/streams-typings';
import { StreamErc1155Approval } from '../StreamErc1155Approval/StreamErc1155Approval';
import { StreamErc20Approval } from '../StreamErc20Approval/StreamErc20Approval';
import { StreamErc20Transfer } from '../StreamErc20Transfer/StreamErc20Transfer';
import { StreamErc721Approval } from '../StreamErc721Approval/StreamErc721Approval';
import { StreamEvmInternalTransaction } from '../StreamEvmInternalTransaction/StreamEvmInternalTransaction';
import { StreamEvmNftTransfer } from '../StreamEvmNftTransfer/StreamEvmNftTransfer';
import { StreamEvmTransaction } from '../StreamEvmTransaction/StreamEvmTransaction';
import { StreamEvmTransactionLog } from '../StreamEvmTransactionLog/StreamEvmTransactionLog';
import { StreamNativeBalance } from '../StreamNativeBalance';
import { EvmStreamResultData, EvmStreamResultInput } from './types';
export declare class EvmStreamResultParser {
    static parse: (value: EvmStreamResultInput, core: Core) => EvmStreamResultData;
    static parseChainId(value: string, core: Core): EvmChain;
    static parseErc20Transfers(value: IERC20Transfer[], chain: EvmChain): StreamErc20Transfer[];
    static parseErc20Approvals(value: IERC20Approval[], chain: EvmChain): StreamErc20Approval[];
    static parseNftTransfers(value: INFTTransfer[], chain: EvmChain): StreamEvmNftTransfer[];
    static parseNftApprovals(value: IOldNFTApproval, chain: EvmChain): {
        ERC721: StreamErc721Approval[];
        ERC1155: StreamErc1155Approval[];
    };
    static parseBlock(value: Block, chain: EvmChain): EvmSimpleBlock;
    static parseLogs(value: Log[], chain: EvmChain): StreamEvmTransactionLog[];
    static parseTransactions(value: Transaction[], chain: EvmChain): StreamEvmTransaction[];
    static parseInternalTransactions(value: InternalTransaction[], chain: EvmChain): StreamEvmInternalTransaction[];
    static parseNativeBalances(value: INativeBalance[]): StreamNativeBalance[];
}
//# sourceMappingURL=EvmStreamResultParser.d.ts.map