"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamEvmTransaction = void 0;
var common_core_1 = require("@moralisweb3/common-core");
var common_evm_utils_1 = require("@moralisweb3/common-evm-utils");
var StreamTriggerOutput_1 = require("../StreamTriggerOutput");
/**
 * The StreamEvmTransaction class is a representation of a transaction that is returned by the Moralis Stream API
 *
 * @category DataType
 */
var StreamEvmTransaction = /** @class */ (function () {
    function StreamEvmTransaction(_a, core) {
        var data = __rest(_a, []);
        this._data = StreamEvmTransaction.parse(data, core);
    }
    /**
     * Create a new instance of StreamEvmTransactionish
     *
     * @param data - the StreamEvmTransactionishish type
     * @param core - the Core instance
     * @example
     * ```ts
     * const transaction = StreamEvmTransactionish.create(data);
     * ```
     * @returns an instance of StreamEvmTransaction
     */
    StreamEvmTransaction.create = function (data, core) {
        if (data instanceof StreamEvmTransaction) {
            return data;
        }
        var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();
        return new StreamEvmTransaction(data, finalCore);
    };
    StreamEvmTransaction.parse = function (data, core) {
        var signature = data.r != null && data.s != null && data.v != null
            ? common_evm_utils_1.EvmSignature.create({ r: data.r, s: data.s, v: data.v })
            : undefined;
        return __assign(__assign({}, data), { chain: common_evm_utils_1.EvmChain.create(data.chain, core), gas: (0, common_core_1.maybe)(data.gas, common_core_1.BigNumber.create), gasPrice: (0, common_core_1.maybe)(data.gasPrice, common_core_1.BigNumber.create), nonce: (0, common_core_1.maybe)(data.nonce, common_core_1.BigNumber.create), input: (0, common_core_1.maybe)(data.input), fromAddress: common_evm_utils_1.EvmAddress.create(data.fromAddress, core), toAddress: (0, common_core_1.maybe)(data.toAddress, function (address) { return common_evm_utils_1.EvmAddress.create(address, core); }), value: (0, common_core_1.maybe)(data.value, common_core_1.BigNumber.create), type: (0, common_core_1.maybe)(data.type, function (type) { return +type; }), receiptCumulativeGasUsed: (0, common_core_1.maybe)(data.receiptCumulativeGasUsed, common_core_1.BigNumber.create), receiptGasUsed: (0, common_core_1.maybe)(data.receiptGasUsed, common_core_1.BigNumber.create), receiptContractAddress: (0, common_core_1.maybe)(data.receiptContractAddress, function (address) { return common_evm_utils_1.EvmAddress.create(address, core); }), receiptRoot: (0, common_core_1.maybe)(data.receiptRoot), receiptStatus: (0, common_core_1.maybe)(data.receiptStatus, function (status) { return +status; }), signature: signature, transactionIndex: +data.transactionIndex, triggers: (0, common_core_1.maybe)(data.triggers, function (triggers) {
                return triggers.map(function (trigger) { return StreamTriggerOutput_1.StreamTriggerOutput.create(trigger, core); });
            }) });
    };
    /**
     * Compares two StreamEvmTransaction data. It checks a deep equality check of both values.
     * @param valueA - the first StreamEvmTransactionish data to compare
     * @param valueB - the second StreamEvmTransactionish data to compare
     * @returns true if the values are equal, false otherwise
     * @example
     * ```ts
     *  StreamEvmTransaction.equals(valueA, valueB);
     * ```
     */
    StreamEvmTransaction.equals = function (valueA, valueB) {
        var _a, _b;
        var transactionA = StreamEvmTransaction.create(valueA);
        var transactionB = StreamEvmTransaction.create(valueB);
        if (!transactionA.chain.equals(transactionB.chain)) {
            return false;
        }
        if (transactionA.hash !== transactionB.hash) {
            return false;
        }
        if (((_a = transactionA.triggers) === null || _a === void 0 ? void 0 : _a.length) !== ((_b = transactionB.triggers) === null || _b === void 0 ? void 0 : _b.length) ||
            !StreamTriggerOutput_1.StreamTriggerOutput.arrayEquals(transactionA.triggers || [], transactionB.triggers || [])) {
            return false;
        }
        return true;
    };
    /**
     * Compares an StreamEvmTransactionish data to this StreamEvmTransaction instance.
     * @param value - the value to compare
     * @returns true if the value is equal to the current instance, false otherwise
     * @example
     * ```ts
     * transaction.equals(value);
     * ```
     */
    StreamEvmTransaction.prototype.equals = function (value) {
        return StreamEvmTransaction.equals(this, value);
    };
    /**
     * Converts the StreamEvmTransaction instance to a JSON object.
     * @returns JSON object of the StreamEvmTransaction instance
     * @example `transaction.toJSON()`
     */
    StreamEvmTransaction.prototype.toJSON = function () {
        var _a = this._data, chain = _a.chain, gas = _a.gas, gasPrice = _a.gasPrice, nonce = _a.nonce, fromAddress = _a.fromAddress, toAddress = _a.toAddress, value = _a.value, receiptContractAddress = _a.receiptContractAddress, receiptCumulativeGasUsed = _a.receiptCumulativeGasUsed, receiptGasUsed = _a.receiptGasUsed, signature = _a.signature, triggers = _a.triggers, data = __rest(_a, ["chain", "gas", "gasPrice", "nonce", "fromAddress", "toAddress", "value", "receiptContractAddress", "receiptCumulativeGasUsed", "receiptGasUsed", "signature", "triggers"]);
        return __assign(__assign({}, data), { chain: chain.format(), gas: gas === null || gas === void 0 ? void 0 : gas.toString(), gasPrice: gasPrice === null || gasPrice === void 0 ? void 0 : gasPrice.toString(), nonce: nonce === null || nonce === void 0 ? void 0 : nonce.toString(), fromAddress: fromAddress.format(), toAddress: toAddress === null || toAddress === void 0 ? void 0 : toAddress.format(), value: value === null || value === void 0 ? void 0 : value.toString(), receiptCumulativeGasUsed: receiptCumulativeGasUsed === null || receiptCumulativeGasUsed === void 0 ? void 0 : receiptCumulativeGasUsed.toString(), receiptGasUsed: receiptGasUsed === null || receiptGasUsed === void 0 ? void 0 : receiptGasUsed.toString(), receiptContractAddress: receiptContractAddress === null || receiptContractAddress === void 0 ? void 0 : receiptContractAddress.format(), r: signature === null || signature === void 0 ? void 0 : signature.r, s: signature === null || signature === void 0 ? void 0 : signature.s, v: signature === null || signature === void 0 ? void 0 : signature.v, triggers: triggers === null || triggers === void 0 ? void 0 : triggers.map(function (trigger) { return trigger.format(); }) });
    };
    /**
     * Converts the StreamEvmTransaction instance to a JSON object.
     * @returns JSON object of the StreamEvmTransaction instance
     * @example `transaction.toJSON()`
     */
    StreamEvmTransaction.prototype.format = function () {
        return this.toJSON();
    };
    Object.defineProperty(StreamEvmTransaction.prototype, "chain", {
        get: function () {
            return this._data.chain;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "input", {
        get: function () {
            return this._data.input;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "transactionIndex", {
        get: function () {
            return this._data.transactionIndex;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "fromAddress", {
        get: function () {
            return this._data.fromAddress;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "toAddress", {
        get: function () {
            return this._data.toAddress;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "receiptGasUsed", {
        get: function () {
            return this._data.receiptGasUsed;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "receiptCumulativeGasUsed", {
        get: function () {
            return this._data.receiptCumulativeGasUsed;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "receiptContractAddress", {
        get: function () {
            return this._data.receiptContractAddress;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "signature", {
        get: function () {
            return this._data.signature;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "r", {
        get: function () {
            var _a;
            return (_a = this.signature) === null || _a === void 0 ? void 0 : _a.r;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "s", {
        get: function () {
            var _a;
            return (_a = this.signature) === null || _a === void 0 ? void 0 : _a.s;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "v", {
        get: function () {
            var _a;
            return (_a = this.signature) === null || _a === void 0 ? void 0 : _a.v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "hash", {
        get: function () {
            return this._data.hash;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "gas", {
        get: function () {
            return this._data.gas;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "gasPrice", {
        get: function () {
            return this._data.gasPrice;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "nonce", {
        get: function () {
            return this._data.nonce;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "value", {
        get: function () {
            return this._data.value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "type", {
        get: function () {
            return this._data.type;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "receiptRoot", {
        get: function () {
            return this._data.receiptRoot;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "receiptStatus", {
        get: function () {
            return this._data.receiptStatus;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StreamEvmTransaction.prototype, "triggers", {
        get: function () {
            return this._data.triggers;
        },
        enumerable: false,
        configurable: true
    });
    return StreamEvmTransaction;
}());
exports.StreamEvmTransaction = StreamEvmTransaction;
//# sourceMappingURL=StreamEvmTransaction.js.map