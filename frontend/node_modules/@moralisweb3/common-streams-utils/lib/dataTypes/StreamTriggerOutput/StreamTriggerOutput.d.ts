import Core, { MoralisDataObject } from '@moralisweb3/common-core';
import { StreamTriggerOutputData, StreamTriggerOutputInput, StreamTriggerOutputJSON } from './types';
export type StreamTriggerOutputish = StreamTriggerOutput | StreamTriggerOutputInput | StreamTriggerOutputData;
/**
 * The StreamTrigger class is a representation of a stream trigger that is used by the Moralis Stream API
 *
 * @category DataType
 */
export declare class StreamTriggerOutput implements MoralisDataObject {
    private readonly _data;
    constructor(data: StreamTriggerOutputInput, core: Core);
    static create(data: StreamTriggerOutputish, core?: Core): StreamTriggerOutput;
    private static parse;
    /**
     * Compares two StreamTriggerOutput data. It checks a deep equality check of both values.
     * @param valueA - the first StreamTriggerOutputish data to compare
     * @param valueB - the second StreamTriggerOutputish data to compare
     * @returns true if the values are equal, false otherwise
     * @example
     * ```ts
     *  StreamTriggerOutput.equals(valueA, valueB);
     * ```
     */
    static equals(valueA: StreamTriggerOutputish, valueB: StreamTriggerOutputish): boolean;
    /**
     * Compares two StreamTriggerOutput arrays. It checks a deep equality check of both values, meaning that all the values have to be on both arrays.
     * @param valueA - the first StreamTriggerOutputish[] data to compare
     * @param valueB - the second StreamTriggerOutputish[] data to compare
     * @returns true if all values are equal, false otherwise
     * @example
     * ```ts
     *  StreamTriggerOutput.arrayEquals(valueA, valueB);
     * ```
     */
    static arrayEquals(valueA: StreamTriggerOutputish[], valueB: StreamTriggerOutputish[]): boolean;
    /**
     * Compares an StreamTriggerOutputish data to this StreamTriggerOutput instance.
     * @param value - the value to compare
     * @returns true if the value is equal to the current instance, false otherwise
     * @example
     * ```ts
     * streamTriggerOutput.equals(value);
     * ```
     */
    equals(value: StreamTriggerOutputish): boolean;
    /**
     * Converts the StreamTriggerOutput instance to a JSON object.
     * @returns JSON object of the StreamTriggerOutput instance
     * @example `streamTriggerOutput.toJSON()`
     */
    toJSON(): StreamTriggerOutputJSON;
    /**
     * Converts the StreamTriggerOutput instance to a JSON object.
     * @returns JSON object of the StreamTriggerOutput instance
     * @example `streamTriggerOutput.format()`
     */
    format(): StreamTriggerOutputJSON;
    get name(): string;
    get value(): string;
}
//# sourceMappingURL=StreamTriggerOutput.d.ts.map