import { Camelize, Operation, ResponseAdapter } from '@moralisweb3/common-core';
import { AptosAddress, AptosAddressish } from '@moralisweb3/common-aptos-utils';
import { operations } from '../openapi';
type OperationId = 'aptosStreamsAddAddresses';
type PathParams = operations[OperationId]['parameters']['path'];
type BodyParams = operations[OperationId]['requestBody']['content']['application/json'];
type RequestParams = PathParams & BodyParams;
type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface AddAddressAptosRequest extends Camelize<Omit<RequestParams, 'address'>> {
    address: AptosAddressish | AptosAddressish[];
}
export type AddAddressAptosJSONRequest = ReturnType<typeof serializeRequest>;
export type AddAddressAptosJSONResponse = SuccessResponse;
export type AddAddressAptosResponse = ReturnType<typeof deserializeResponse>;
export interface AddAddressAptosResponseAdapter extends ResponseAdapter<AddAddressAptosResponse, AddAddressAptosJSONResponse> {
}
export declare const addAddressAptosOperation: Operation<AddAddressAptosRequest, AddAddressAptosJSONRequest, AddAddressAptosResponse, AddAddressAptosJSONResponse>;
declare function deserializeResponse(jsonResponse: AddAddressAptosJSONResponse): {
    address: AptosAddress | AptosAddress[] | undefined;
    streamId: string;
};
declare function serializeRequest(request: AddAddressAptosRequest): {
    id: string;
    address: string | string[];
};
export {};
//# sourceMappingURL=addAddressAptosOperation.d.ts.map