"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addAddressAptosOperation = void 0;
var common_core_1 = require("@moralisweb3/common-core");
var common_aptos_utils_1 = require("@moralisweb3/common-aptos-utils");
exports.addAddressAptosOperation = {
    method: 'POST',
    name: 'addAddressAptos',
    id: 'aptosStreamsAddAddresses',
    groupName: 'aptosStreams',
    urlPathPattern: '/streams/aptos/{id}/address',
    bodyParamNames: ['address'],
    urlPathParamNames: ['id'],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams,
    getRequestBody: getRequestBody,
    deserializeResponse: deserializeResponse,
    serializeRequest: serializeRequest,
    deserializeRequest: deserializeRequest,
};
// Methods
function getRequestUrlParams(request) {
    return {
        id: request.id,
    };
}
function getRequestBody(request) {
    return {
        address: Array.isArray(request.address)
            ? request.address.map(function (a) { return common_aptos_utils_1.AptosAddress.create(a).address; })
            : common_aptos_utils_1.AptosAddress.create(request.address).address,
    };
}
function deserializeResponse(jsonResponse) {
    var data = (0, common_core_1.toCamelCase)(jsonResponse);
    return __assign(__assign({}, data), { address: data.address
            ? typeof data.address === 'string'
                ? common_aptos_utils_1.AptosAddress.create(data.address)
                : data.address.map(function (address) { return common_aptos_utils_1.AptosAddress.create(address); })
            : undefined });
}
function serializeRequest(request) {
    return {
        id: request.id,
        address: Array.isArray(request.address)
            ? request.address.map(function (a) { return common_aptos_utils_1.AptosAddress.create(a).address; })
            : common_aptos_utils_1.AptosAddress.create(request.address).address,
    };
}
function deserializeRequest(jsonRequest) {
    return {
        id: jsonRequest.id,
        address: Array.isArray(jsonRequest.address)
            ? jsonRequest.address.map(function (a) { return common_aptos_utils_1.AptosAddress.create(a); })
            : common_aptos_utils_1.AptosAddress.create(jsonRequest.address),
    };
}
//# sourceMappingURL=addAddressAptosOperation.js.map