import { Camelize, Operation, ResponseAdapter } from '@moralisweb3/common-core';
import { AptosAddressish } from '@moralisweb3/common-aptos-utils';
import { operations } from '../openapi';
type OperationId = 'aptosStreamsDeleteAddresses';
type PathParams = operations[OperationId]['parameters']['path'];
type BodyParams = operations[OperationId]['requestBody']['content']['application/json'];
type RequestParams = PathParams & BodyParams;
type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface DeleteAddressAptosRequest extends Camelize<Omit<RequestParams, 'address'>> {
    address: AptosAddressish | AptosAddressish[];
}
export type DeleteAddressAptosJSONRequest = ReturnType<typeof serializeRequest>;
export type DeleteAddressAptosJSONResponse = SuccessResponse;
export type DeleteAddressAptosResponse = ReturnType<typeof deserializeResponse>;
export interface DeleteAddressAptosResponseAdapter extends ResponseAdapter<DeleteAddressAptosResponse, DeleteAddressAptosJSONResponse> {
}
export declare const deleteAddressAptosOperation: Operation<DeleteAddressAptosRequest, DeleteAddressAptosJSONRequest, DeleteAddressAptosResponse, DeleteAddressAptosJSONResponse>;
declare function deserializeResponse(jsonResponse: DeleteAddressAptosJSONResponse): {
    address: string & (string | undefined)[];
    streamId: string;
};
declare function serializeRequest(request: DeleteAddressAptosRequest): {
    id: string;
    address: string | string[];
};
export {};
//# sourceMappingURL=deleteAddressAptosOperation.d.ts.map