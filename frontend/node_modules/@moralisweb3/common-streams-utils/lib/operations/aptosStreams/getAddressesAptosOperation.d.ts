import { AptosAddress } from '@moralisweb3/common-aptos-utils';
import { Camelize, PaginatedOperation, PaginatedResponseAdapter } from '@moralisweb3/common-core';
import { operations } from '../openapi';
type OperationId = 'aptosStreamsGetAddresses';
type PathParams = operations[OperationId]['parameters']['path'];
type QueryParams = operations[OperationId]['parameters']['query'];
type RequestParams = PathParams & QueryParams;
type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface GetAddressesAptosRequest extends Camelize<Omit<RequestParams, 'limit'>> {
    limit?: number;
}
export type GetAddressesAptosJSONRequest = ReturnType<typeof serializeRequest>;
export type GetAddressesAptosJSONResponse = SuccessResponse;
export type GetAddressesAptosResponse = ReturnType<typeof deserializeResponse>;
export interface GetAddressesAptosResponseAdapter extends PaginatedResponseAdapter<GetAddressesAptosResponse, GetAddressesAptosJSONResponse> {
}
export declare const getAddressesAptosOperation: PaginatedOperation<GetAddressesAptosRequest, GetAddressesAptosJSONRequest, GetAddressesAptosResponse, GetAddressesAptosJSONResponse['result']>;
declare function deserializeResponse(jsonResponse: GetAddressesAptosJSONResponse): {
    result: AptosAddress[];
    total: number;
};
declare function serializeRequest(request: GetAddressesAptosRequest): {
    id: string;
    limit: number | undefined;
    cursor: string | undefined;
};
export {};
//# sourceMappingURL=getAddressesAptosOperation.d.ts.map