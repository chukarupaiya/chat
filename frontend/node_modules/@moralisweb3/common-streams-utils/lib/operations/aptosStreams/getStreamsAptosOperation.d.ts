import { Camelize, PaginatedOperation, PaginatedResponseAdapter } from '@moralisweb3/common-core';
import { AptosStream } from '../../dataTypes';
import { operations } from '../openapi';
type OperationId = 'aptosStreamsGetAll';
type QueryParams = operations[OperationId]['parameters']['query'];
type RequestParams = QueryParams;
type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface GetStreamsAptosRequest extends Camelize<RequestParams> {
}
export type GetStreamsAptosJSONRequest = ReturnType<typeof serializeRequest>;
export type GetStreamsAptosJSONResponse = SuccessResponse;
export type GetStreamsAptosResponse = ReturnType<typeof deserializeResponse>;
export interface GetStreamsAptosResponseAdapter extends PaginatedResponseAdapter<GetStreamsAptosResponse, GetStreamsAptosJSONResponse['result']> {
}
export declare const getStreamsAptosOperation: PaginatedOperation<GetStreamsAptosRequest, GetStreamsAptosJSONRequest, GetStreamsAptosResponse, GetStreamsAptosJSONResponse['result']>;
declare function deserializeResponse(jsonResponse: GetStreamsAptosJSONResponse): AptosStream[];
declare function serializeRequest(request: GetStreamsAptosRequest): {
    cursor: string | undefined;
    limit: number;
};
export {};
//# sourceMappingURL=getStreamsAptosOperation.d.ts.map