"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateStreamAptosOperation = void 0;
var common_aptos_utils_1 = require("@moralisweb3/common-aptos-utils");
var dataTypes_1 = require("../../dataTypes");
exports.updateStreamAptosOperation = {
    method: 'POST',
    name: 'updateStreamAptos',
    id: 'aptosStreamsUpdate',
    groupName: 'aptosStreams',
    urlPathParamNames: ['id'],
    urlPathPattern: '/streams/aptos/{id}',
    bodyParamNames: [
        'allAddresses',
        'demo',
        'description',
        'includeChanges',
        'includeEvents',
        'includePayload',
        'network',
        'events',
        'functions',
        'tag',
        'webhookUrl',
    ],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams,
    getRequestBody: getRequestBody,
    deserializeResponse: deserializeResponse,
    serializeRequest: serializeRequest,
    deserializeRequest: deserializeRequest,
};
// Methods
function getRequestUrlParams(request) {
    return {
        id: request.id,
    };
}
function getRequestBody(request) {
    return {
        allAddresses: request.allAddresses,
        demo: request.demo,
        description: request.description,
        includeChanges: request.includeChanges,
        includeEvents: request.includeEvents,
        includePayload: request.includePayload,
        network: request.network.map(function (network) { return common_aptos_utils_1.AptosNetwork.create(network); }),
        events: request.events,
        functions: request.functions,
        tag: request.tag,
        webhookUrl: request.webhookUrl,
    };
}
function deserializeResponse(jsonResponse) {
    return dataTypes_1.AptosStream.create(jsonResponse);
}
function serializeRequest(request) {
    return {
        id: request.id,
        allAddresses: request.allAddresses,
        demo: request.demo,
        description: request.description,
        includeChanges: request.includeChanges,
        includeEvents: request.includeEvents,
        includePayload: request.includePayload,
        network: request.network.map(function (network) { return common_aptos_utils_1.AptosNetwork.create(network).network; }),
        events: request.events,
        functions: request.functions,
        tag: request.tag,
        webhookUrl: request.webhookUrl,
    };
}
function deserializeRequest(jsonRequest) {
    return {
        id: jsonRequest.id,
        allAddresses: jsonRequest.allAddresses,
        demo: jsonRequest.demo,
        description: jsonRequest.description,
        includeChanges: jsonRequest.includeChanges,
        includeEvents: jsonRequest.includeEvents,
        includePayload: jsonRequest.includePayload,
        network: jsonRequest.network.map(function (network) { return common_aptos_utils_1.AptosNetwork.create(network); }),
        events: jsonRequest.events,
        functions: jsonRequest.functions,
        tag: jsonRequest.tag,
        webhookUrl: jsonRequest.webhookUrl,
    };
}
//# sourceMappingURL=updateStreamAptosOperation.js.map