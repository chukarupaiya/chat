import { Camelize, Operation, ResponseAdapter } from '@moralisweb3/common-core';
import { operations } from '../openapi';
type OperationId = 'aptosStreamsUpdateStatus';
type PathParams = operations[OperationId]['parameters']['path'];
type BodyParams = operations[OperationId]['requestBody']['content']['application/json'];
type RequestParams = PathParams & BodyParams;
type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface UpdateStreamStatusAptosRequest extends Camelize<RequestParams> {
}
export type UpdateStreamStatusAptosJSONRequest = ReturnType<typeof serializeRequest>;
export type UpdateStreamStatusAptosJSONResponse = SuccessResponse;
export type UpdateStreamStatusAptosResponse = ReturnType<typeof deserializeResponse>;
export interface UpdateStreamStatusAptosResponseAdapter extends ResponseAdapter<UpdateStreamStatusAptosResponse, UpdateStreamStatusAptosJSONResponse> {
}
export declare const updateStreamStatusAptosOperation: Operation<UpdateStreamStatusAptosRequest, UpdateStreamStatusAptosJSONRequest, UpdateStreamStatusAptosResponse, UpdateStreamStatusAptosJSONResponse>;
declare function deserializeResponse(jsonResponse: UpdateStreamStatusAptosJSONResponse): {
    status: "active" | "paused" | "error" | "terminated";
    statusMessage: string;
};
declare function serializeRequest(request: UpdateStreamStatusAptosRequest): {
    id: string;
    status: Camelize<"active" | "paused" | "error" | "terminated">;
};
export {};
//# sourceMappingURL=updateStreamStatusAptosOperation.d.ts.map