import { Camelize, Core, Operation, ResponseAdapter } from '@moralisweb3/common-core';
import { EvmAddress, EvmAddressish } from '@moralisweb3/common-evm-utils';
import { operations } from '../openapi';
type OperationId = 'AddAddressToStream';
type PathParams = operations[OperationId]['parameters']['path'];
type BodyParams = operations[OperationId]['requestBody']['content']['application/json'];
type RequestParams = PathParams & BodyParams;
type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface AddAddressEvmRequest extends Camelize<Omit<RequestParams, 'address'>> {
    address: EvmAddressish | EvmAddressish[];
}
export type AddAddressEvmJSONRequest = ReturnType<typeof serializeRequest>;
export type AddAddressEvmJSONResponse = SuccessResponse;
export type AddAddressEvmResponse = ReturnType<typeof deserializeResponse>;
export interface AddAddressEvmResponseAdapter extends ResponseAdapter<AddAddressEvmResponse, AddAddressEvmJSONResponse> {
}
export declare const addAddressEvmOperation: Operation<AddAddressEvmRequest, AddAddressEvmJSONRequest, AddAddressEvmResponse, AddAddressEvmJSONResponse>;
declare function deserializeResponse(jsonResponse: AddAddressEvmJSONResponse): {
    address: EvmAddress | EvmAddress[] | undefined;
    streamId: string;
};
declare function serializeRequest(request: AddAddressEvmRequest, core: Core): {
    id: string;
    address: string | string[];
};
export {};
//# sourceMappingURL=addAddressEvmOperation.d.ts.map