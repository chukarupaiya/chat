import { Camelize, Core, Operation, ResponseAdapter } from '@moralisweb3/common-core';
import { EvmChainish } from '@moralisweb3/common-evm-utils';
import { EvmStream, StreamTriggerish } from '../../dataTypes';
import { operations } from '../openapi';
type OperationId = 'CreateStream';
type BodyParams = operations[OperationId]['requestBody']['content']['application/json'];
type RequestParams = BodyParams;
type SuccessResponse = operations[OperationId]['responses']['200']['content']['application/json'];
export interface CreateStreamEvmRequest extends Camelize<Omit<RequestParams, 'chainIds' | 'triggers'>> {
    chains: EvmChainish[];
    triggers?: StreamTriggerish[];
}
export type CreateStreamEvmJSONRequest = ReturnType<typeof serializeRequest>;
export type CreateStreamEvmJSONResponse = SuccessResponse;
export type CreateStreamEvmResponse = ReturnType<typeof deserializeResponse>;
export interface CreateStreamEvmResponseAdapter extends ResponseAdapter<CreateStreamEvmResponse, CreateStreamEvmJSONResponse> {
}
export declare const createStreamEvmOperation: Operation<CreateStreamEvmRequest, CreateStreamEvmJSONRequest, CreateStreamEvmResponse, CreateStreamEvmJSONResponse>;
declare function deserializeResponse(jsonResponse: CreateStreamEvmJSONResponse, request: CreateStreamEvmRequest, core: Core): EvmStream;
declare function serializeRequest(request: CreateStreamEvmRequest, core: Core): {
    webhookUrl: string;
    description: string;
    tag: string;
    topic0: string[] | null | undefined;
    allAddresses: boolean | undefined;
    includeNativeTxs: boolean | undefined;
    includeContractLogs: boolean | undefined;
    includeInternalTxs: boolean | undefined;
    chainIds: ("0x1" | "0x5" | "0xaa36a7" | "0x89" | "0x13881" | "0x38" | "0x61" | "0xa86a" | "0xa869" | "0xfa" | "0x19" | "0x152" | "0x2a15c308d" | "0xa4B1")[];
    abi: {
        anonymous?: boolean | undefined;
        constant?: boolean | undefined;
        inputs?: {
            name: string;
            type: string;
            indexed?: boolean | undefined;
            components?: any[] | undefined;
            internalType?: string | undefined;
        }[] | undefined;
        name?: string | undefined;
        outputs?: {
            name: string;
            type: string;
            components?: any[] | undefined;
            internalType?: string | undefined;
        }[] | undefined;
        payable?: boolean | undefined;
        stateMutability?: string | undefined;
        type: string;
        gas?: number | undefined;
    }[] | null | undefined;
    advancedOptions: {
        topic0: string;
        filter?: {
            [key: string]: unknown;
        } | undefined;
        includeNativeTxs?: boolean | undefined;
    }[] | null | undefined;
    demo: boolean | undefined;
    triggers: import("../../dataTypes").StreamTriggerJSON[] | undefined;
};
export {};
//# sourceMappingURL=createStreamEvmOperation.d.ts.map