"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteAddressEvmOperation = void 0;
var common_core_1 = require("@moralisweb3/common-core");
var common_evm_utils_1 = require("@moralisweb3/common-evm-utils");
exports.deleteAddressEvmOperation = {
    method: 'DELETE',
    name: 'deleteAddressEvm',
    id: 'DeleteAddressFromStream',
    groupName: 'evmStreams',
    urlPathParamNames: ['id'],
    urlPathPattern: "/streams/evm/{id}/address",
    bodyParamNames: ['address'],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams,
    getRequestBody: getRequestBody,
    deserializeResponse: deserializeResponse,
    serializeRequest: serializeRequest,
    deserializeRequest: deserializeRequest,
};
// Methods
function getRequestUrlParams(request) {
    return {
        id: request.id,
    };
}
function getRequestBody(request) {
    return {
        address: Array.isArray(request.address)
            ? request.address.map(function (address) { return common_evm_utils_1.EvmAddress.create(address).lowercase; })
            : common_evm_utils_1.EvmAddress.create(request.address).lowercase,
    };
}
function deserializeResponse(jsonResponse, request, core) {
    var data = (0, common_core_1.toCamelCase)(jsonResponse);
    return {
        streamId: jsonResponse.streamId,
        address: data.address
            ? typeof data.address === 'string'
                ? common_evm_utils_1.EvmAddress.create(data.address, core)
                : data.address.map(function (address) { return common_evm_utils_1.EvmAddress.create(address, core); })
            : undefined,
    };
}
function serializeRequest(request, core) {
    return {
        id: request.id,
        address: Array.isArray(request.address)
            ? request.address.map(function (address) { return common_evm_utils_1.EvmAddress.create(address, core).lowercase; })
            : common_evm_utils_1.EvmAddress.create(request.address, core).lowercase,
    };
}
function deserializeRequest(jsonRequest, core) {
    return {
        id: jsonRequest.id,
        address: Array.isArray(jsonRequest.address)
            ? jsonRequest.address.map(function (address) { return common_evm_utils_1.EvmAddress.create(address, core); })
            : common_evm_utils_1.EvmAddress.create(jsonRequest.address, core),
    };
}
//# sourceMappingURL=deleteAddressEvmOperation.js.map