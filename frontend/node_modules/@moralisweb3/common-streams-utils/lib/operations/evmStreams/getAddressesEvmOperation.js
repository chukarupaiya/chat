"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAddressesEvmOperation = void 0;
var common_core_1 = require("@moralisweb3/common-core");
var common_evm_utils_1 = require("@moralisweb3/common-evm-utils");
exports.getAddressesEvmOperation = {
    method: 'GET',
    name: 'getAddressesEvm',
    id: 'GetAddresses',
    groupName: 'evmStreams',
    urlPathParamNames: ['id'],
    urlSearchParamNames: ['cursor', 'limit'],
    urlPathPattern: '/streams/evm/{id}/address',
    firstPageIndex: 0,
    getRequestUrlParams: getRequestUrlParams,
    deserializeResponse: deserializeResponse,
    serializeRequest: serializeRequest,
    deserializeRequest: deserializeRequest,
};
// Methods
function getRequestUrlParams(request) {
    return {
        id: request.id,
        limit: (0, common_core_1.maybe)(request.limit, String),
        cursor: request.cursor,
    };
}
function deserializeResponse(jsonResponse, request, core) {
    var _a;
    return ((_a = jsonResponse.result) !== null && _a !== void 0 ? _a : []).map(function (stream) { return (__assign(__assign({}, stream), { address: stream.address ? common_evm_utils_1.EvmAddress.create(stream.address, core) : undefined })); });
}
function serializeRequest(request) {
    return {
        id: request.id,
        limit: request.limit,
        cursor: request.cursor,
    };
}
function deserializeRequest(jsonRequest) {
    return {
        id: jsonRequest.id,
        limit: jsonRequest.limit,
        cursor: jsonRequest.cursor,
    };
}
//# sourceMappingURL=getAddressesEvmOperation.js.map