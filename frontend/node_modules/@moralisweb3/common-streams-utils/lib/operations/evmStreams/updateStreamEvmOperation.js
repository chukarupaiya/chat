"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateStreamEvmOperation = void 0;
var common_evm_utils_1 = require("@moralisweb3/common-evm-utils");
var dataTypes_1 = require("../../dataTypes");
exports.updateStreamEvmOperation = {
    method: 'POST',
    name: 'updateStreamEvm',
    id: 'UpdateStream',
    groupName: 'evmStreams',
    urlPathParamNames: ['id'],
    urlPathPattern: '/streams/evm/{id}',
    bodyParamNames: [
        'webhookUrl',
        'description',
        'tag',
        'topic0',
        'allAddresses',
        'includeNativeTxs',
        'includeContractLogs',
        'includeInternalTxs',
        'getNativeBalances',
        'chains',
        'abi',
        'advancedOptions',
        'demo',
        'triggers',
    ],
    bodyType: 'properties',
    getRequestUrlParams: getRequestUrlParams,
    getRequestBody: getRequestBody,
    deserializeResponse: deserializeResponse,
    serializeRequest: serializeRequest,
    deserializeRequest: deserializeRequest,
};
// Methods
function getRequestUrlParams(request) {
    return {
        id: request.id,
    };
}
function getRequestBody(request, core) {
    var _a;
    return {
        webhookUrl: request.webhookUrl,
        description: request.description,
        tag: request.tag,
        topic0: request.topic0,
        allAddresses: request.allAddresses,
        includeNativeTxs: request.includeNativeTxs,
        includeContractLogs: request.includeContractLogs,
        includeInternalTxs: request.includeInternalTxs,
        getNativeBalances: request.getNativeBalances,
        chainIds: request.chains.map(function (chain) { return common_evm_utils_1.EvmChain.create(chain, core).apiHex; }),
        abi: request.abi,
        advancedOptions: request.advancedOptions,
        demo: request.demo,
        triggers: (_a = request.triggers) === null || _a === void 0 ? void 0 : _a.map(function (trigger) { return dataTypes_1.StreamTrigger.create(trigger, core); }),
    };
}
function deserializeResponse(jsonResponse, request, core) {
    return dataTypes_1.EvmStream.create(jsonResponse, core);
}
function serializeRequest(request, core) {
    var _a;
    return {
        id: request.id,
        webhookUrl: request.webhookUrl,
        description: request.description,
        tag: request.tag,
        topic0: request.topic0,
        allAddresses: request.allAddresses,
        includeNativeTxs: request.includeNativeTxs,
        includeContractLogs: request.includeContractLogs,
        includeInternalTxs: request.includeInternalTxs,
        chainIds: request.chains.map(function (chain) { return common_evm_utils_1.EvmChain.create(chain, core).apiHex; }),
        abi: request.abi,
        advancedOptions: request.advancedOptions,
        demo: request.demo,
        triggers: (_a = request.triggers) === null || _a === void 0 ? void 0 : _a.map(function (trigger) { return dataTypes_1.StreamTrigger.create(trigger, core).format(); }),
    };
}
function deserializeRequest(jsonRequest, core) {
    var _a;
    return {
        id: jsonRequest.id,
        webhookUrl: jsonRequest.webhookUrl,
        description: jsonRequest.description,
        tag: jsonRequest.tag,
        topic0: jsonRequest.topic0,
        allAddresses: jsonRequest.allAddresses,
        includeNativeTxs: jsonRequest.includeNativeTxs,
        includeContractLogs: jsonRequest.includeContractLogs,
        includeInternalTxs: jsonRequest.includeInternalTxs,
        chains: jsonRequest.chainIds.map(function (chainId) { return common_evm_utils_1.EvmChain.create(chainId, core); }),
        abi: jsonRequest.abi,
        advancedOptions: jsonRequest.advancedOptions,
        demo: jsonRequest.demo,
        triggers: (_a = jsonRequest.triggers) === null || _a === void 0 ? void 0 : _a.map(function (trigger) { return dataTypes_1.StreamTrigger.create(trigger, core); }),
    };
}
//# sourceMappingURL=updateStreamEvmOperation.js.map