"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BatchProcessor = void 0;
var common_1 = require("./common");
var erc20_approvals_processor_1 = require("./erc20-approvals-processor");
var erc20_transfers_processor_1 = require("./erc20-transfers-processor");
var internal_txs_processor_1 = require("./internal-txs-processor");
var logs_processor_1 = require("./logs-processor");
var nft_approvals_processor_1 = require("./nft-approvals-processor");
var nft_transfers_processor_1 = require("./nft-transfers-processor");
var txs_processor_1 = require("./txs-processor");
var BatchProcessor = /** @class */ (function () {
    function BatchProcessor(erc20ApprovalsProcessor, erc20TransfersProcessor, internalTxsProcessor, logsProcessor, nftApprovalsProcessor, nftTransfersProcessor, txsProcessor) {
        this.erc20ApprovalsProcessor = erc20ApprovalsProcessor;
        this.erc20TransfersProcessor = erc20TransfersProcessor;
        this.internalTxsProcessor = internalTxsProcessor;
        this.logsProcessor = logsProcessor;
        this.nftApprovalsProcessor = nftApprovalsProcessor;
        this.nftTransfersProcessor = nftTransfersProcessor;
        this.txsProcessor = txsProcessor;
    }
    BatchProcessor.create = function () {
        var nameBuilder = new common_1.CollectionNameBuilder();
        return new BatchProcessor(new erc20_approvals_processor_1.Erc20ApprovalsProcessor(nameBuilder), new erc20_transfers_processor_1.Erc20TransfersProcessor(nameBuilder), new internal_txs_processor_1.InternalTxsProcessor(nameBuilder), new logs_processor_1.LogsProcessor(nameBuilder), new nft_approvals_processor_1.NftApprovalsProcessor(nameBuilder), new nft_transfers_processor_1.NftTransfersProcessor(nameBuilder), new txs_processor_1.TxsProcessor(nameBuilder));
    };
    BatchProcessor.prototype.process = function (batch) {
        var _this = this;
        return {
            erc20Approvals: function () { return _this.erc20ApprovalsProcessor.process(batch); },
            erc20Transfers: function () { return _this.erc20TransfersProcessor.process(batch); },
            internalTxs: function () { return _this.internalTxsProcessor.process(batch); },
            logs: function () { return _this.logsProcessor.process(batch); },
            nftApprovals: function () { return _this.nftApprovalsProcessor.process(batch); },
            nftTransfers: function () { return _this.nftTransfersProcessor.process(batch); },
            txs: function () { return _this.txsProcessor.process(batch); },
        };
    };
    return BatchProcessor;
}());
exports.BatchProcessor = BatchProcessor;
//# sourceMappingURL=BatchProcessor.js.map