import Core from '@moralisweb3/common-core';
import { EvmStreamNetwork } from '../utils/StreamNetwork';
import { GetStreamAptosRequest, GetStreamEvmRequest, GetStreamAptosResponseAdapter, GetStreamEvmResponseAdapter } from '@moralisweb3/common-streams-utils';
import { AptosStreamNetworkOptions, EvmStreamNetworkOptions } from '../utils/commonNetworkOptions';
interface StreamNetworkOptions {
    /** @deprecated use networkType instead */
    network?: EvmStreamNetwork;
}
export interface GetStreamAptosOptions extends GetStreamAptosRequest, AptosStreamNetworkOptions, StreamNetworkOptions {
}
export interface GetStreamEvmOptions extends GetStreamEvmRequest, EvmStreamNetworkOptions, StreamNetworkOptions {
}
export type GetStreamOptions = GetStreamAptosOptions | GetStreamEvmOptions;
export type MakeGetAptosStream = (getStreamOptions: GetStreamAptosOptions) => Promise<GetStreamAptosResponseAdapter>;
export type MakeGetEvmStream = (getStreamOptions: GetStreamEvmOptions) => Promise<GetStreamEvmResponseAdapter>;
export declare const makeGetStreamById: (core: Core, baseUrl: string) => MakeGetAptosStream & MakeGetEvmStream;
export {};
//# sourceMappingURL=getById.d.ts.map