{"version":3,"file":"generate-diff.js","sourceRoot":"","sources":["../src/generate-diff.ts"],"names":[],"mappings":"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","sourcesContent":["import * as diff from 'diff';\n\ntype Change = diff.Change & { noNewline?: boolean };\n\n/**\n * Splits string into lines, excluding the newline at the end of each\n * line. The trailing newline is optional.\n * @param value - The string value to split into lines\n * @returns The lines, without trailing newlines\n */\nfunction getTrimmedLines(value: string): string[] {\n  const trimmedValue = value.endsWith('\\n')\n    ? value.substring(0, value.length - 1)\n    : value;\n  return trimmedValue.split('\\n');\n}\n\n/**\n * Generates a diff between two multi-line string files. The resulting diff\n * shows any changes using '-' and '+' to indicate the \"old\" and \"new\" version\n * respectively, and includes 2 lines of unchanged content around each changed\n * section where possible.\n * @param before - The string representing the base for the comparison.\n * @param after - The string representing the changes being compared.\n * @returns The genereated text diff\n */\nexport function generateDiff(before: string, after: string): string {\n  const diffResult: Change[] = diff.diffLines(before, after);\n  const penultimateDiffResult = diffResult[diffResult.length - 2] || {};\n  // `diffLines` will always return at least one change object\n  const lastDiffResult = diffResult[diffResult.length - 1];\n\n  // Add notice about newline at end of file\n  if (!lastDiffResult.value.endsWith('\\n')) {\n    lastDiffResult.noNewline = true;\n  }\n  // If the last change is an addition and the penultimate change is a\n  // removal, then the last line of the file is also in the penultimate change.\n  // That's why we're checking to see if the newline notice is needed here as\n  // well.\n  if (\n    lastDiffResult.added &&\n    penultimateDiffResult.removed &&\n    !penultimateDiffResult.value.endsWith('\\n')\n  ) {\n    penultimateDiffResult.noNewline = true;\n  }\n\n  const diffLines = diffResult.flatMap(\n    ({ added, noNewline, removed, value }, index) => {\n      const lines = getTrimmedLines(value);\n      const changedLines = [];\n      if (added || removed) {\n        // Add up to 2 lines of context before each change\n        const previousContext = diffResult[index - 1];\n        if (\n          previousContext &&\n          !previousContext.added &&\n          !previousContext.removed\n        ) {\n          // The diff result prior to an unchanged result is guaranteed to be\n          // either an addition or a removal\n          const previousChange = diffResult[index - 2];\n          const hasPreviousChange = previousChange !== undefined;\n          const previousContextLines = getTrimmedLines(previousContext.value);\n          // Avoid repeating context that has already been included in diff\n          if (!hasPreviousChange || previousContextLines.length >= 3) {\n            const linesOfContext =\n              hasPreviousChange && previousContextLines.length === 3 ? 1 : 2;\n            const previousTwoLines = previousContextLines\n              .slice(-1 * linesOfContext)\n              .map((line) => ` ${line}`);\n            changedLines.push(...previousTwoLines);\n          }\n        }\n        changedLines.push(\n          ...lines.map((line) => `${added ? '+' : '-'}${line}`),\n        );\n      } else if (index > 0) {\n        // Add up to 2 lines of context following a change\n        const nextTwoLines = lines.slice(0, 2).map((line) => ` ${line}`);\n        changedLines.push(...nextTwoLines);\n      }\n      if (noNewline) {\n        changedLines.push('\\\\ No newline at end of file');\n      }\n      return changedLines;\n    },\n  );\n  return diffLines.join('\\n');\n}\n"]}